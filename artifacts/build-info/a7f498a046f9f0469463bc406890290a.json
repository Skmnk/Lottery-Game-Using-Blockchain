{"id":"a7f498a046f9f0469463bc406890290a","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwnerWithProposal} from \"./ConfirmedOwnerWithProposal.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOwnable} from \"../interfaces/IOwnable.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    // solhint-disable-next-line gas-custom-errors\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /// @notice Allows an owner to begin transferring ownership to a new address.\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /// @notice Allows an ownership transfer to be completed by the recipient.\n  function acceptOwnership() external override {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /// @notice Get the current owner\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /// @notice validate, transfer ownership, and emit relevant events\n  function _transferOwnership(address to) private {\n    // solhint-disable-next-line gas-custom-errors\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /// @notice validate access\n  function _validateOwnership() internal view {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /// @notice Reverts if called by anyone other than the contract owner.\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\ninterface IERC677Receiver {\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {VRFV2PlusClient} from \"../libraries/VRFV2PlusClient.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./IVRFSubscriptionV2Plus.sol\";\n\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\n  /**\n   * @notice Request a set of random words.\n   * @param req - a struct containing following fields for randomness request:\n   * keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * requestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * extraArgs - abi-encoded extra args\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\n/// @notice method required to be implemented by all V2Plus consumers.\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\ninterface IVRFMigratableConsumerV2Plus {\n  event CoordinatorSet(address vrfCoordinator);\n\n  /// @notice Sets the VRF Coordinator address\n  /// @notice This method should only be callable by the coordinator or contract owner\n  function setCoordinator(address vrfCoordinator) external;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\n/// @notice related methods implemented by the V2Plus coordinator.\ninterface IVRFSubscriptionV2Plus {\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint256 subId, address to) external;\n\n  /**\n   * @notice Accept subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n   * @dev  to send Native with the call, for example:\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\n   */\n  function createSubscription() external returns (uint256 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return nativeBalance - native balance of the subscription in wei.\n   * @return reqCount - Requests count of subscription.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    external\n    view\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint256 subId) external view returns (bool);\n\n  /**\n   * @notice Paginate through all active VRF subscriptions.\n   * @param startIndex index of the subscription to start from\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\n   */\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\n\n  /**\n   * @notice Fund a subscription with native.\n   * @param subId - ID of the subscription\n   * @notice This method expects msg.value to be greater than or equal to 0.\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// End consumer library.\nlibrary VRFV2PlusClient {\n    // extraArgs will evolve to support new features\n    bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\"));\n    struct ExtraArgsV1 {\n        bool nativePayment;\n    }\n\n    struct RandomWordsRequest {\n        bytes32 keyHash;\n        uint256 subId;\n        uint16 requestConfirmations;\n        uint32 callbackGasLimit;\n        uint32 numWords;\n        bytes extraArgs;\n    }\n\n    function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n        return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\n    }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {EnumerableSet} from \"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\";\nimport {LinkTokenInterface} from \"../../shared/interfaces/LinkTokenInterface.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\nimport {AggregatorV3Interface} from \"../../shared/interfaces/AggregatorV3Interface.sol\";\nimport {IERC677Receiver} from \"../../shared/interfaces/IERC677Receiver.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./interfaces/IVRFSubscriptionV2Plus.sol\";\n\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\n  using EnumerableSet for EnumerableSet.UintSet;\n\n  /// @dev may not be provided upon construction on some chains due to lack of availability\n  LinkTokenInterface public LINK;\n  /// @dev may not be provided upon construction on some chains due to lack of availability\n  AggregatorV3Interface public LINK_NATIVE_FEED;\n\n  // We need to maintain a list of consuming addresses.\n  // This bound ensures we are able to loop over them as needed.\n  // Should a user require more consumers, they can use multiple subscriptions.\n  uint16 public constant MAX_CONSUMERS = 100;\n  error TooManyConsumers();\n  error InsufficientBalance();\n  error InvalidConsumer(uint256 subId, address consumer);\n  error InvalidSubscription();\n  error OnlyCallableFromLink();\n  error InvalidCalldata();\n  error MustBeSubOwner(address owner);\n  error PendingRequestExists();\n  error MustBeRequestedOwner(address proposedOwner);\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\n  event FundsRecovered(address to, uint256 amount);\n  event NativeFundsRecovered(address to, uint256 amount);\n  error LinkAlreadySet();\n  error FailedToSendNative();\n  error FailedToTransferLink();\n  error IndexOutOfRange();\n  error LinkNotSet();\n\n  // We use the subscription struct (1 word)\n  // at fulfillment time.\n  struct Subscription {\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\n    uint96 balance; // Common link balance used for all consumer requests.\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\n    // That should be enough to cover most (if not all) subscriptions.\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\n    uint64 reqCount;\n  }\n  // We use the config for the mgmt APIs\n  struct SubscriptionConfig {\n    address owner; // Owner can fund/withdraw/cancel the sub.\n    address requestedOwner; // For safely transferring sub ownership.\n    // Maintains the list of keys in s_consumers.\n    // We do this for 2 reasons:\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\n    // 2. To be able to return the list of all consumers in getSubscription.\n    // Note that we need the s_consumers map to be able to directly check if a\n    // consumer is valid without reading all the consumers from storage.\n    address[] consumers;\n  }\n  struct ConsumerConfig {\n    bool active;\n    uint64 nonce;\n    uint64 pendingReqCount;\n  }\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\n    internal s_consumers;\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\n  // subscription nonce used to construct subId. Rises monotonically\n  uint64 public s_currentSubNonce;\n  // track all subscription id's that were created by this contract\n  // note: access should be through the getActiveSubscriptionIds() view function\n  // which takes a starting index and a max number to fetch in order to allow\n  // \"pagination\" of the subscription ids. in the event a very large number of\n  // subscription id's are stored in this set, they cannot be retrieved in a\n  // single RPC call without violating various size limits.\n  EnumerableSet.UintSet internal s_subIds;\n  // s_totalBalance tracks the total link sent to/from\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\n  // A discrepancy with this contract's link balance indicates someone\n  // sent tokens using transfer and so we may need to use recoverFunds.\n  uint96 public s_totalBalance;\n  // s_totalNativeBalance tracks the total native sent to/from\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\n  // A discrepancy with this contract's native balance indicates someone\n  // sent native using transfer and so we may need to use recoverNativeFunds.\n  uint96 public s_totalNativeBalance;\n  uint96 internal s_withdrawableTokens;\n  uint96 internal s_withdrawableNative;\n\n  event SubscriptionCreated(uint256 indexed subId, address owner);\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\n\n  struct Config {\n    uint16 minimumRequestConfirmations;\n    uint32 maxGasLimit;\n    // Reentrancy protection.\n    bool reentrancyLock;\n    // stalenessSeconds is how long before we consider the feed price to be stale\n    // and fallback to fallbackWeiPerUnitLink.\n    uint32 stalenessSeconds;\n    // Gas to cover oracle payment after we calculate the payment.\n    // We make it configurable in case those operations are repriced.\n    // The recommended number is below, though it may vary slightly\n    // if certain chains do not implement certain EIP's.\n    // 21000 + // base cost of the transaction\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\n    // Total: 37,185 gas.\n    uint32 gasAfterPaymentCalculation;\n    // Flat fee charged per fulfillment in millionths of native.\n    // So fee range is [0, 2^32/10^6].\n    uint32 fulfillmentFlatFeeNativePPM;\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\n    // Should not exceed fulfillmentFlatFeeNativePPM\n    // So fee range is [0, 2^32/10^6].\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\n    uint8 nativePremiumPercentage;\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\n    uint8 linkPremiumPercentage;\n  }\n  Config public s_config;\n\n  error Reentrant();\n  modifier nonReentrant() {\n    _nonReentrant();\n    _;\n  }\n\n  function _nonReentrant() internal view {\n    if (s_config.reentrancyLock) {\n      revert Reentrant();\n    }\n  }\n\n  constructor() ConfirmedOwner(msg.sender) {}\n\n  /**\n   * @notice set the LINK token contract and link native feed to be\n   * used by this coordinator\n   * @param link - address of link token\n   * @param linkNativeFeed address of the link native feed\n   */\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\n    // Disallow re-setting link token because the logic wouldn't really make sense\n    if (address(LINK) != address(0)) {\n      revert LinkAlreadySet();\n    }\n    LINK = LinkTokenInterface(link);\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\n  }\n\n  /**\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n   * @param subId subscription id\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\n   */\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\n    address subOwner = s_subscriptionConfigs[subId].owner;\n    if (subOwner == address(0)) {\n      revert InvalidSubscription();\n    }\n    _cancelSubscriptionHelper(subId, subOwner);\n  }\n\n  /**\n   * @notice Recover link sent with transfer instead of transferAndCall.\n   * @param to address to send link to\n   */\n  function recoverFunds(address to) external onlyOwner {\n    // If LINK is not set, we cannot recover funds.\n    // It is possible that this coordinator address was funded with LINK\n    // by accident by a user but the LINK token needs to be set first\n    // before we can recover it.\n    if (address(LINK) == address(0)) {\n      revert LinkNotSet();\n    }\n\n    uint256 externalBalance = LINK.balanceOf(address(this));\n    uint256 internalBalance = uint256(s_totalBalance);\n    if (internalBalance > externalBalance) {\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\n    }\n    if (internalBalance < externalBalance) {\n      uint256 amount = externalBalance - internalBalance;\n      if (!LINK.transfer(to, amount)) {\n        revert FailedToTransferLink();\n      }\n      emit FundsRecovered(to, amount);\n    }\n    // If the balances are equal, nothing to be done.\n  }\n\n  /**\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\n   * @param to address to send native to\n   */\n  function recoverNativeFunds(address payable to) external onlyOwner {\n    uint256 externalBalance = address(this).balance;\n    uint256 internalBalance = uint256(s_totalNativeBalance);\n    if (internalBalance > externalBalance) {\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\n    }\n    if (internalBalance < externalBalance) {\n      uint256 amount = externalBalance - internalBalance;\n      (bool sent, ) = to.call{value: amount}(\"\");\n      if (!sent) {\n        revert FailedToSendNative();\n      }\n      emit NativeFundsRecovered(to, amount);\n    }\n    // If the balances are equal, nothing to be done.\n  }\n\n  /*\n   * @notice withdraw LINK earned through fulfilling requests\n   * @param recipient where to send the funds\n   * @param amount amount to withdraw\n   */\n  function withdraw(address recipient) external nonReentrant onlyOwner {\n    if (address(LINK) == address(0)) {\n      revert LinkNotSet();\n    }\n    if (s_withdrawableTokens == 0) {\n      revert InsufficientBalance();\n    }\n    uint96 amount = s_withdrawableTokens;\n    s_withdrawableTokens -= amount;\n    s_totalBalance -= amount;\n    if (!LINK.transfer(recipient, amount)) {\n      revert InsufficientBalance();\n    }\n  }\n\n  /*\n   * @notice withdraw native earned through fulfilling requests\n   * @param recipient where to send the funds\n   * @param amount amount to withdraw\n   */\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\n    if (s_withdrawableNative == 0) {\n      revert InsufficientBalance();\n    }\n    // Prevent re-entrancy by updating state before transfer.\n    uint96 amount = s_withdrawableNative;\n    s_withdrawableNative -= amount;\n    s_totalNativeBalance -= amount;\n    (bool sent, ) = recipient.call{value: amount}(\"\");\n    if (!sent) {\n      revert FailedToSendNative();\n    }\n  }\n\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\n    if (msg.sender != address(LINK)) {\n      revert OnlyCallableFromLink();\n    }\n    if (data.length != 32) {\n      revert InvalidCalldata();\n    }\n    uint256 subId = abi.decode(data, (uint256));\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    // We do not check that the sender is the subscription owner,\n    // anyone can fund a subscription.\n    uint256 oldBalance = s_subscriptions[subId].balance;\n    s_subscriptions[subId].balance += uint96(amount);\n    s_totalBalance += uint96(amount);\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    // We do not check that the msg.sender is the subscription owner,\n    // anyone can fund a subscription.\n    // We also do not check that msg.value > 0, since that's just a no-op\n    // and would be a waste of gas on the caller's part.\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\n    s_totalNativeBalance += uint96(msg.value);\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    public\n    view\n    override\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\n  {\n    subOwner = s_subscriptionConfigs[subId].owner;\n    if (subOwner == address(0)) {\n      revert InvalidSubscription();\n    }\n    return (\n      s_subscriptions[subId].balance,\n      s_subscriptions[subId].nativeBalance,\n      s_subscriptions[subId].reqCount,\n      subOwner,\n      s_subscriptionConfigs[subId].consumers\n    );\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function getActiveSubscriptionIds(\n    uint256 startIndex,\n    uint256 maxCount\n  ) external view override returns (uint256[] memory ids) {\n    uint256 numSubs = s_subIds.length();\n    if (startIndex >= numSubs) revert IndexOutOfRange();\n    uint256 endIndex = startIndex + maxCount;\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\n    uint256 idsLength = endIndex - startIndex;\n    ids = new uint256[](idsLength);\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\n      ids[idx] = s_subIds.at(idx + startIndex);\n    }\n    return ids;\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\n    // Generate a subscription id that is globally unique.\n    uint64 currentSubNonce = s_currentSubNonce;\n    subId = uint256(\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\n    );\n    // Increment the subscription nonce counter.\n    s_currentSubNonce = currentSubNonce + 1;\n    // Initialize storage variables.\n    address[] memory consumers = new address[](0);\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\n      owner: msg.sender,\n      requestedOwner: address(0),\n      consumers: consumers\n    });\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\n    s_subIds.add(subId);\n\n    emit SubscriptionCreated(subId, msg.sender);\n    return subId;\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function requestSubscriptionOwnerTransfer(\n    uint256 subId,\n    address newOwner\n  ) external override onlySubOwner(subId) nonReentrant {\n    // Proposing to address(0) would never be claimable so don't need to check.\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\n    if (subscriptionConfig.requestedOwner != newOwner) {\n      subscriptionConfig.requestedOwner = newOwner;\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\n    }\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\n    address oldOwner = s_subscriptionConfigs[subId].owner;\n    if (oldOwner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\n    }\n    s_subscriptionConfigs[subId].owner = msg.sender;\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\n    if (consumerConfig.active) {\n      // Idempotence - do nothing if already added.\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\n      return;\n    }\n    // Already maxed, cannot add any more consumers.\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\n    if (consumers.length == MAX_CONSUMERS) {\n      revert TooManyConsumers();\n    }\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\n    // otherwise, consumerConfig.nonce is non-zero\n    // in both cases, use consumerConfig.nonce as is and set active status to true\n    consumerConfig.active = true;\n    consumers.push(consumer);\n\n    emit SubscriptionConsumerAdded(subId, consumer);\n  }\n\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\n    balance = s_subscriptions[subId].balance;\n    nativeBalance = s_subscriptions[subId].nativeBalance;\n    // Note bounded by MAX_CONSUMERS;\n    // If no consumers, does nothing.\n    uint256 consumersLength = consumers.length;\n    for (uint256 i = 0; i < consumersLength; ++i) {\n      delete s_consumers[consumers[i]][subId];\n    }\n    delete s_subscriptionConfigs[subId];\n    delete s_subscriptions[subId];\n    s_subIds.remove(subId);\n    if (balance != 0) {\n      s_totalBalance -= balance;\n    }\n    if (nativeBalance != 0) {\n      s_totalNativeBalance -= nativeBalance;\n    }\n    return (balance, nativeBalance);\n  }\n\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\n\n    // Only withdraw LINK if the token is active and there is a balance.\n    if (address(LINK) != address(0) && balance != 0) {\n      if (!LINK.transfer(to, uint256(balance))) {\n        revert InsufficientBalance();\n      }\n    }\n\n    // send native to the \"to\" address using call\n    (bool success, ) = to.call{value: uint256(nativeBalance)}(\"\");\n    if (!success) {\n      revert FailedToSendNative();\n    }\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\n  }\n\n  modifier onlySubOwner(uint256 subId) {\n    _onlySubOwner(subId);\n    _;\n  }\n\n  function _onlySubOwner(uint256 subId) internal view {\n    address subOwner = s_subscriptionConfigs[subId].owner;\n    if (subOwner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (msg.sender != subOwner) {\n      revert MustBeSubOwner(subOwner);\n    }\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {IVRFCoordinatorV2Plus} from \"./interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {IVRFMigratableConsumerV2Plus} from \"./interfaces/IVRFMigratableConsumerV2Plus.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords, extraArgs),\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n *\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\n  error ZeroAddress();\n\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\n  // so that coordinator reference is updated after migration\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\n    if (msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n\n  /**\n   * @inheritdoc IVRFMigratableConsumerV2Plus\n   */\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n\n    emit CoordinatorSet(_vrfCoordinator);\n  }\n\n  modifier onlyOwnerOrCoordinator() {\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\n    }\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2_5.\npragma solidity ^0.8.19;\n\n// solhint-disable-next-line no-unused-import\nimport {IVRFCoordinatorV2Plus, IVRFSubscriptionV2Plus} from \"../dev/interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {VRFV2PlusClient} from \"../dev/libraries/VRFV2PlusClient.sol\";\nimport {SubscriptionAPI} from \"../dev/SubscriptionAPI.sol\";\nimport {VRFConsumerBaseV2Plus} from \"../dev/VRFConsumerBaseV2Plus.sol\";\n\ncontract VRFCoordinatorV2_5Mock is SubscriptionAPI, IVRFCoordinatorV2Plus {\n  uint96 public immutable i_base_fee;\n  uint96 public immutable i_gas_price;\n  int256 public immutable i_wei_per_unit_link;\n\n  error InvalidRequest();\n  error InvalidRandomWords();\n  error InvalidExtraArgsTag();\n  error NotImplemented();\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint256 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    bytes extraArgs,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(\n    uint256 indexed requestId,\n    uint256 outputSeed,\n    uint256 indexed subId,\n    uint96 payment,\n    bool nativePayment,\n    bool success,\n    bool onlyPremium\n  );\n  event ConfigSet();\n\n  uint64 internal s_currentSubId;\n  uint256 internal s_nextRequestId = 1;\n  uint256 internal s_nextPreSeed = 100;\n\n  struct Request {\n    uint256 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    bytes extraArgs;\n  }\n  mapping(uint256 => Request) internal s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPrice, int256 _weiPerUnitLink) SubscriptionAPI() {\n    i_base_fee = _baseFee;\n    i_gas_price = _gasPrice;\n    i_wei_per_unit_link = _weiPerUnitLink;\n    setConfig();\n  }\n\n  /**\n   * @notice Sets the configuration of the vrfv2 mock coordinator\n   */\n  function setConfig() public onlyOwner {\n    s_config = Config({\n      minimumRequestConfirmations: 0,\n      maxGasLimit: 0,\n      stalenessSeconds: 0,\n      gasAfterPaymentCalculation: 0,\n      reentrancyLock: false,\n      fulfillmentFlatFeeNativePPM: 0,\n      fulfillmentFlatFeeLinkDiscountPPM: 0,\n      nativePremiumPercentage: 0,\n      linkPremiumPercentage: 0\n    });\n    emit ConfigSet();\n  }\n\n  function consumerIsAdded(uint256 _subId, address _consumer) public view returns (bool) {\n    return s_consumers[_consumer][_subId].active;\n  }\n\n  modifier onlyValidConsumer(uint256 _subId, address _consumer) {\n    if (!consumerIsAdded(_subId, _consumer)) {\n      revert InvalidConsumer(_subId, _consumer);\n    }\n    _;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external nonReentrant {\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\n  }\n\n  /**\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   * @param _words user-provided random words\n   */\n  function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert InvalidRequest();\n    }\n    Request memory req = s_requests[_requestId];\n\n    if (_words.length == 0) {\n      _words = new uint256[](req.numWords);\n      for (uint256 i = 0; i < req.numWords; i++) {\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n      }\n    } else if (_words.length != req.numWords) {\n      revert InvalidRandomWords();\n    }\n\n    VRFConsumerBaseV2Plus v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\n    s_config.reentrancyLock = true;\n    // solhint-disable-next-line avoid-low-level-calls, no-unused-vars\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n    s_config.reentrancyLock = false;\n\n    bool nativePayment = uint8(req.extraArgs[req.extraArgs.length - 1]) == 1;\n\n    uint256 rawPayment = i_base_fee + ((startGas - gasleft()) * i_gas_price);\n    if (!nativePayment) {\n      rawPayment = (1e18 * rawPayment) / uint256(i_wei_per_unit_link);\n    }\n    uint96 payment = uint96(rawPayment);\n\n    _chargePayment(payment, nativePayment, req.subId);\n\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, req.subId, payment, nativePayment, success, false);\n  }\n\n  function _chargePayment(uint96 payment, bool nativePayment, uint256 subId) internal {\n    Subscription storage subcription = s_subscriptions[subId];\n    if (nativePayment) {\n      uint96 prevBal = subcription.nativeBalance;\n      if (prevBal < payment) {\n        revert InsufficientBalance();\n      }\n      subcription.nativeBalance = prevBal - payment;\n      s_withdrawableNative += payment;\n    } else {\n      uint96 prevBal = subcription.balance;\n      if (prevBal < payment) {\n        revert InsufficientBalance();\n      }\n      subcription.balance = prevBal - payment;\n      s_withdrawableTokens += payment;\n    }\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint256 _subId, uint256 _amount) public {\n    if (s_subscriptionConfigs[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint256 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += uint96(_amount);\n    s_totalBalance += uint96(_amount);\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  /// @dev Convert the extra args bytes into a struct\n  /// @param extraArgs The extra args bytes\n  /// @return The extra args struct\n  function _fromBytes(bytes calldata extraArgs) internal pure returns (VRFV2PlusClient.ExtraArgsV1 memory) {\n    if (extraArgs.length == 0) {\n      return VRFV2PlusClient.ExtraArgsV1({nativePayment: false});\n    }\n    if (bytes4(extraArgs) != VRFV2PlusClient.EXTRA_ARGS_V1_TAG) revert InvalidExtraArgsTag();\n    return abi.decode(extraArgs[4:], (VRFV2PlusClient.ExtraArgsV1));\n  }\n\n  function requestRandomWords(\n    VRFV2PlusClient.RandomWordsRequest calldata _req\n  ) external override nonReentrant onlyValidConsumer(_req.subId, msg.sender) returns (uint256) {\n    uint256 subId = _req.subId;\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    bytes memory extraArgsBytes = VRFV2PlusClient._argsToBytes(_fromBytes(_req.extraArgs));\n    s_requests[requestId] = Request({\n      subId: _req.subId,\n      callbackGasLimit: _req.callbackGasLimit,\n      numWords: _req.numWords,\n      extraArgs: _req.extraArgs\n    });\n\n    emit RandomWordsRequested(\n      _req.keyHash,\n      requestId,\n      preSeed,\n      _req.subId,\n      _req.requestConfirmations,\n      _req.callbackGasLimit,\n      _req.numWords,\n      extraArgsBytes,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function removeConsumer(\n    uint256 _subId,\n    address _consumer\n  ) external override onlySubOwner(_subId) onlyValidConsumer(_subId, _consumer) nonReentrant {\n    if (!s_consumers[_consumer][_subId].active) {\n      revert InvalidConsumer(_subId, _consumer);\n    }\n    address[] memory consumers = s_subscriptionConfigs[_subId].consumers;\n    uint256 lastConsumerIndex = consumers.length - 1;\n    for (uint256 i = 0; i < consumers.length; ++i) {\n      if (consumers[i] == _consumer) {\n        address last = consumers[lastConsumerIndex];\n        s_subscriptionConfigs[_subId].consumers[i] = last;\n        s_subscriptionConfigs[_subId].consumers.pop();\n        break;\n      }\n    }\n    s_consumers[_consumer][_subId].active = false;\n    emit SubscriptionConsumerRemoved(_subId, _consumer);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function cancelSubscription(uint256 _subId, address _to) external override onlySubOwner(_subId) nonReentrant {\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(_subId);\n\n    (bool success, ) = _to.call{value: uint256(nativeBalance)}(\"\");\n    if (!success) {\n      revert FailedToSendNative();\n    }\n    emit SubscriptionCanceled(_subId, _to, balance, nativeBalance);\n  }\n\n  function pendingRequestExists(uint256 /*subId*/) public pure override returns (bool) {\n    revert NotImplemented();\n  }\n}\n"},"contracts/Raffel.sol":{"content":"/**  1. to join the lottery (with some amount)\n *   2. pick the winner randomly - (verifiably random)\n *   3. winner to be selected for every x minutes (automated)\n\n *    chainlink oracle (Randomness and chainlink Keeper)\n*/\n\n// SPDX-License-Intifier: MIT\npragma solidity ^0.8.19;\n\n//vrf\nimport {VRFConsumerBaseV2Plus} from \"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\";\nimport {VRFV2PlusClient} from \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\";\nimport {IVRFCoordinatorV2Plus} from \"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\";\n//keeper\nimport {AutomationCompatibleInterface} from \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\n//errors\nerror Raffel__notEnoughEthEntered();\nerror Raffel__TransferFailed();\nerror Raffel__NotOpen();\nerror Raffel__upKeepNotNeeded(uint256 balance, uint256 numberOfPlayers, uint256 raffelstate);\n\n// inherit vrfconsumerbasev2plus from chainlink\ncontract Raffel is VRFConsumerBaseV2Plus, AutomationCompatibleInterface {\n    // type declaration\n    enum RaffelState {\n        open,\n        calculating\n    }\n    // state variables\n\n    uint256 private immutable i_enteranceFee;\n    address payable[] private s_players;\n    struct RequestStatus {\n        bool fulfilled; // whether the request has been successfully fulfilled\n        bool exists; // whether a requestId exists\n        uint256[] randomWords;\n    }\n    mapping(uint256 => RequestStatus) public s_requests;\n\n    uint256[] public requestIds;\n    uint256 public lastRequestId;\n    bytes32 public keyHash = 0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae;\n    uint32 public callbackGasLimit = 100000;\n    uint16 public requestConfirmations = 3;\n    uint32 public numWords = 2;\n    uint256 private immutable i_subscriptionId;\n    IVRFCoordinatorV2Plus private immutable i_vrfCoordinator;\n\n    /////lottery variable\n    address private s_recentWinner;\n    RaffelState private s_raffelState;\n    uint256 private s_lastTimeStamp;\n    uint256 private immutable i_interval;\n\n    //events\n    event raffelEnter(address indexed player);\n    event winnerRandomRequest(uint256 requestId);\n    event winnerPicked(address indexed winner);\n\n    /**\n     * HARDCODED FOR SEPOLIA\n     * COORDINATOR: 0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625\n     */\n    //constructor\n    constructor(\n        address vrfCoordinatorV2Address,\n        uint256 subscriptionId,\n        uint256 enteranceFee,\n        uint256 interval\n    ) VRFConsumerBaseV2Plus(vrfCoordinatorV2Address) {\n        i_vrfCoordinator = IVRFCoordinatorV2Plus(vrfCoordinatorV2Address);\n        i_subscriptionId = subscriptionId;\n        i_enteranceFee = enteranceFee;\n        s_raffelState = RaffelState.open;\n        s_lastTimeStamp = block.timestamp;\n        i_interval = interval;\n    }\n\n    /*functions */\n\n    function enterRaffel() public payable {\n        if (msg.value < i_enteranceFee) {\n            revert Raffel__notEnoughEthEntered();\n        }\n        if (s_raffelState != RaffelState.open) {\n            revert Raffel__NotOpen();\n        }\n        s_players.push(payable(msg.sender));\n\n        emit raffelEnter(msg.sender);\n    }\n\n    /**\n     * @dev\n     *  check upkeep for the function  to return upkeepNeeded  true\n     *  time interval should be passed\n     *  atleast 1 player\n     *  subscription funded with link\n     *  lottery should be open\n     */\n\n    function checkUpkeep(\n        bytes memory /* checkdata */\n    ) public override returns (bool upkeepNeeded, bytes memory /* performData */) {\n        bool isOpen = (s_raffelState == RaffelState.open);\n        bool isTimePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\n        bool hasPlayers = (s_players.length > 0);\n        bool hasBalance = (address(this).balance > 0);\n\n        upkeepNeeded = (isOpen && isTimePassed && hasPlayers && hasBalance);\n        return (upkeepNeeded, \"0x0\");\n    }\n\n    function performUpkeep(bytes calldata /* checkdata*/) public override {\n        /** performupkeep function with this */\n        (bool upkeepNeeded, ) = checkUpkeep(\"\");\n        if (!upkeepNeeded) {\n            revert Raffel__upKeepNotNeeded(\n                address(this).balance,\n                s_players.length,\n                uint256(s_raffelState)\n            );\n        }\n    }\n\n    function requestRandomWinner(bool enableNativePayment) external returns (uint256 requestId) {\n        s_raffelState = RaffelState.calculating;\n        requestId = s_vrfCoordinator.requestRandomWords(\n            VRFV2PlusClient.RandomWordsRequest({\n                keyHash: keyHash,\n                subId: i_subscriptionId,\n                requestConfirmations: requestConfirmations,\n                callbackGasLimit: callbackGasLimit,\n                numWords: numWords,\n                extraArgs: VRFV2PlusClient._argsToBytes(\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: enableNativePayment})\n                )\n            })\n        );\n        s_requests[requestId] = RequestStatus({\n            randomWords: new uint256[](0),\n            exists: true,\n            fulfilled: false\n        });\n        requestIds.push(requestId);\n        lastRequestId = requestId;\n        emit winnerRandomRequest(requestId);\n        return requestId;\n    }\n\n    function fulfillRandomWords(\n        uint256 /*requestId */,\n        uint256[] calldata randomWords\n    ) internal override {\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\n        address payable recentWinner = s_players[indexOfWinner];\n        s_recentWinner = recentWinner;\n        s_raffelState = RaffelState.open;\n        s_players = new address payable[](0);\n        s_lastTimeStamp = block.timestamp;\n\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\"\");\n        if (!success) {\n            revert Raffel__TransferFailed();\n        }\n        emit winnerPicked(recentWinner);\n    }\n\n    /** view / pure functions */\n\n    function getEnteranceFee() public view returns (uint256) {\n        return i_enteranceFee;\n    }\n\n    function getPlayers(uint256 index) public view returns (address) {\n        return s_players[index];\n    }\n\n    function getRecentWinner() public view returns (address) {\n        return s_recentWinner;\n    }\n\n    function getRaffelState() public view returns (RaffelState) {\n        return s_raffelState;\n    }\n\n    function getNumberOfPlayers() public view returns (uint256) {\n        return s_players.length;\n    }\n\n    function getLatestTimeStamp() public view returns (uint256) {\n        return s_lastTimeStamp;\n    }\n\n    function getInterval() public view returns (uint256) {\n        return i_interval;\n    }\n}\n"},"contracts/VRFCoordinatorV2_5Mock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\";\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Raffel.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Raffel.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n   --> contracts/Raffel.sol:103:5:\n    |\n103 |     function checkUpkeep(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":3936,"file":"contracts/Raffel.sol","start":3428},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","exportedSymbols":{"AutomationBase":[37]},"id":38,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationBase","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":37,"linearizedBaseContracts":[37],"name":"AutomationBase","nameLocation":"66:14:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"b60ac5db","id":3,"name":"OnlySimulatedBackend","nameLocation":"91:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"111:2:0"},"src":"85:29:0"},{"body":{"id":27,"nodeType":"Block","src":"291:200:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"350:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"353:6:0","memberName":"origin","nodeType":"MemberAccess","src":"350:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"363:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"363:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"350:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":14,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"377:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"380:6:0","memberName":"origin","nodeType":"MemberAccess","src":"377:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307831313131313131313131313131313131313131313131313131313131313131313131313131313131","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"398:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1111111111111111111111111111111111111111"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"390:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:0","typeDescriptions":{}}},"id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"390:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"377:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"350:91:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26,"nodeType":"IfStatement","src":"346:141:0","trueBody":{"id":25,"nodeType":"Block","src":"443:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"458:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"458:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"RevertStatement","src":"451:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"118:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":28,"implemented":true,"kind":"function","modifiers":[],"name":"_preventExecution","nameLocation":"257:17:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"274:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"291:0:0"},"scope":37,"src":"248:243:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":35,"nodeType":"Block","src":"652:37:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":31,"name":"_preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"658:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"658:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"ExpressionStatement","src":"658:19:0"},{"id":34,"nodeType":"PlaceholderStatement","src":"683:1:0"}]},"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"495:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":36,"name":"cannotExecute","nameLocation":"636:13:0","nodeType":"ModifierDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"649:2:0"},"src":"627:62:0","virtual":false,"visibility":"internal"}],"scope":38,"src":"57:634:0","usedErrors":[3]}],"src":"32:660:0"},"id":0},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","exportedSymbols":{"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67]},"id":49,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":39,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","file":"./AutomationBase.sol","id":41,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":38,"src":"57:52:1","symbolAliases":[{"foreign":{"id":40,"name":"AutomationBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"65:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"./interfaces/AutomationCompatibleInterface.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":68,"src":"110:93:1","symbolAliases":[{"foreign":{"id":42,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"118:29:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":44,"name":"AutomationBase","nameLocations":["247:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"247:14:1"},"id":45,"nodeType":"InheritanceSpecifier","src":"247:14:1"},{"baseName":{"id":46,"name":"AutomationCompatibleInterface","nameLocations":["263:29:1"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"263:29:1"},"id":47,"nodeType":"InheritanceSpecifier","src":"263:29:1"}],"canonicalName":"AutomationCompatible","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":48,"linearizedBaseContracts":[48,67,37],"name":"AutomationCompatible","nameLocation":"223:20:1","nodeType":"ContractDefinition","nodes":[],"scope":49,"src":"205:90:1","usedErrors":[3]}],"src":"32:264:1"},"id":1},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[67]},"id":68,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":67,"linearizedBaseContracts":[67],"name":"AutomationCompatibleInterface","nameLocation":"120:29:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"154:985:2","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1151:11:2","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"checkData","nameLocation":"1178:9:2","nodeType":"VariableDeclaration","scope":60,"src":"1163:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"1163:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1162:26:2"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1212:12:2","nodeType":"VariableDeclaration","scope":60,"src":"1207:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"performData","nameLocation":"1239:11:2","nodeType":"VariableDeclaration","scope":60,"src":"1226:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":57,"name":"bytes","nodeType":"ElementaryTypeName","src":"1226:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1206:45:2"},"scope":67,"src":"1142:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1256:1003:2","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2271:13:2","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"performData","nameLocation":"2300:11:2","nodeType":"VariableDeclaration","scope":66,"src":"2285:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62,"name":"bytes","nodeType":"ElementaryTypeName","src":"2285:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2284:28:2"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"2321:0:2"},"scope":67,"src":"2262:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":68,"src":"110:2214:2","usedErrors":[]}],"src":"32:2293:2"},"id":2},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[88],"ConfirmedOwnerWithProposal":[251]},"id":89,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":69,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":71,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":89,"sourceUnit":252,"src":"57:76:3","symbolAliases":[{"foreign":{"id":70,"name":"ConfirmedOwnerWithProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"65:26:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":73,"name":"ConfirmedOwnerWithProposal","nameLocations":["267:26:3"],"nodeType":"IdentifierPath","referencedDeclaration":251,"src":"267:26:3"},"id":74,"nodeType":"InheritanceSpecifier","src":"267:26:3"}],"canonicalName":"ConfirmedOwner","contractDependencies":[],"contractKind":"contract","documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"135:105:3","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":88,"linearizedBaseContracts":[88,251,325],"name":"ConfirmedOwner","nameLocation":"249:14:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":86,"nodeType":"Block","src":"377:2:3","statements":[]},"id":87,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":79,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"355:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"373:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":81,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"365:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:3","typeDescriptions":{}}},"id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"365:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":84,"kind":"baseConstructorSpecifier","modifierName":{"id":78,"name":"ConfirmedOwnerWithProposal","nameLocations":["328:26:3"],"nodeType":"IdentifierPath","referencedDeclaration":251,"src":"328:26:3"},"nodeType":"ModifierInvocation","src":"328:48:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"newOwner","nameLocation":"318:8:3","nodeType":"VariableDeclaration","scope":87,"src":"310:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"309:18:3"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"377:0:3"},"scope":88,"src":"298:81:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":89,"src":"240:141:3","usedErrors":[]}],"src":"32:350:3"},"id":3},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[251],"IOwnable":[325]},"id":252,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":90,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","file":"../interfaces/IOwnable.sol","id":92,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":252,"sourceUnit":326,"src":"57:52:4","symbolAliases":[{"foreign":{"id":91,"name":"IOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"65:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":94,"name":"IOwnable","nameLocations":["255:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":325,"src":"255:8:4"},"id":95,"nodeType":"InheritanceSpecifier","src":"255:8:4"}],"canonicalName":"ConfirmedOwnerWithProposal","contractDependencies":[],"contractKind":"contract","documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"111:105:4","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":251,"linearizedBaseContracts":[251,325],"name":"ConfirmedOwnerWithProposal","nameLocation":"225:26:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":97,"mutability":"mutable","name":"s_owner","nameLocation":"284:7:4","nodeType":"VariableDeclaration","scope":251,"src":"268:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":99,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"311:14:4","nodeType":"VariableDeclaration","scope":251,"src":"295:30:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278","id":105,"name":"OwnershipTransferRequested","nameLocation":"336:26:4","nodeType":"EventDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"379:4:4","nodeType":"VariableDeclaration","scope":105,"src":"363:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"401:2:4","nodeType":"VariableDeclaration","scope":105,"src":"385:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"362:42:4"},"src":"330:75:4"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":111,"name":"OwnershipTransferred","nameLocation":"414:20:4","nodeType":"EventDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"451:4:4","nodeType":"VariableDeclaration","scope":111,"src":"435:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"473:2:4","nodeType":"VariableDeclaration","scope":111,"src":"457:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:42:4"},"src":"408:69:4"},{"body":{"id":144,"nodeType":"Block","src":"533:230:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":119,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"598:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"618:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"610:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:4","typeDescriptions":{}}},"id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"610:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"598:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"622:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"590:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"590:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"590:59:4"},{"expression":{"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":128,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"656:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":129,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"666:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"656:18:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":131,"nodeType":"ExpressionStatement","src":"656:18:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":132,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"684:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"708:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"700:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:4","typeDescriptions":{}}},"id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"700:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"684:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":143,"nodeType":"IfStatement","src":"680:79:4","trueBody":{"id":142,"nodeType":"Block","src":"712:47:4","statements":[{"expression":{"arguments":[{"id":139,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"739:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":138,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"720:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"720:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":141,"nodeType":"ExpressionStatement","src":"720:32:4"}]}}]},"id":145,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"newOwner","nameLocation":"501:8:4","nodeType":"VariableDeclaration","scope":145,"src":"493:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"pendingOwner","nameLocation":"519:12:4","nodeType":"VariableDeclaration","scope":145,"src":"511:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"492:40:4"},"returnParameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"533:0:4"},"scope":251,"src":"481:282:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[321],"body":{"id":158,"nodeType":"Block","src":"912:33:4","statements":[{"expression":{"arguments":[{"id":155,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"937:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":154,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"918:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"918:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"918:22:4"}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"767:77:4","text":"@notice Allows an owner to begin transferring ownership to a new address."},"functionSelector":"f2fde38b","id":159,"implemented":true,"kind":"function","modifiers":[{"id":152,"kind":"modifierInvocation","modifierName":{"id":151,"name":"onlyOwner","nameLocations":["902:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"902:9:4"},"nodeType":"ModifierInvocation","src":"902:9:4"}],"name":"transferOwnership","nameLocation":"856:17:4","nodeType":"FunctionDefinition","overrides":{"id":150,"nodeType":"OverrideSpecifier","overrides":[],"src":"893:8:4"},"parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"to","nameLocation":"882:2:4","nodeType":"VariableDeclaration","scope":159,"src":"874:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"873:12:4"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[],"src":"912:0:4"},"scope":251,"src":"847:98:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[324],"body":{"id":194,"nodeType":"Block","src":"1071:271:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1136:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1140:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1136:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":167,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"1150:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1136:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1166:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1128:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1128:63:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":171,"nodeType":"ExpressionStatement","src":"1128:63:4"},{"assignments":[173],"declarations":[{"constant":false,"id":173,"mutability":"mutable","name":"oldOwner","nameLocation":"1206:8:4","nodeType":"VariableDeclaration","scope":194,"src":"1198:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":175,"initialValue":{"id":174,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1217:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1198:26:4"},{"expression":{"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":176,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1230:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":177,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1240:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1244:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1240:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1230:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":180,"nodeType":"ExpressionStatement","src":"1230:20:4"},{"expression":{"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":181,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"1256:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1281:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1273:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:4","typeDescriptions":{}}},"id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1273:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1256:27:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":187,"nodeType":"ExpressionStatement","src":"1256:27:4"},{"eventCall":{"arguments":[{"id":189,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1316:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":190,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1326:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1330:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1326:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":188,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1295:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1295:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":193,"nodeType":"EmitStatement","src":"1290:47:4"}]},"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"949:74:4","text":"@notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":195,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1035:15:4","nodeType":"FunctionDefinition","overrides":{"id":162,"nodeType":"OverrideSpecifier","overrides":[],"src":"1062:8:4"},"parameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"1050:2:4"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"1071:0:4"},"scope":251,"src":"1026:316:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[316],"body":{"id":204,"nodeType":"Block","src":"1438:25:4","statements":[{"expression":{"id":202,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1451:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":201,"id":203,"nodeType":"Return","src":"1444:14:4"}]},"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"1346:33:4","text":"@notice Get the current owner"},"functionSelector":"8da5cb5b","id":205,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1391:5:4","nodeType":"FunctionDefinition","overrides":{"id":198,"nodeType":"OverrideSpecifier","overrides":[],"src":"1411:8:4"},"parameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"1396:2:4"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":205,"src":"1429:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1428:9:4"},"scope":251,"src":"1382:81:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":228,"nodeType":"Block","src":"1584:191:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":212,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1649:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1655:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1659:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1655:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1649:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1667:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1641:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":218,"nodeType":"ExpressionStatement","src":"1641:52:4"},{"expression":{"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":219,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"1700:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":220,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1717:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1700:19:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":222,"nodeType":"ExpressionStatement","src":"1700:19:4"},{"eventCall":{"arguments":[{"id":224,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1758:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1767:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":223,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1731:26:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":227,"nodeType":"EmitStatement","src":"1726:44:4"}]},"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"1467:66:4","text":"@notice validate, transfer ownership, and emit relevant events"},"id":229,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1545:18:4","nodeType":"FunctionDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"to","nameLocation":"1572:2:4","nodeType":"VariableDeclaration","scope":229,"src":"1564:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1563:12:4"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"1584:0:4"},"scope":251,"src":"1536:239:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":241,"nodeType":"Block","src":"1853:118:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":234,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1918:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1922:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1918:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":236,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1932:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1918:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1941:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1910:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"ExpressionStatement","src":"1910:56:4"}]},"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"1779:27:4","text":"@notice validate access"},"id":242,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1818:18:4","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"1836:2:4"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"1853:0:4"},"scope":251,"src":"1809:162:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":249,"nodeType":"Block","src":"2069:38:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2075:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2075:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"2075:20:4"},{"id":248,"nodeType":"PlaceholderStatement","src":"2101:1:4"}]},"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"1975:70:4","text":"@notice Reverts if called by anyone other than the contract owner."},"id":250,"name":"onlyOwner","nameLocation":"2057:9:4","nodeType":"ModifierDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"2066:2:4"},"src":"2048:59:4","virtual":false,"visibility":"internal"}],"scope":252,"src":"216:1893:4","usedErrors":[]}],"src":"32:2078:4"},"id":4},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[297]},"id":298,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":253,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":297,"linearizedBaseContracts":[297],"name":"AggregatorV3Interface","nameLocation":"120:21:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":258,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"155:8:5","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"163:2:5"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":258,"src":"189:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":255,"name":"uint8","nodeType":"ElementaryTypeName","src":"189:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"188:7:5"},"scope":297,"src":"146:50:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":263,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"209:11:5","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"220:2:5"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"246:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":260,"name":"string","nodeType":"ElementaryTypeName","src":"246:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"245:15:5"},"scope":297,"src":"200:61:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":268,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"274:7:5","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"281:2:5"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"307:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"306:9:5"},"scope":297,"src":"265:51:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":283,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"329:12:5","nodeType":"FunctionDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"_roundId","nameLocation":"354:8:5","nodeType":"VariableDeclaration","scope":283,"src":"347:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":269,"name":"uint80","nodeType":"ElementaryTypeName","src":"347:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"341:25:5"},"returnParameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"roundId","nameLocation":"397:7:5","nodeType":"VariableDeclaration","scope":283,"src":"390:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":272,"name":"uint80","nodeType":"ElementaryTypeName","src":"390:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"answer","nameLocation":"413:6:5","nodeType":"VariableDeclaration","scope":283,"src":"406:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":274,"name":"int256","nodeType":"ElementaryTypeName","src":"406:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"startedAt","nameLocation":"429:9:5","nodeType":"VariableDeclaration","scope":283,"src":"421:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"updatedAt","nameLocation":"448:9:5","nodeType":"VariableDeclaration","scope":283,"src":"440:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"answeredInRound","nameLocation":"466:15:5","nodeType":"VariableDeclaration","scope":283,"src":"459:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":280,"name":"uint80","nodeType":"ElementaryTypeName","src":"459:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"389:93:5"},"scope":297,"src":"320:163:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":296,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"496:15:5","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"511:2:5"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"roundId","nameLocation":"556:7:5","nodeType":"VariableDeclaration","scope":296,"src":"549:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":285,"name":"uint80","nodeType":"ElementaryTypeName","src":"549:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"answer","nameLocation":"572:6:5","nodeType":"VariableDeclaration","scope":296,"src":"565:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":287,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"startedAt","nameLocation":"588:9:5","nodeType":"VariableDeclaration","scope":296,"src":"580:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"updatedAt","nameLocation":"607:9:5","nodeType":"VariableDeclaration","scope":296,"src":"599:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"answeredInRound","nameLocation":"625:15:5","nodeType":"VariableDeclaration","scope":296,"src":"618:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":293,"name":"uint80","nodeType":"ElementaryTypeName","src":"618:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"548:93:5"},"scope":297,"src":"487:155:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":298,"src":"110:534:5","usedErrors":[]}],"src":"32:613:5"},"id":5},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","exportedSymbols":{"IERC677Receiver":[309]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":299,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC677Receiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":309,"linearizedBaseContracts":[309],"name":"IERC677Receiver","nameLocation":"67:15:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a4c0ed36","id":308,"implemented":false,"kind":"function","modifiers":[],"name":"onTokenTransfer","nameLocation":"96:15:6","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"sender","nameLocation":"120:6:6","nodeType":"VariableDeclaration","scope":308,"src":"112:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"amount","nameLocation":"136:6:6","nodeType":"VariableDeclaration","scope":308,"src":"128:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"128:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"data","nameLocation":"159:4:6","nodeType":"VariableDeclaration","scope":308,"src":"144:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":304,"name":"bytes","nodeType":"ElementaryTypeName","src":"144:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111:53:6"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"173:0:6"},"scope":309,"src":"87:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":310,"src":"57:119:6","usedErrors":[]}],"src":"32:145:6"},"id":6},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","exportedSymbols":{"IOwnable":[325]},"id":326,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IOwnable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":325,"linearizedBaseContracts":[325],"name":"IOwnable","nameLocation":"67:8:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":316,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"89:5:7","nodeType":"FunctionDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[],"src":"94:2:7"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":316,"src":"115:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"115:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114:9:7"},"scope":325,"src":"80:44:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":321,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"137:17:7","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"recipient","nameLocation":"163:9:7","nodeType":"VariableDeclaration","scope":321,"src":"155:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"154:19:7"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"182:0:7"},"scope":325,"src":"128:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":324,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"196:15:7","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"211:2:7"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"222:0:7"},"scope":325,"src":"187:36:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":326,"src":"57:168:7","usedErrors":[]}],"src":"32:194:7"},"id":7},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[420]},"id":421,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":327,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"LinkTokenInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":420,"linearizedBaseContracts":[420],"name":"LinkTokenInterface","nameLocation":"120:18:8","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":336,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"152:9:8","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"owner","nameLocation":"170:5:8","nodeType":"VariableDeclaration","scope":336,"src":"162:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"162:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"spender","nameLocation":"185:7:8","nodeType":"VariableDeclaration","scope":336,"src":"177:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"177:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"161:32:8"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"remaining","nameLocation":"225:9:8","nodeType":"VariableDeclaration","scope":336,"src":"217:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"217:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"216:19:8"},"scope":420,"src":"143:93:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"249:7:8","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"spender","nameLocation":"265:7:8","nodeType":"VariableDeclaration","scope":345,"src":"257:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"257:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"value","nameLocation":"282:5:8","nodeType":"VariableDeclaration","scope":345,"src":"274:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"256:32:8"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"success","nameLocation":"312:7:8","nodeType":"VariableDeclaration","scope":345,"src":"307:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:14:8"},"scope":420,"src":"240:81:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":352,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"334:9:8","nodeType":"FunctionDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"owner","nameLocation":"352:5:8","nodeType":"VariableDeclaration","scope":352,"src":"344:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"344:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"343:15:8"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"balance","nameLocation":"390:7:8","nodeType":"VariableDeclaration","scope":352,"src":"382:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"382:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"381:17:8"},"scope":420,"src":"325:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":357,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"412:8:8","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"420:2:8"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"decimalPlaces","nameLocation":"452:13:8","nodeType":"VariableDeclaration","scope":357,"src":"446:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":354,"name":"uint8","nodeType":"ElementaryTypeName","src":"446:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"445:21:8"},"scope":420,"src":"403:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":366,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"480:16:8","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"spender","nameLocation":"505:7:8","nodeType":"VariableDeclaration","scope":366,"src":"497:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"addedValue","nameLocation":"522:10:8","nodeType":"VariableDeclaration","scope":366,"src":"514:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:37:8"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"success","nameLocation":"557:7:8","nodeType":"VariableDeclaration","scope":366,"src":"552:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":363,"name":"bool","nodeType":"ElementaryTypeName","src":"552:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"551:14:8"},"scope":420,"src":"471:95:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":373,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"579:16:8","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"spender","nameLocation":"604:7:8","nodeType":"VariableDeclaration","scope":373,"src":"596:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"subtractedValue","nameLocation":"621:15:8","nodeType":"VariableDeclaration","scope":373,"src":"613:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:42:8"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"646:0:8"},"scope":420,"src":"570:77:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"660:4:8","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"664:2:8"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"tokenName","nameLocation":"704:9:8","nodeType":"VariableDeclaration","scope":378,"src":"690:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":375,"name":"string","nodeType":"ElementaryTypeName","src":"690:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"689:25:8"},"scope":420,"src":"651:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"728:6:8","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"734:2:8"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"tokenSymbol","nameLocation":"774:11:8","nodeType":"VariableDeclaration","scope":383,"src":"760:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":380,"name":"string","nodeType":"ElementaryTypeName","src":"760:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"759:27:8"},"scope":420,"src":"719:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":388,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"800:11:8","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"811:2:8"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"845:17:8","nodeType":"VariableDeclaration","scope":388,"src":"837:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"837:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"836:27:8"},"scope":420,"src":"791:73:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":397,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"877:8:8","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"to","nameLocation":"894:2:8","nodeType":"VariableDeclaration","scope":397,"src":"886:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"886:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"value","nameLocation":"906:5:8","nodeType":"VariableDeclaration","scope":397,"src":"898:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"885:27:8"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"success","nameLocation":"936:7:8","nodeType":"VariableDeclaration","scope":397,"src":"931:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":394,"name":"bool","nodeType":"ElementaryTypeName","src":"931:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"930:14:8"},"scope":420,"src":"868:77:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":408,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"958:15:8","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"to","nameLocation":"982:2:8","nodeType":"VariableDeclaration","scope":408,"src":"974:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"value","nameLocation":"994:5:8","nodeType":"VariableDeclaration","scope":408,"src":"986:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"data","nameLocation":"1016:4:8","nodeType":"VariableDeclaration","scope":408,"src":"1001:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":402,"name":"bytes","nodeType":"ElementaryTypeName","src":"1001:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"973:48:8"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"success","nameLocation":"1045:7:8","nodeType":"VariableDeclaration","scope":408,"src":"1040:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":405,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:14:8"},"scope":420,"src":"949:105:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":419,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1067:12:8","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"from","nameLocation":"1088:4:8","nodeType":"VariableDeclaration","scope":419,"src":"1080:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"to","nameLocation":"1102:2:8","nodeType":"VariableDeclaration","scope":419,"src":"1094:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"value","nameLocation":"1114:5:8","nodeType":"VariableDeclaration","scope":419,"src":"1106:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1106:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1079:41:8"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"success","nameLocation":"1144:7:8","nodeType":"VariableDeclaration","scope":419,"src":"1139:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":416,"name":"bool","nodeType":"ElementaryTypeName","src":"1139:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1138:14:8"},"scope":420,"src":"1058:95:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":421,"src":"110:1045:8","usedErrors":[]}],"src":"32:1124:8"},"id":8},"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[1033]},"id":1034,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":422,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"230:1087:9","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":1033,"linearizedBaseContracts":[1033],"name":"EnumerableSet","nameLocation":"1326:13:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":431,"members":[{"constant":false,"id":426,"mutability":"mutable","name":"_values","nameLocation":"1850:7:9","nodeType":"VariableDeclaration","scope":431,"src":"1840:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1840:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":425,"nodeType":"ArrayTypeName","src":"1840:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"_indexes","nameLocation":"2018:8:9","nodeType":"VariableDeclaration","scope":431,"src":"1990:36:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":429,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1990:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1793:3:9","nodeType":"StructDefinition","scope":1033,"src":"1786:247:9","visibility":"public"},{"body":{"id":472,"nodeType":"Block","src":"2272:335:9","statements":[{"condition":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2286:22:9","subExpression":{"arguments":[{"id":443,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2297:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"2302:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":442,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"2287:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":470,"nodeType":"Block","src":"2564:37:9","statements":[{"expression":{"hexValue":"66616c7365","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2585:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":441,"id":469,"nodeType":"Return","src":"2578:12:9"}]},"id":471,"nodeType":"IfStatement","src":"2282:319:9","trueBody":{"id":467,"nodeType":"Block","src":"2310:248:9","statements":[{"expression":{"arguments":[{"id":452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"2341:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":447,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2324:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2328:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":426,"src":"2324:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2336:4:9","memberName":"push","nodeType":"MemberAccess","src":"2324:16:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":454,"nodeType":"ExpressionStatement","src":"2324:23:9"},{"expression":{"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":455,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2482:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2486:8:9","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":430,"src":"2482:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":459,"indexExpression":{"id":457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"2495:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":460,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2504:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2508:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":426,"src":"2504:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2516:6:9","memberName":"length","nodeType":"MemberAccess","src":"2504:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2482:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":464,"nodeType":"ExpressionStatement","src":"2482:40:9"},{"expression":{"hexValue":"74727565","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2543:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":441,"id":466,"nodeType":"Return","src":"2536:11:9"}]}}]},"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"2039:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2212:4:9","nodeType":"FunctionDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"set","nameLocation":"2229:3:9","nodeType":"VariableDeclaration","scope":473,"src":"2217:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":434,"nodeType":"UserDefinedTypeName","pathNode":{"id":433,"name":"Set","nameLocations":["2217:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"2217:3:9"},"referencedDeclaration":431,"src":"2217:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"value","nameLocation":"2242:5:9","nodeType":"VariableDeclaration","scope":473,"src":"2234:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2234:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2216:32:9"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":473,"src":"2266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":439,"name":"bool","nodeType":"ElementaryTypeName","src":"2266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2265:6:9"},"scope":1033,"src":"2203:404:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":556,"nodeType":"Block","src":"2847:1316:9","statements":[{"assignments":[485],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"valueIndex","nameLocation":"2965:10:9","nodeType":"VariableDeclaration","scope":556,"src":"2957:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2957:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":490,"initialValue":{"baseExpression":{"expression":{"id":486,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"2978:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2982:8:9","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":430,"src":"2978:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":489,"indexExpression":{"id":488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2991:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2978:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2957:40:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3012:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3026:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3012:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":554,"nodeType":"Block","src":"4120:37:9","statements":[{"expression":{"hexValue":"66616c7365","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4141:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":483,"id":553,"nodeType":"Return","src":"4134:12:9"}]},"id":555,"nodeType":"IfStatement","src":"3008:1149:9","trueBody":{"id":551,"nodeType":"Block","src":"3029:1085:9","statements":[{"assignments":[495],"declarations":[{"constant":false,"id":495,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3389:13:9","nodeType":"VariableDeclaration","scope":551,"src":"3381:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3381:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":499,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3405:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3418:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3405:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3381:38:9"},{"assignments":[501],"declarations":[{"constant":false,"id":501,"mutability":"mutable","name":"lastIndex","nameLocation":"3441:9:9","nodeType":"VariableDeclaration","scope":551,"src":"3433:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"3433:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":507,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":502,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3453:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3457:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":426,"src":"3453:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3465:6:9","memberName":"length","nodeType":"MemberAccess","src":"3453:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3474:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3453:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3433:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":508,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"3494:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":509,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3507:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3494:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":535,"nodeType":"IfStatement","src":"3490:398:9","trueBody":{"id":534,"nodeType":"Block","src":"3522:366:9","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"lastValue","nameLocation":"3548:9:9","nodeType":"VariableDeclaration","scope":534,"src":"3540:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3540:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":517,"initialValue":{"baseExpression":{"expression":{"id":513,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3560:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3564:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":426,"src":"3560:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":516,"indexExpression":{"id":515,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"3572:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3560:22:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3540:42:9"},{"expression":{"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":518,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3682:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3686:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":426,"src":"3682:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":522,"indexExpression":{"id":520,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3694:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3682:26:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":523,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3711:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3682:38:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":525,"nodeType":"ExpressionStatement","src":"3682:38:9"},{"expression":{"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":526,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3794:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3798:8:9","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":430,"src":"3794:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":530,"indexExpression":{"id":528,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3807:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3794:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":531,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3820:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3794:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":533,"nodeType":"ExpressionStatement","src":"3794:36:9"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":536,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3966:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3970:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":426,"src":"3966:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3978:3:9","memberName":"pop","nodeType":"MemberAccess","src":"3966:15:9","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3966:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"3966:17:9"},{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4051:26:9","subExpression":{"baseExpression":{"expression":{"id":543,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4058:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4062:8:9","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":430,"src":"4058:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":546,"indexExpression":{"id":545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4071:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4058:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"ExpressionStatement","src":"4051:26:9"},{"expression":{"hexValue":"74727565","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4099:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":483,"id":550,"nodeType":"Return","src":"4092:11:9"}]}}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"2613:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":557,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2784:7:9","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"set","nameLocation":"2804:3:9","nodeType":"VariableDeclaration","scope":557,"src":"2792:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"Set","nameLocations":["2792:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"2792:3:9"},"referencedDeclaration":431,"src":"2792:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"value","nameLocation":"2817:5:9","nodeType":"VariableDeclaration","scope":557,"src":"2809:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2809:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2791:32:9"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":557,"src":"2841:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":481,"name":"bool","nodeType":"ElementaryTypeName","src":"2841:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2840:6:9"},"scope":1033,"src":"2775:1388:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":575,"nodeType":"Block","src":"4323:48:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":568,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4340:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4344:8:9","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":430,"src":"4340:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":571,"indexExpression":{"id":570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4353:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4340:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4363:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4340:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":567,"id":574,"nodeType":"Return","src":"4333:31:9"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"4169:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":576,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4253:9:9","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"set","nameLocation":"4275:3:9","nodeType":"VariableDeclaration","scope":576,"src":"4263:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":560,"nodeType":"UserDefinedTypeName","pathNode":{"id":559,"name":"Set","nameLocations":["4263:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"4263:3:9"},"referencedDeclaration":431,"src":"4263:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"value","nameLocation":"4288:5:9","nodeType":"VariableDeclaration","scope":576,"src":"4280:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4280:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4262:32:9"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"4317:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":565,"name":"bool","nodeType":"ElementaryTypeName","src":"4317:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4316:6:9"},"scope":1033,"src":"4244:127:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":589,"nodeType":"Block","src":"4517:42:9","statements":[{"expression":{"expression":{"expression":{"id":585,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"4534:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4538:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":426,"src":"4534:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4546:6:9","memberName":"length","nodeType":"MemberAccess","src":"4534:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":584,"id":588,"nodeType":"Return","src":"4527:25:9"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"4377:70:9","text":" @dev Returns the number of values on the set. O(1)."},"id":590,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4461:7:9","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"set","nameLocation":"4481:3:9","nodeType":"VariableDeclaration","scope":590,"src":"4469:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":579,"nodeType":"UserDefinedTypeName","pathNode":{"id":578,"name":"Set","nameLocations":["4469:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"4469:3:9"},"referencedDeclaration":431,"src":"4469:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4468:17:9"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":590,"src":"4508:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4508:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4507:9:9"},"scope":1033,"src":"4452:107:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":606,"nodeType":"Block","src":"4977:42:9","statements":[{"expression":{"baseExpression":{"expression":{"id":601,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4994:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4998:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":426,"src":"4994:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":604,"indexExpression":{"id":603,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"5006:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":600,"id":605,"nodeType":"Return","src":"4987:25:9"}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"4565:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":607,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4910:3:9","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"set","nameLocation":"4926:3:9","nodeType":"VariableDeclaration","scope":607,"src":"4914:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":593,"nodeType":"UserDefinedTypeName","pathNode":{"id":592,"name":"Set","nameLocations":["4914:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"4914:3:9"},"referencedDeclaration":431,"src":"4914:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"index","nameLocation":"4939:5:9","nodeType":"VariableDeclaration","scope":607,"src":"4931:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4913:32:9"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"4968:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4968:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4967:9:9"},"scope":1033,"src":"4901:118:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":620,"nodeType":"Block","src":"5633:35:9","statements":[{"expression":{"expression":{"id":617,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5650:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5654:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":426,"src":"5650:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":616,"id":619,"nodeType":"Return","src":"5643:18:9"}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"5025:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":621,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5568:7:9","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"set","nameLocation":"5588:3:9","nodeType":"VariableDeclaration","scope":621,"src":"5576:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"Set","nameLocations":["5576:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"5576:3:9"},"referencedDeclaration":431,"src":"5576:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5575:17:9"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"5615:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5615:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":614,"nodeType":"ArrayTypeName","src":"5615:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5614:18:9"},"scope":1033,"src":"5559:109:9","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":625,"members":[{"constant":false,"id":624,"mutability":"mutable","name":"_inner","nameLocation":"5725:6:9","nodeType":"VariableDeclaration","scope":625,"src":"5721:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":623,"nodeType":"UserDefinedTypeName","pathNode":{"id":622,"name":"Set","nameLocations":["5721:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"5721:3:9"},"referencedDeclaration":431,"src":"5721:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5700:10:9","nodeType":"StructDefinition","scope":1033,"src":"5693:45:9","visibility":"public"},{"body":{"id":642,"nodeType":"Block","src":"5984:47:9","statements":[{"expression":{"arguments":[{"expression":{"id":637,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6006:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6010:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":624,"src":"6006:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"6018:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":636,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6001:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6001:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":635,"id":641,"nodeType":"Return","src":"5994:30:9"}]},"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"5744:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5917:3:9","nodeType":"FunctionDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"set","nameLocation":"5940:3:9","nodeType":"VariableDeclaration","scope":643,"src":"5921:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":628,"nodeType":"UserDefinedTypeName","pathNode":{"id":627,"name":"Bytes32Set","nameLocations":["5921:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"5921:10:9"},"referencedDeclaration":625,"src":"5921:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"value","nameLocation":"5953:5:9","nodeType":"VariableDeclaration","scope":643,"src":"5945:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5945:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5920:39:9"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"5978:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":633,"name":"bool","nodeType":"ElementaryTypeName","src":"5978:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5977:6:9"},"scope":1033,"src":"5908:123:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":660,"nodeType":"Block","src":"6278:50:9","statements":[{"expression":{"arguments":[{"expression":{"id":655,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6303:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6307:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":624,"src":"6303:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6315:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":654,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6295:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":653,"id":659,"nodeType":"Return","src":"6288:33:9"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"6037:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":661,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6208:6:9","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"set","nameLocation":"6234:3:9","nodeType":"VariableDeclaration","scope":661,"src":"6215:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":646,"nodeType":"UserDefinedTypeName","pathNode":{"id":645,"name":"Bytes32Set","nameLocations":["6215:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"6215:10:9"},"referencedDeclaration":625,"src":"6215:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"6247:5:9","nodeType":"VariableDeclaration","scope":661,"src":"6239:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6239:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6214:39:9"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":661,"src":"6272:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":651,"name":"bool","nodeType":"ElementaryTypeName","src":"6272:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6271:6:9"},"scope":1033,"src":"6199:129:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":678,"nodeType":"Block","src":"6495:52:9","statements":[{"expression":{"arguments":[{"expression":{"id":673,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6522:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6526:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":624,"src":"6522:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"6534:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":672,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6512:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6512:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":671,"id":677,"nodeType":"Return","src":"6505:35:9"}]},"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"6334:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":679,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6418:8:9","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"set","nameLocation":"6446:3:9","nodeType":"VariableDeclaration","scope":679,"src":"6427:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":664,"nodeType":"UserDefinedTypeName","pathNode":{"id":663,"name":"Bytes32Set","nameLocations":["6427:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"6427:10:9"},"referencedDeclaration":625,"src":"6427:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":667,"mutability":"mutable","name":"value","nameLocation":"6459:5:9","nodeType":"VariableDeclaration","scope":679,"src":"6451:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6451:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6426:39:9"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":679,"src":"6489:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":669,"name":"bool","nodeType":"ElementaryTypeName","src":"6489:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6488:6:9"},"scope":1033,"src":"6409:138:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"6700:43:9","statements":[{"expression":{"arguments":[{"expression":{"id":689,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6725:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6729:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":624,"src":"6725:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":688,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"6717:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":687,"id":692,"nodeType":"Return","src":"6710:26:9"}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"6553:70:9","text":" @dev Returns the number of values in the set. O(1)."},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6637:6:9","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"set","nameLocation":"6663:3:9","nodeType":"VariableDeclaration","scope":694,"src":"6644:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":682,"nodeType":"UserDefinedTypeName","pathNode":{"id":681,"name":"Bytes32Set","nameLocations":["6644:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"6644:10:9"},"referencedDeclaration":625,"src":"6644:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6643:24:9"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"6691:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"6691:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6690:9:9"},"scope":1033,"src":"6628:115:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":711,"nodeType":"Block","src":"7168:46:9","statements":[{"expression":{"arguments":[{"expression":{"id":706,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"7189:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7193:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":624,"src":"7189:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":708,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"7201:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":705,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"7185:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7185:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":704,"id":710,"nodeType":"Return","src":"7178:29:9"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"6749:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7094:2:9","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"set","nameLocation":"7116:3:9","nodeType":"VariableDeclaration","scope":712,"src":"7097:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":697,"nodeType":"UserDefinedTypeName","pathNode":{"id":696,"name":"Bytes32Set","nameLocations":["7097:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"7097:10:9"},"referencedDeclaration":625,"src":"7097:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"index","nameLocation":"7129:5:9","nodeType":"VariableDeclaration","scope":712,"src":"7121:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7096:39:9"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"7159:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7159:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7158:9:9"},"scope":1033,"src":"7085:129:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":741,"nodeType":"Block","src":"7835:219:9","statements":[{"assignments":[726],"declarations":[{"constant":false,"id":726,"mutability":"mutable","name":"store","nameLocation":"7862:5:9","nodeType":"VariableDeclaration","scope":741,"src":"7845:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7845:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":725,"nodeType":"ArrayTypeName","src":"7845:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":731,"initialValue":{"arguments":[{"expression":{"id":728,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7878:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7882:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":624,"src":"7878:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":727,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"7870:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7870:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7845:44:9"},{"assignments":[736],"declarations":[{"constant":false,"id":736,"mutability":"mutable","name":"result","nameLocation":"7916:6:9","nodeType":"VariableDeclaration","scope":741,"src":"7899:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7899:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":735,"nodeType":"ArrayTypeName","src":"7899:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":737,"nodeType":"VariableDeclarationStatement","src":"7899:23:9"},{"AST":{"nodeType":"YulBlock","src":"7985:39:9","statements":[{"nodeType":"YulAssignment","src":"7999:15:9","value":{"name":"store","nodeType":"YulIdentifier","src":"8009:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7999:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":736,"isOffset":false,"isSlot":false,"src":"7999:6:9","valueSize":1},{"declaration":726,"isOffset":false,"isSlot":false,"src":"8009:5:9","valueSize":1}],"id":738,"nodeType":"InlineAssembly","src":"7976:48:9"},{"expression":{"id":739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"8041:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":721,"id":740,"nodeType":"Return","src":"8034:13:9"}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"7220:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":742,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7763:6:9","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"set","nameLocation":"7789:3:9","nodeType":"VariableDeclaration","scope":742,"src":"7770:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":715,"nodeType":"UserDefinedTypeName","pathNode":{"id":714,"name":"Bytes32Set","nameLocations":["7770:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"7770:10:9"},"referencedDeclaration":625,"src":"7770:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$625_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7769:24:9"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"7817:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7817:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":719,"nodeType":"ArrayTypeName","src":"7817:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7816:18:9"},"scope":1033,"src":"7754:300:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":746,"members":[{"constant":false,"id":745,"mutability":"mutable","name":"_inner","nameLocation":"8111:6:9","nodeType":"VariableDeclaration","scope":746,"src":"8107:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":744,"nodeType":"UserDefinedTypeName","pathNode":{"id":743,"name":"Set","nameLocations":["8107:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"8107:3:9"},"referencedDeclaration":431,"src":"8107:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8086:10:9","nodeType":"StructDefinition","scope":1033,"src":"8079:45:9","visibility":"public"},{"body":{"id":772,"nodeType":"Block","src":"8370:74:9","statements":[{"expression":{"arguments":[{"expression":{"id":758,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"8392:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8396:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":745,"src":"8392:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8428:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8420:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":764,"name":"uint160","nodeType":"ElementaryTypeName","src":"8420:7:9","typeDescriptions":{}}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8420:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8412:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"8412:7:9","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8412:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8404:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8404:7:9","typeDescriptions":{}}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":757,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"8387:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8387:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":756,"id":771,"nodeType":"Return","src":"8380:57:9"}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"8130:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8303:3:9","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"set","nameLocation":"8326:3:9","nodeType":"VariableDeclaration","scope":773,"src":"8307:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":749,"nodeType":"UserDefinedTypeName","pathNode":{"id":748,"name":"AddressSet","nameLocations":["8307:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":746,"src":"8307:10:9"},"referencedDeclaration":746,"src":"8307:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"value","nameLocation":"8339:5:9","nodeType":"VariableDeclaration","scope":773,"src":"8331:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"8331:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8306:39:9"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":773,"src":"8364:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":754,"name":"bool","nodeType":"ElementaryTypeName","src":"8364:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8363:6:9"},"scope":1033,"src":"8294:150:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"8691:77:9","statements":[{"expression":{"arguments":[{"expression":{"id":785,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8716:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8720:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":745,"src":"8716:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8752:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8744:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":791,"name":"uint160","nodeType":"ElementaryTypeName","src":"8744:7:9","typeDescriptions":{}}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8744:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8736:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"8736:7:9","typeDescriptions":{}}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8736:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8728:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8728:7:9","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8728:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":784,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"8708:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8708:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":783,"id":798,"nodeType":"Return","src":"8701:60:9"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"8450:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8621:6:9","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"set","nameLocation":"8647:3:9","nodeType":"VariableDeclaration","scope":800,"src":"8628:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":776,"nodeType":"UserDefinedTypeName","pathNode":{"id":775,"name":"AddressSet","nameLocations":["8628:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":746,"src":"8628:10:9"},"referencedDeclaration":746,"src":"8628:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"value","nameLocation":"8660:5:9","nodeType":"VariableDeclaration","scope":800,"src":"8652:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"8652:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8627:39:9"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":800,"src":"8685:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":781,"name":"bool","nodeType":"ElementaryTypeName","src":"8685:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8684:6:9"},"scope":1033,"src":"8612:156:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":826,"nodeType":"Block","src":"8935:79:9","statements":[{"expression":{"arguments":[{"expression":{"id":812,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8962:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8966:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":745,"src":"8962:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8998:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8990:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":818,"name":"uint160","nodeType":"ElementaryTypeName","src":"8990:7:9","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8990:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8982:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"8982:7:9","typeDescriptions":{}}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8982:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8974:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8974:7:9","typeDescriptions":{}}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":811,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"8952:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":810,"id":825,"nodeType":"Return","src":"8945:62:9"}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"8774:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8858:8:9","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"set","nameLocation":"8886:3:9","nodeType":"VariableDeclaration","scope":827,"src":"8867:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":803,"nodeType":"UserDefinedTypeName","pathNode":{"id":802,"name":"AddressSet","nameLocations":["8867:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":746,"src":"8867:10:9"},"referencedDeclaration":746,"src":"8867:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"value","nameLocation":"8899:5:9","nodeType":"VariableDeclaration","scope":827,"src":"8891:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"8891:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8866:39:9"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"8929:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":808,"name":"bool","nodeType":"ElementaryTypeName","src":"8929:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8928:6:9"},"scope":1033,"src":"8849:165:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"9167:43:9","statements":[{"expression":{"arguments":[{"expression":{"id":837,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9192:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9196:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":745,"src":"9192:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":836,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"9184:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9184:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":835,"id":840,"nodeType":"Return","src":"9177:26:9"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"9020:70:9","text":" @dev Returns the number of values in the set. O(1)."},"id":842,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9104:6:9","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"set","nameLocation":"9130:3:9","nodeType":"VariableDeclaration","scope":842,"src":"9111:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":830,"nodeType":"UserDefinedTypeName","pathNode":{"id":829,"name":"AddressSet","nameLocations":["9111:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":746,"src":"9111:10:9"},"referencedDeclaration":746,"src":"9111:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9110:24:9"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"9158:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"9158:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9157:9:9"},"scope":1033,"src":"9095:115:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":868,"nodeType":"Block","src":"9635:73:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":860,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9680:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9684:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":745,"src":"9680:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":862,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"9692:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":859,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"9676:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9676:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9668:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"9668:7:9","typeDescriptions":{}}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9668:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9660:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":855,"name":"uint160","nodeType":"ElementaryTypeName","src":"9660:7:9","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9660:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9652:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"9652:7:9","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9652:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":852,"id":867,"nodeType":"Return","src":"9645:56:9"}]},"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"9216:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":869,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9561:2:9","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"set","nameLocation":"9583:3:9","nodeType":"VariableDeclaration","scope":869,"src":"9564:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":845,"nodeType":"UserDefinedTypeName","pathNode":{"id":844,"name":"AddressSet","nameLocations":["9564:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":746,"src":"9564:10:9"},"referencedDeclaration":746,"src":"9564:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"index","nameLocation":"9596:5:9","nodeType":"VariableDeclaration","scope":869,"src":"9588:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9563:39:9"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"9626:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"9626:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9625:9:9"},"scope":1033,"src":"9552:156:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":898,"nodeType":"Block","src":"10329:219:9","statements":[{"assignments":[883],"declarations":[{"constant":false,"id":883,"mutability":"mutable","name":"store","nameLocation":"10356:5:9","nodeType":"VariableDeclaration","scope":898,"src":"10339:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10339:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":882,"nodeType":"ArrayTypeName","src":"10339:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":888,"initialValue":{"arguments":[{"expression":{"id":885,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"10372:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10376:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":745,"src":"10372:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":884,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"10364:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10364:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10339:44:9"},{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"result","nameLocation":"10410:6:9","nodeType":"VariableDeclaration","scope":898,"src":"10393:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"10393:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":892,"nodeType":"ArrayTypeName","src":"10393:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":894,"nodeType":"VariableDeclarationStatement","src":"10393:23:9"},{"AST":{"nodeType":"YulBlock","src":"10479:39:9","statements":[{"nodeType":"YulAssignment","src":"10493:15:9","value":{"name":"store","nodeType":"YulIdentifier","src":"10503:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10493:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":893,"isOffset":false,"isSlot":false,"src":"10493:6:9","valueSize":1},{"declaration":883,"isOffset":false,"isSlot":false,"src":"10503:5:9","valueSize":1}],"id":895,"nodeType":"InlineAssembly","src":"10470:48:9"},{"expression":{"id":896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10535:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":878,"id":897,"nodeType":"Return","src":"10528:13:9"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"9714:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":899,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10257:6:9","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"set","nameLocation":"10283:3:9","nodeType":"VariableDeclaration","scope":899,"src":"10264:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":872,"nodeType":"UserDefinedTypeName","pathNode":{"id":871,"name":"AddressSet","nameLocations":["10264:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":746,"src":"10264:10:9"},"referencedDeclaration":746,"src":"10264:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$746_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10263:24:9"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":899,"src":"10311:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"10311:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":876,"nodeType":"ArrayTypeName","src":"10311:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10310:18:9"},"scope":1033,"src":"10248:300:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":903,"members":[{"constant":false,"id":902,"mutability":"mutable","name":"_inner","nameLocation":"10599:6:9","nodeType":"VariableDeclaration","scope":903,"src":"10595:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":901,"nodeType":"UserDefinedTypeName","pathNode":{"id":900,"name":"Set","nameLocations":["10595:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":431,"src":"10595:3:9"},"referencedDeclaration":431,"src":"10595:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10577:7:9","nodeType":"StructDefinition","scope":1033,"src":"10570:42:9","visibility":"public"},{"body":{"id":923,"nodeType":"Block","src":"10855:56:9","statements":[{"expression":{"arguments":[{"expression":{"id":915,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10877:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10881:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":902,"src":"10877:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"10897:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10889:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10889:7:9","typeDescriptions":{}}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":914,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"10872:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":913,"id":922,"nodeType":"Return","src":"10865:39:9"}]},"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"10618:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10791:3:9","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"set","nameLocation":"10811:3:9","nodeType":"VariableDeclaration","scope":924,"src":"10795:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":906,"nodeType":"UserDefinedTypeName","pathNode":{"id":905,"name":"UintSet","nameLocations":["10795:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"10795:7:9"},"referencedDeclaration":903,"src":"10795:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"value","nameLocation":"10824:5:9","nodeType":"VariableDeclaration","scope":924,"src":"10816:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10816:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10794:36:9"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"10849:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":911,"name":"bool","nodeType":"ElementaryTypeName","src":"10849:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10848:6:9"},"scope":1033,"src":"10782:129:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":944,"nodeType":"Block","src":"11155:59:9","statements":[{"expression":{"arguments":[{"expression":{"id":936,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"11180:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11184:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":902,"src":"11180:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"11200:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11192:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11192:7:9","typeDescriptions":{}}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11192:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":935,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"11172:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11172:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":934,"id":943,"nodeType":"Return","src":"11165:42:9"}]},"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"10917:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11088:6:9","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"set","nameLocation":"11111:3:9","nodeType":"VariableDeclaration","scope":945,"src":"11095:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":927,"nodeType":"UserDefinedTypeName","pathNode":{"id":926,"name":"UintSet","nameLocations":["11095:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"11095:7:9"},"referencedDeclaration":903,"src":"11095:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"value","nameLocation":"11124:5:9","nodeType":"VariableDeclaration","scope":945,"src":"11116:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"11116:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11094:36:9"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":945,"src":"11149:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":932,"name":"bool","nodeType":"ElementaryTypeName","src":"11149:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11148:6:9"},"scope":1033,"src":"11079:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":965,"nodeType":"Block","src":"11378:61:9","statements":[{"expression":{"arguments":[{"expression":{"id":957,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"11405:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11409:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":902,"src":"11405:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11425:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11417:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11417:7:9","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":956,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"11395:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11395:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":955,"id":964,"nodeType":"Return","src":"11388:44:9"}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"11220:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":966,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11304:8:9","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"set","nameLocation":"11329:3:9","nodeType":"VariableDeclaration","scope":966,"src":"11313:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":948,"nodeType":"UserDefinedTypeName","pathNode":{"id":947,"name":"UintSet","nameLocations":["11313:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"11313:7:9"},"referencedDeclaration":903,"src":"11313:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"value","nameLocation":"11342:5:9","nodeType":"VariableDeclaration","scope":966,"src":"11334:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"11334:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11312:36:9"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"11372:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":953,"name":"bool","nodeType":"ElementaryTypeName","src":"11372:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11371:6:9"},"scope":1033,"src":"11295:144:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"11589:43:9","statements":[{"expression":{"arguments":[{"expression":{"id":976,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11614:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11618:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":902,"src":"11614:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":975,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"11606:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11606:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":974,"id":979,"nodeType":"Return","src":"11599:26:9"}]},"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"11445:70:9","text":" @dev Returns the number of values in the set. O(1)."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11529:6:9","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"set","nameLocation":"11552:3:9","nodeType":"VariableDeclaration","scope":981,"src":"11536:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":969,"nodeType":"UserDefinedTypeName","pathNode":{"id":968,"name":"UintSet","nameLocations":["11536:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"11536:7:9"},"referencedDeclaration":903,"src":"11536:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11535:21:9"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":981,"src":"11580:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"11580:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11579:9:9"},"scope":1033,"src":"11520:112:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"12054:55:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":995,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12083:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12087:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":902,"src":"12083:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":997,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12095:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":994,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"12079:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12079:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12071:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"12071:7:9","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12071:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":991,"id":1000,"nodeType":"Return","src":"12064:38:9"}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"11638:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11983:2:9","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"set","nameLocation":"12002:3:9","nodeType":"VariableDeclaration","scope":1002,"src":"11986:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":984,"nodeType":"UserDefinedTypeName","pathNode":{"id":983,"name":"UintSet","nameLocations":["11986:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"11986:7:9"},"referencedDeclaration":903,"src":"11986:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"index","nameLocation":"12015:5:9","nodeType":"VariableDeclaration","scope":1002,"src":"12007:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11985:36:9"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"12045:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"12045:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12044:9:9"},"scope":1033,"src":"11974:135:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1031,"nodeType":"Block","src":"12727:219:9","statements":[{"assignments":[1016],"declarations":[{"constant":false,"id":1016,"mutability":"mutable","name":"store","nameLocation":"12754:5:9","nodeType":"VariableDeclaration","scope":1031,"src":"12737:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12737:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1015,"nodeType":"ArrayTypeName","src":"12737:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1021,"initialValue":{"arguments":[{"expression":{"id":1018,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12770:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12774:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":902,"src":"12770:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$431_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1017,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12762:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12762:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12737:44:9"},{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"result","nameLocation":"12808:6:9","nodeType":"VariableDeclaration","scope":1031,"src":"12791:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"12791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1025,"nodeType":"ArrayTypeName","src":"12791:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1027,"nodeType":"VariableDeclarationStatement","src":"12791:23:9"},{"AST":{"nodeType":"YulBlock","src":"12877:39:9","statements":[{"nodeType":"YulAssignment","src":"12891:15:9","value":{"name":"store","nodeType":"YulIdentifier","src":"12901:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12891:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1026,"isOffset":false,"isSlot":false,"src":"12891:6:9","valueSize":1},{"declaration":1016,"isOffset":false,"isSlot":false,"src":"12901:5:9","valueSize":1}],"id":1028,"nodeType":"InlineAssembly","src":"12868:48:9"},{"expression":{"id":1029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"12933:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1011,"id":1030,"nodeType":"Return","src":"12926:13:9"}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"12115:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12658:6:9","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"set","nameLocation":"12681:3:9","nodeType":"VariableDeclaration","scope":1032,"src":"12665:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1005,"nodeType":"UserDefinedTypeName","pathNode":{"id":1004,"name":"UintSet","nameLocations":["12665:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"12665:7:9"},"referencedDeclaration":903,"src":"12665:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12664:21:9"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"12709:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"12709:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1009,"nodeType":"ArrayTypeName","src":"12709:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12708:18:9"},"scope":1033,"src":"12649:297:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1034,"src":"1318:11630:9","usedErrors":[]}],"src":"205:12744:9"},"id":9},"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol","exportedSymbols":{"AggregatorV3Interface":[297],"ConfirmedOwner":[88],"EnumerableSet":[1033],"IERC677Receiver":[309],"IVRFSubscriptionV2Plus":[2652],"LinkTokenInterface":[420],"SubscriptionAPI":[2368]},"id":2369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1035,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol","file":"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol","id":1037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":1034,"src":"57:114:10","symbolAliases":[{"foreign":{"id":1036,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"65:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","file":"../../shared/interfaces/LinkTokenInterface.sol","id":1039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":421,"src":"172:82:10","symbolAliases":[{"foreign":{"id":1038,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"180:18:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../../shared/access/ConfirmedOwner.sol","id":1041,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":89,"src":"255:70:10","symbolAliases":[{"foreign":{"id":1040,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"263:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","file":"../../shared/interfaces/AggregatorV3Interface.sol","id":1043,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":298,"src":"326:88:10","symbolAliases":[{"foreign":{"id":1042,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"334:21:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","file":"../../shared/interfaces/IERC677Receiver.sol","id":1045,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":310,"src":"415:76:10","symbolAliases":[{"foreign":{"id":1044,"name":"IERC677Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"423:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","file":"./interfaces/IVRFSubscriptionV2Plus.sol","id":1047,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2369,"sourceUnit":2653,"src":"492:79:10","symbolAliases":[{"foreign":{"id":1046,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"500:22:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1048,"name":"ConfirmedOwner","nameLocations":["610:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":88,"src":"610:14:10"},"id":1049,"nodeType":"InheritanceSpecifier","src":"610:14:10"},{"baseName":{"id":1050,"name":"IERC677Receiver","nameLocations":["626:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":309,"src":"626:15:10"},"id":1051,"nodeType":"InheritanceSpecifier","src":"626:15:10"},{"baseName":{"id":1052,"name":"IVRFSubscriptionV2Plus","nameLocations":["643:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":2652,"src":"643:22:10"},"id":1053,"nodeType":"InheritanceSpecifier","src":"643:22:10"}],"canonicalName":"SubscriptionAPI","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":2368,"linearizedBaseContracts":[2368,2652,309,88,251,325],"name":"SubscriptionAPI","nameLocation":"591:15:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1057,"libraryName":{"id":1054,"name":"EnumerableSet","nameLocations":["676:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1033,"src":"676:13:10"},"nodeType":"UsingForDirective","src":"670:46:10","typeName":{"id":1056,"nodeType":"UserDefinedTypeName","pathNode":{"id":1055,"name":"EnumerableSet.UintSet","nameLocations":["694:13:10","708:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"694:21:10"},"referencedDeclaration":903,"src":"694:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"}}},{"constant":false,"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"720:89:10","text":"@dev may not be provided upon construction on some chains due to lack of availability"},"functionSelector":"1b6b6d23","id":1061,"mutability":"mutable","name":"LINK","nameLocation":"838:4:10","nodeType":"VariableDeclaration","scope":2368,"src":"812:30:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"},"typeName":{"id":1060,"nodeType":"UserDefinedTypeName","pathNode":{"id":1059,"name":"LinkTokenInterface","nameLocations":["812:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":420,"src":"812:18:10"},"referencedDeclaration":420,"src":"812:18:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}},"visibility":"public"},{"constant":false,"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"846:89:10","text":"@dev may not be provided upon construction on some chains due to lack of availability"},"functionSelector":"72e9d565","id":1065,"mutability":"mutable","name":"LINK_NATIVE_FEED","nameLocation":"967:16:10","nodeType":"VariableDeclaration","scope":2368,"src":"938:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$297","typeString":"contract AggregatorV3Interface"},"typeName":{"id":1064,"nodeType":"UserDefinedTypeName","pathNode":{"id":1063,"name":"AggregatorV3Interface","nameLocations":["938:21:10"],"nodeType":"IdentifierPath","referencedDeclaration":297,"src":"938:21:10"},"referencedDeclaration":297,"src":"938:21:10","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$297","typeString":"contract AggregatorV3Interface"}},"visibility":"public"},{"constant":true,"functionSelector":"64d51a2a","id":1068,"mutability":"constant","name":"MAX_CONSUMERS","nameLocation":"1212:13:10","nodeType":"VariableDeclaration","scope":2368,"src":"1189:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1066,"name":"uint16","nodeType":"ElementaryTypeName","src":"1189:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1228:3:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"errorSelector":"05a48e0f","id":1070,"name":"TooManyConsumers","nameLocation":"1241:16:10","nodeType":"ErrorDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"1257:2:10"},"src":"1235:25:10"},{"errorSelector":"f4d678b8","id":1072,"name":"InsufficientBalance","nameLocation":"1269:19:10","nodeType":"ErrorDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"1288:2:10"},"src":"1263:28:10"},{"errorSelector":"79bfd401","id":1078,"name":"InvalidConsumer","nameLocation":"1300:15:10","nodeType":"ErrorDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"subId","nameLocation":"1324:5:10","nodeType":"VariableDeclaration","scope":1078,"src":"1316:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"consumer","nameLocation":"1339:8:10","nodeType":"VariableDeclaration","scope":1078,"src":"1331:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"1331:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1315:33:10"},"src":"1294:55:10"},{"errorSelector":"1f6a65b6","id":1080,"name":"InvalidSubscription","nameLocation":"1358:19:10","nodeType":"ErrorDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"1377:2:10"},"src":"1352:28:10"},{"errorSelector":"44b0e3c3","id":1082,"name":"OnlyCallableFromLink","nameLocation":"1389:20:10","nodeType":"ErrorDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"1409:2:10"},"src":"1383:29:10"},{"errorSelector":"8129bbcd","id":1084,"name":"InvalidCalldata","nameLocation":"1421:15:10","nodeType":"ErrorDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[],"src":"1436:2:10"},"src":"1415:24:10"},{"errorSelector":"d8a3fb52","id":1088,"name":"MustBeSubOwner","nameLocation":"1448:14:10","nodeType":"ErrorDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"owner","nameLocation":"1471:5:10","nodeType":"VariableDeclaration","scope":1088,"src":"1463:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:15:10"},"src":"1442:36:10"},{"errorSelector":"b42f66e8","id":1090,"name":"PendingRequestExists","nameLocation":"1487:20:10","nodeType":"ErrorDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[],"src":"1507:2:10"},"src":"1481:29:10"},{"errorSelector":"d084e975","id":1094,"name":"MustBeRequestedOwner","nameLocation":"1519:20:10","nodeType":"ErrorDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"proposedOwner","nameLocation":"1548:13:10","nodeType":"VariableDeclaration","scope":1094,"src":"1540:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"1540:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1539:23:10"},"src":"1513:50:10"},{"errorSelector":"a99da302","id":1100,"name":"BalanceInvariantViolated","nameLocation":"1572:24:10","nodeType":"ErrorDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"internalBalance","nameLocation":"1605:15:10","nodeType":"VariableDeclaration","scope":1100,"src":"1597:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"externalBalance","nameLocation":"1630:15:10","nodeType":"VariableDeclaration","scope":1100,"src":"1622:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:50:10"},"src":"1566:81:10"},{"anonymous":false,"eventSelector":"59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b436600","id":1106,"name":"FundsRecovered","nameLocation":"1679:14:10","nodeType":"EventDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1702:2:10","nodeType":"VariableDeclaration","scope":1106,"src":"1694:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"1694:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1714:6:10","nodeType":"VariableDeclaration","scope":1106,"src":"1706:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1706:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:28:10"},"src":"1673:49:10"},{"anonymous":false,"eventSelector":"4aed7c8eed0496c8c19ea2681fcca25741c1602342e38b045d9f1e8e905d2e9c","id":1112,"name":"NativeFundsRecovered","nameLocation":"1731:20:10","nodeType":"EventDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1760:2:10","nodeType":"VariableDeclaration","scope":1112,"src":"1752:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1110,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1772:6:10","nodeType":"VariableDeclaration","scope":1112,"src":"1764:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1751:28:10"},"src":"1725:55:10"},{"errorSelector":"2d118a6e","id":1114,"name":"LinkAlreadySet","nameLocation":"1789:14:10","nodeType":"ErrorDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"1803:2:10"},"src":"1783:23:10"},{"errorSelector":"950b2479","id":1116,"name":"FailedToSendNative","nameLocation":"1815:18:10","nodeType":"ErrorDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[],"src":"1833:2:10"},"src":"1809:27:10"},{"errorSelector":"7c07fc4c","id":1118,"name":"FailedToTransferLink","nameLocation":"1845:20:10","nodeType":"ErrorDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"1865:2:10"},"src":"1839:29:10"},{"errorSelector":"1390f2a1","id":1120,"name":"IndexOutOfRange","nameLocation":"1877:15:10","nodeType":"ErrorDefinition","parameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"1892:2:10"},"src":"1871:24:10"},{"errorSelector":"c1f0c0a1","id":1122,"name":"LinkNotSet","nameLocation":"1904:10:10","nodeType":"ErrorDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"1914:2:10"},"src":"1898:19:10"},{"canonicalName":"SubscriptionAPI.Subscription","id":1129,"members":[{"constant":false,"id":1124,"mutability":"mutable","name":"balance","nameLocation":"2130:7:10","nodeType":"VariableDeclaration","scope":1129,"src":"2123:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1123,"name":"uint96","nodeType":"ElementaryTypeName","src":"2123:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"nativeBalance","nameLocation":"2355:13:10","nodeType":"VariableDeclaration","scope":1129,"src":"2348:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1125,"name":"uint96","nodeType":"ElementaryTypeName","src":"2348:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"reqCount","nameLocation":"2438:8:10","nodeType":"VariableDeclaration","scope":1129,"src":"2431:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1127,"name":"uint64","nodeType":"ElementaryTypeName","src":"2431:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1999:12:10","nodeType":"StructDefinition","scope":2368,"src":"1992:459:10","visibility":"public"},{"canonicalName":"SubscriptionAPI.SubscriptionConfig","id":1137,"members":[{"constant":false,"id":1131,"mutability":"mutable","name":"owner","nameLocation":"2535:5:10","nodeType":"VariableDeclaration","scope":1137,"src":"2527:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"requestedOwner","nameLocation":"2597:14:10","nodeType":"VariableDeclaration","scope":1137,"src":"2589:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"consumers","nameLocation":"3071:9:10","nodeType":"VariableDeclaration","scope":1137,"src":"3061:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1135,"nodeType":"ArrayTypeName","src":"3061:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"SubscriptionConfig","nameLocation":"2502:18:10","nodeType":"StructDefinition","scope":2368,"src":"2495:590:10","visibility":"public"},{"canonicalName":"SubscriptionAPI.ConsumerConfig","id":1144,"members":[{"constant":false,"id":1139,"mutability":"mutable","name":"active","nameLocation":"3121:6:10","nodeType":"VariableDeclaration","scope":1144,"src":"3116:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"3116:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"nonce","nameLocation":"3140:5:10","nodeType":"VariableDeclaration","scope":1144,"src":"3133:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1140,"name":"uint64","nodeType":"ElementaryTypeName","src":"3133:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"pendingReqCount","nameLocation":"3158:15:10","nodeType":"VariableDeclaration","scope":1144,"src":"3151:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1142,"name":"uint64","nodeType":"ElementaryTypeName","src":"3151:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"ConsumerConfig","nameLocation":"3095:14:10","nodeType":"StructDefinition","scope":2368,"src":"3088:90:10","visibility":"public"},{"constant":false,"id":1151,"mutability":"mutable","name":"s_consumers","nameLocation":"3388:11:10","nodeType":"VariableDeclaration","scope":2368,"src":"3265:134:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))"},"typeName":{"id":1150,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"3273:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3265:54:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1149,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3292:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3284:34:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1148,"nodeType":"UserDefinedTypeName","pathNode":{"id":1147,"name":"ConsumerConfig","nameLocations":["3303:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1144,"src":"3303:14:10"},"referencedDeclaration":1144,"src":"3303:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig"}}}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"s_subscriptionConfigs","nameLocation":"3488:21:10","nodeType":"VariableDeclaration","scope":2368,"src":"3403:106:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)"},"typeName":{"id":1155,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3411:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3403:38:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1154,"nodeType":"UserDefinedTypeName","pathNode":{"id":1153,"name":"SubscriptionConfig","nameLocations":["3422:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":1137,"src":"3422:18:10"},"referencedDeclaration":1137,"src":"3422:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig"}}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"s_subscriptions","nameLocation":"3586:15:10","nodeType":"VariableDeclaration","scope":2368,"src":"3513:88:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription)"},"typeName":{"id":1160,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3513:32:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1159,"nodeType":"UserDefinedTypeName","pathNode":{"id":1158,"name":"Subscription","nameLocations":["3532:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1129,"src":"3532:12:10"},"referencedDeclaration":1129,"src":"3532:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage_ptr","typeString":"struct SubscriptionAPI.Subscription"}}},"visibility":"internal"},{"constant":false,"functionSelector":"9d40a6fd","id":1163,"mutability":"mutable","name":"s_currentSubNonce","nameLocation":"3688:17:10","nodeType":"VariableDeclaration","scope":2368,"src":"3674:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1162,"name":"uint64","nodeType":"ElementaryTypeName","src":"3674:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"id":1166,"mutability":"mutable","name":"s_subIds","nameLocation":"4183:8:10","nodeType":"VariableDeclaration","scope":2368,"src":"4152:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1165,"nodeType":"UserDefinedTypeName","pathNode":{"id":1164,"name":"EnumerableSet.UintSet","nameLocations":["4152:13:10","4166:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"4152:21:10"},"referencedDeclaration":903,"src":"4152:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"functionSelector":"86fe91c7","id":1168,"mutability":"mutable","name":"s_totalBalance","nameLocation":"4490:14:10","nodeType":"VariableDeclaration","scope":2368,"src":"4476:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1167,"name":"uint96","nodeType":"ElementaryTypeName","src":"4476:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"18e3dd27","id":1170,"mutability":"mutable","name":"s_totalNativeBalance","nameLocation":"4826:20:10","nodeType":"VariableDeclaration","scope":2368,"src":"4812:34:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1169,"name":"uint96","nodeType":"ElementaryTypeName","src":"4812:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"id":1172,"mutability":"mutable","name":"s_withdrawableTokens","nameLocation":"4866:20:10","nodeType":"VariableDeclaration","scope":2368,"src":"4850:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1171,"name":"uint96","nodeType":"ElementaryTypeName","src":"4850:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"s_withdrawableNative","nameLocation":"4906:20:10","nodeType":"VariableDeclaration","scope":2368,"src":"4890:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1173,"name":"uint96","nodeType":"ElementaryTypeName","src":"4890:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"1d3015d7ba850fa198dc7b1a3f5d42779313a681035f77c8c03764c61005518d","id":1180,"name":"SubscriptionCreated","nameLocation":"4937:19:10","nodeType":"EventDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4973:5:10","nodeType":"VariableDeclaration","scope":1180,"src":"4957:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"4957:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1178,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"4988:5:10","nodeType":"VariableDeclaration","scope":1180,"src":"4980:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"4980:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4956:38:10"},"src":"4931:64:10"},{"anonymous":false,"eventSelector":"1ced9348ff549fceab2ac57cd3a9de38edaaab274b725ee82c23e8fc8c4eec7a","id":1188,"name":"SubscriptionFunded","nameLocation":"5004:18:10","nodeType":"EventDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5039:5:10","nodeType":"VariableDeclaration","scope":1188,"src":"5023:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"5054:10:10","nodeType":"VariableDeclaration","scope":1188,"src":"5046:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"5046:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1186,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"5074:10:10","nodeType":"VariableDeclaration","scope":1188,"src":"5066:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"5066:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5022:63:10"},"src":"4998:88:10"},{"anonymous":false,"eventSelector":"7603b205d03651ee812f803fccde89f1012e545a9c99f0abfea9cedd0fd8e902","id":1196,"name":"SubscriptionFundedWithNative","nameLocation":"5095:28:10","nodeType":"EventDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5140:5:10","nodeType":"VariableDeclaration","scope":1196,"src":"5124:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"5124:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1192,"indexed":false,"mutability":"mutable","name":"oldNativeBalance","nameLocation":"5155:16:10","nodeType":"VariableDeclaration","scope":1196,"src":"5147:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5147:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1194,"indexed":false,"mutability":"mutable","name":"newNativeBalance","nameLocation":"5181:16:10","nodeType":"VariableDeclaration","scope":1196,"src":"5173:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5173:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5123:75:10"},"src":"5089:110:10"},{"anonymous":false,"eventSelector":"1e980d04aa7648e205713e5e8ea3808672ac163d10936d36f91b2c88ac1575e1","id":1202,"name":"SubscriptionConsumerAdded","nameLocation":"5208:25:10","nodeType":"EventDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5250:5:10","nodeType":"VariableDeclaration","scope":1202,"src":"5234:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"5234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1200,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"5265:8:10","nodeType":"VariableDeclaration","scope":1202,"src":"5257:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"5257:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5233:41:10"},"src":"5202:73:10"},{"anonymous":false,"eventSelector":"32158c6058347c1601b2d12bc696ac6901d8a9a9aa3ba10c27ab0a983e8425a7","id":1208,"name":"SubscriptionConsumerRemoved","nameLocation":"5284:27:10","nodeType":"EventDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5328:5:10","nodeType":"VariableDeclaration","scope":1208,"src":"5312:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1206,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"5343:8:10","nodeType":"VariableDeclaration","scope":1208,"src":"5335:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5311:41:10"},"src":"5278:75:10"},{"anonymous":false,"eventSelector":"8c74ce8b8cf87f5eb001275c8be27eb34ea2b62bfab6814fcc62192bb63e81c4","id":1218,"name":"SubscriptionCanceled","nameLocation":"5362:20:10","nodeType":"EventDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5399:5:10","nodeType":"VariableDeclaration","scope":1218,"src":"5383:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"5383:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1212,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5414:2:10","nodeType":"VariableDeclaration","scope":1218,"src":"5406:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"5406:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1214,"indexed":false,"mutability":"mutable","name":"amountLink","nameLocation":"5426:10:10","nodeType":"VariableDeclaration","scope":1218,"src":"5418:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"5418:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1216,"indexed":false,"mutability":"mutable","name":"amountNative","nameLocation":"5446:12:10","nodeType":"VariableDeclaration","scope":1218,"src":"5438:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5382:77:10"},"src":"5356:104:10"},{"anonymous":false,"eventSelector":"21a4dad170a6bf476c31bbcf4a16628295b0e450672eec25d7c93308e05344a1","id":1226,"name":"SubscriptionOwnerTransferRequested","nameLocation":"5469:34:10","nodeType":"EventDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5520:5:10","nodeType":"VariableDeclaration","scope":1226,"src":"5504:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"5504:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1222,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"5535:4:10","nodeType":"VariableDeclaration","scope":1226,"src":"5527:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"5527:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1224,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5549:2:10","nodeType":"VariableDeclaration","scope":1226,"src":"5541:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"5541:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5503:49:10"},"src":"5463:90:10"},{"anonymous":false,"eventSelector":"d4114ab6e9af9f597c52041f32d62dc57c5c4e4c0d4427006069635e216c9386","id":1234,"name":"SubscriptionOwnerTransferred","nameLocation":"5562:28:10","nodeType":"EventDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5607:5:10","nodeType":"VariableDeclaration","scope":1234,"src":"5591:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1230,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"5622:4:10","nodeType":"VariableDeclaration","scope":1234,"src":"5614:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1232,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5636:2:10","nodeType":"VariableDeclaration","scope":1234,"src":"5628:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"5628:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5590:49:10"},"src":"5556:84:10"},{"canonicalName":"SubscriptionAPI.Config","id":1253,"members":[{"constant":false,"id":1236,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"5671:27:10","nodeType":"VariableDeclaration","scope":1253,"src":"5664:34:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1235,"name":"uint16","nodeType":"ElementaryTypeName","src":"5664:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"maxGasLimit","nameLocation":"5711:11:10","nodeType":"VariableDeclaration","scope":1253,"src":"5704:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1237,"name":"uint32","nodeType":"ElementaryTypeName","src":"5704:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"reentrancyLock","nameLocation":"5763:14:10","nodeType":"VariableDeclaration","scope":1253,"src":"5758:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1239,"name":"bool","nodeType":"ElementaryTypeName","src":"5758:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"5919:16:10","nodeType":"VariableDeclaration","scope":1253,"src":"5912:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1241,"name":"uint32","nodeType":"ElementaryTypeName","src":"5912:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"6843:26:10","nodeType":"VariableDeclaration","scope":1253,"src":"6836:33:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1243,"name":"uint32","nodeType":"ElementaryTypeName","src":"6836:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"fulfillmentFlatFeeNativePPM","nameLocation":"6986:27:10","nodeType":"VariableDeclaration","scope":1253,"src":"6979:34:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1245,"name":"uint32","nodeType":"ElementaryTypeName","src":"6979:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"fulfillmentFlatFeeLinkDiscountPPM","nameLocation":"7215:33:10","nodeType":"VariableDeclaration","scope":1253,"src":"7208:40:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1247,"name":"uint32","nodeType":"ElementaryTypeName","src":"7208:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"nativePremiumPercentage","nameLocation":"7501:23:10","nodeType":"VariableDeclaration","scope":1253,"src":"7495:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1249,"name":"uint8","nodeType":"ElementaryTypeName","src":"7495:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"linkPremiumPercentage","nameLocation":"7767:21:10","nodeType":"VariableDeclaration","scope":1253,"src":"7761:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1251,"name":"uint8","nodeType":"ElementaryTypeName","src":"7761:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"Config","nameLocation":"5651:6:10","nodeType":"StructDefinition","scope":2368,"src":"5644:2149:10","visibility":"public"},{"constant":false,"functionSelector":"088070f5","id":1256,"mutability":"mutable","name":"s_config","nameLocation":"7810:8:10","nodeType":"VariableDeclaration","scope":2368,"src":"7796:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1253_storage","typeString":"struct SubscriptionAPI.Config"},"typeName":{"id":1255,"nodeType":"UserDefinedTypeName","pathNode":{"id":1254,"name":"Config","nameLocations":["7796:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"7796:6:10"},"referencedDeclaration":1253,"src":"7796:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1253_storage_ptr","typeString":"struct SubscriptionAPI.Config"}},"visibility":"public"},{"errorSelector":"ed3ba6a6","id":1258,"name":"Reentrant","nameLocation":"7829:9:10","nodeType":"ErrorDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[],"src":"7838:2:10"},"src":"7823:18:10"},{"body":{"id":1264,"nodeType":"Block","src":"7868:33:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1260,"name":"_nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7874:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7874:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"ExpressionStatement","src":"7874:15:10"},{"id":1263,"nodeType":"PlaceholderStatement","src":"7895:1:10"}]},"id":1265,"name":"nonReentrant","nameLocation":"7853:12:10","nodeType":"ModifierDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"7865:2:10"},"src":"7844:57:10","virtual":false,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"7944:72:10","statements":[{"condition":{"expression":{"id":1268,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"7954:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1253_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":1269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7963:14:10","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":1240,"src":"7954:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1274,"nodeType":"IfStatement","src":"7950:62:10","trueBody":{"id":1273,"nodeType":"Block","src":"7979:33:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1270,"name":"Reentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"7994:9:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7994:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1272,"nodeType":"RevertStatement","src":"7987:18:10"}]}}]},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrant","nameLocation":"7914:13:10","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[],"src":"7927:2:10"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"7944:0:10"},"scope":2368,"src":"7905:111:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"8061:2:10","statements":[]},"id":1284,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1279,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8049:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8053:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8049:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1281,"kind":"baseConstructorSpecifier","modifierName":{"id":1278,"name":"ConfirmedOwner","nameLocations":["8034:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":88,"src":"8034:14:10"},"nodeType":"ModifierInvocation","src":"8034:26:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"8031:2:10"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"8061:0:10"},"scope":2368,"src":"8020:43:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1320,"nodeType":"Block","src":"8368:263:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1296,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"8469:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8461:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"8461:7:10","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8461:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8478:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"8478:7:10","typeDescriptions":{}}},"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8478:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8461:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1307,"nodeType":"IfStatement","src":"8457:71:10","trueBody":{"id":1306,"nodeType":"Block","src":"8490:38:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1303,"name":"LinkAlreadySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"8505:14:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8505:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1305,"nodeType":"RevertStatement","src":"8498:23:10"}]}},{"expression":{"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1308,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"8533:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1310,"name":"link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"8559:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1309,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"8540:18:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$420_$","typeString":"type(contract LinkTokenInterface)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8540:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}},"src":"8533:31:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}},"id":1313,"nodeType":"ExpressionStatement","src":"8533:31:10"},{"expression":{"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1314,"name":"LINK_NATIVE_FEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"8570:16:10","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$297","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1316,"name":"linkNativeFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"8611:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1315,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"8589:21:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$297_$","typeString":"type(contract AggregatorV3Interface)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8589:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$297","typeString":"contract AggregatorV3Interface"}},"src":"8570:56:10","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$297","typeString":"contract AggregatorV3Interface"}},"id":1319,"nodeType":"ExpressionStatement","src":"8570:56:10"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"8067:207:10","text":" @notice set the LINK token contract and link native feed to be\n used by this coordinator\n @param link - address of link token\n @param linkNativeFeed address of the link native feed"},"functionSelector":"65982744","id":1321,"implemented":true,"kind":"function","modifiers":[{"id":1292,"kind":"modifierInvocation","modifierName":{"id":1291,"name":"onlyOwner","nameLocations":["8358:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"8358:9:10"},"nodeType":"ModifierInvocation","src":"8358:9:10"}],"name":"setLINKAndLINKNativeFeed","nameLocation":"8286:24:10","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"link","nameLocation":"8319:4:10","nodeType":"VariableDeclaration","scope":1321,"src":"8311:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"8311:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"linkNativeFeed","nameLocation":"8333:14:10","nodeType":"VariableDeclaration","scope":1321,"src":"8325:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"8325:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8310:38:10"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[],"src":"8368:0:10"},"scope":2368,"src":"8277:354:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1352,"nodeType":"Block","src":"8947:188:10","statements":[{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"subOwner","nameLocation":"8961:8:10","nodeType":"VariableDeclaration","scope":1352,"src":"8953:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"8953:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1335,"initialValue":{"expression":{"baseExpression":{"id":1331,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"8972:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1333,"indexExpression":{"id":1332,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8994:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8972:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9001:5:10","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"8972:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8953:53:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9016:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9036:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9028:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"9028:7:10","typeDescriptions":{}}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9028:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9016:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"IfStatement","src":"9012:71:10","trueBody":{"id":1345,"nodeType":"Block","src":"9040:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1342,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"9055:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9055:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1344,"nodeType":"RevertStatement","src":"9048:28:10"}]}},{"expression":{"arguments":[{"id":1348,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9114:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1349,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9121:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1347,"name":"_cancelSubscriptionHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"9088:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9088:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"ExpressionStatement","src":"9088:42:10"}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"8635:242:10","text":" @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n @param subId subscription id\n @dev notably can be called even if there are pending requests, outstanding ones may fail onchain"},"functionSelector":"aa433aff","id":1353,"implemented":true,"kind":"function","modifiers":[{"id":1327,"kind":"modifierInvocation","modifierName":{"id":1326,"name":"onlyOwner","nameLocations":["8937:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"8937:9:10"},"nodeType":"ModifierInvocation","src":"8937:9:10"}],"name":"ownerCancelSubscription","nameLocation":"8889:23:10","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"subId","nameLocation":"8921:5:10","nodeType":"VariableDeclaration","scope":1353,"src":"8913:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"8913:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8912:15:10"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"8947:0:10"},"scope":2368,"src":"8880:255:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1429,"nodeType":"Block","src":"9316:835:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1363,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"9562:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9554:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"9554:7:10","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9554:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9579:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9571:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"9571:7:10","typeDescriptions":{}}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9571:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9554:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1374,"nodeType":"IfStatement","src":"9550:67:10","trueBody":{"id":1373,"nodeType":"Block","src":"9583:34:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1370,"name":"LinkNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"9598:10:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9598:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"RevertStatement","src":"9591:19:10"}]}},{"assignments":[1376],"declarations":[{"constant":false,"id":1376,"mutability":"mutable","name":"externalBalance","nameLocation":"9631:15:10","nodeType":"VariableDeclaration","scope":1429,"src":"9623:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"9623:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1384,"initialValue":{"arguments":[{"arguments":[{"id":1381,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9672:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionAPI_$2368","typeString":"contract SubscriptionAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionAPI_$2368","typeString":"contract SubscriptionAPI"}],"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9664:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"9664:7:10","typeDescriptions":{}}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9664:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1377,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"9649:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9654:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":352,"src":"9649:14:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9649:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9623:55:10"},{"assignments":[1386],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"internalBalance","nameLocation":"9692:15:10","nodeType":"VariableDeclaration","scope":1429,"src":"9684:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"9684:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1391,"initialValue":{"arguments":[{"id":1389,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"9718:14:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9710:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"9710:7:10","typeDescriptions":{}}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9710:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9684:49:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1392,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"9743:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1393,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"9761:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9743:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"9739:119:10","trueBody":{"id":1400,"nodeType":"Block","src":"9778:80:10","statements":[{"errorCall":{"arguments":[{"id":1396,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"9818:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1397,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"9835:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1395,"name":"BalanceInvariantViolated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"9793:24:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9793:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"RevertStatement","src":"9786:65:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"9867:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1403,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"9885:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9867:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1428,"nodeType":"IfStatement","src":"9863:230:10","trueBody":{"id":1427,"nodeType":"Block","src":"9902:191:10","statements":[{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"amount","nameLocation":"9918:6:10","nodeType":"VariableDeclaration","scope":1427,"src":"9910:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"9910:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1410,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1407,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"9927:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1408,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"9945:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9927:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9910:50:10"},{"condition":{"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9972:26:10","subExpression":{"arguments":[{"id":1413,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"9987:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1414,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"9991:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1411,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"9973:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9978:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":397,"src":"9973:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9973:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1421,"nodeType":"IfStatement","src":"9968:80:10","trueBody":{"id":1420,"nodeType":"Block","src":"10000:48:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1417,"name":"FailedToTransferLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"10017:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10017:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"RevertStatement","src":"10010:29:10"}]}},{"eventCall":{"arguments":[{"id":1423,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"10075:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1424,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10079:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1422,"name":"FundsRecovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"10060:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10060:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"EmitStatement","src":"10055:31:10"}]}}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"9139:121:10","text":" @notice Recover link sent with transfer instead of transferAndCall.\n @param to address to send link to"},"functionSelector":"e72f6e30","id":1430,"implemented":true,"kind":"function","modifiers":[{"id":1359,"kind":"modifierInvocation","modifierName":{"id":1358,"name":"onlyOwner","nameLocations":["9306:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"9306:9:10"},"nodeType":"ModifierInvocation","src":"9306:9:10"}],"name":"recoverFunds","nameLocation":"9272:12:10","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"to","nameLocation":"9293:2:10","nodeType":"VariableDeclaration","scope":1430,"src":"9285:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"9285:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9284:12:10"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[],"src":"9316:0:10"},"scope":2368,"src":"9263:888:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1495,"nodeType":"Block","src":"10361:565:10","statements":[{"assignments":[1439],"declarations":[{"constant":false,"id":1439,"mutability":"mutable","name":"externalBalance","nameLocation":"10375:15:10","nodeType":"VariableDeclaration","scope":1495,"src":"10367:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"10367:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1445,"initialValue":{"expression":{"arguments":[{"id":1442,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10401:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionAPI_$2368","typeString":"contract SubscriptionAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionAPI_$2368","typeString":"contract SubscriptionAPI"}],"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10393:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"10393:7:10","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10393:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10407:7:10","memberName":"balance","nodeType":"MemberAccess","src":"10393:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10367:47:10"},{"assignments":[1447],"declarations":[{"constant":false,"id":1447,"mutability":"mutable","name":"internalBalance","nameLocation":"10428:15:10","nodeType":"VariableDeclaration","scope":1495,"src":"10420:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"10420:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1452,"initialValue":{"arguments":[{"id":1450,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"10454:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10446:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"10446:7:10","typeDescriptions":{}}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10446:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10420:55:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"10485:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1454,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"10503:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10485:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1462,"nodeType":"IfStatement","src":"10481:119:10","trueBody":{"id":1461,"nodeType":"Block","src":"10520:80:10","statements":[{"errorCall":{"arguments":[{"id":1457,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"10560:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1458,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"10577:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1456,"name":"BalanceInvariantViolated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"10535:24:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10535:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1460,"nodeType":"RevertStatement","src":"10528:65:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"10609:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1464,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"10627:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10609:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1494,"nodeType":"IfStatement","src":"10605:263:10","trueBody":{"id":1493,"nodeType":"Block","src":"10644:224:10","statements":[{"assignments":[1467],"declarations":[{"constant":false,"id":1467,"mutability":"mutable","name":"amount","nameLocation":"10660:6:10","nodeType":"VariableDeclaration","scope":1493,"src":"10652:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"10652:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1471,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"10669:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1469,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"10687:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10669:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10652:50:10"},{"assignments":[1473,null],"declarations":[{"constant":false,"id":1473,"mutability":"mutable","name":"sent","nameLocation":"10716:4:10","nodeType":"VariableDeclaration","scope":1493,"src":"10711:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1472,"name":"bool","nodeType":"ElementaryTypeName","src":"10711:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1480,"initialValue":{"arguments":[{"hexValue":"","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10749:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1474,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10726:2:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10729:4:10","memberName":"call","nodeType":"MemberAccess","src":"10726:7:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1476,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10741:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10726:22:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10726:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10710:42:10"},{"condition":{"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10764:5:10","subExpression":{"id":1481,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10765:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1487,"nodeType":"IfStatement","src":"10760:57:10","trueBody":{"id":1486,"nodeType":"Block","src":"10771:46:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1483,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"10788:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10788:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"RevertStatement","src":"10781:27:10"}]}},{"eventCall":{"arguments":[{"id":1489,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10850:2:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1490,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10854:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1488,"name":"NativeFundsRecovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"10829:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10829:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1492,"nodeType":"EmitStatement","src":"10824:37:10"}]}}]},"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"10155:136:10","text":" @notice Recover native sent with transfer/call/send instead of fundSubscription.\n @param to address to send native to"},"functionSelector":"8402595e","id":1496,"implemented":true,"kind":"function","modifiers":[{"id":1436,"kind":"modifierInvocation","modifierName":{"id":1435,"name":"onlyOwner","nameLocations":["10351:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"10351:9:10"},"nodeType":"ModifierInvocation","src":"10351:9:10"}],"name":"recoverNativeFunds","nameLocation":"10303:18:10","nodeType":"FunctionDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"to","nameLocation":"10338:2:10","nodeType":"VariableDeclaration","scope":1496,"src":"10322:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"10322:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"10321:20:10"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"10361:0:10"},"scope":2368,"src":"10294:632:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1550,"nodeType":"Block","src":"11156:351:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1507,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"11174:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}],"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11166:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"11166:7:10","typeDescriptions":{}}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11166:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11191:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11183:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"11183:7:10","typeDescriptions":{}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11166:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1518,"nodeType":"IfStatement","src":"11162:67:10","trueBody":{"id":1517,"nodeType":"Block","src":"11195:34:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1514,"name":"LinkNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"11210:10:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11210:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"RevertStatement","src":"11203:19:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1519,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"11238:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11262:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11238:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1526,"nodeType":"IfStatement","src":"11234:74:10","trueBody":{"id":1525,"nodeType":"Block","src":"11265:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1522,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"11280:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11280:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"RevertStatement","src":"11273:28:10"}]}},{"assignments":[1528],"declarations":[{"constant":false,"id":1528,"mutability":"mutable","name":"amount","nameLocation":"11320:6:10","nodeType":"VariableDeclaration","scope":1550,"src":"11313:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1527,"name":"uint96","nodeType":"ElementaryTypeName","src":"11313:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1530,"initialValue":{"id":1529,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"11329:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"11313:36:10"},{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"11355:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1532,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"11379:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11355:30:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1534,"nodeType":"ExpressionStatement","src":"11355:30:10"},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1535,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"11391:14:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1536,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"11409:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11391:24:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1538,"nodeType":"ExpressionStatement","src":"11391:24:10"},{"condition":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11425:33:10","subExpression":{"arguments":[{"id":1541,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11440:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1542,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"11451:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"id":1539,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"11426:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11431:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":397,"src":"11426:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11426:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1549,"nodeType":"IfStatement","src":"11421:82:10","trueBody":{"id":1548,"nodeType":"Block","src":"11460:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1545,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"11475:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11475:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1547,"nodeType":"RevertStatement","src":"11468:28:10"}]}}]},"functionSelector":"51cff8d9","id":1551,"implemented":true,"kind":"function","modifiers":[{"id":1501,"kind":"modifierInvocation","modifierName":{"id":1500,"name":"nonReentrant","nameLocations":["11133:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"11133:12:10"},"nodeType":"ModifierInvocation","src":"11133:12:10"},{"id":1503,"kind":"modifierInvocation","modifierName":{"id":1502,"name":"onlyOwner","nameLocations":["11146:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"11146:9:10"},"nodeType":"ModifierInvocation","src":"11146:9:10"}],"name":"withdraw","nameLocation":"11096:8:10","nodeType":"FunctionDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"recipient","nameLocation":"11113:9:10","nodeType":"VariableDeclaration","scope":1551,"src":"11105:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"11105:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11104:19:10"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"11156:0:10"},"scope":2368,"src":"11087:420:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1596,"nodeType":"Block","src":"11753:373:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1560,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"11763:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11763:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"nodeType":"IfStatement","src":"11759:74:10","trueBody":{"id":1566,"nodeType":"Block","src":"11790:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1563,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"11805:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11805:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"RevertStatement","src":"11798:28:10"}]}},{"assignments":[1569],"declarations":[{"constant":false,"id":1569,"mutability":"mutable","name":"amount","nameLocation":"11907:6:10","nodeType":"VariableDeclaration","scope":1596,"src":"11900:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1568,"name":"uint96","nodeType":"ElementaryTypeName","src":"11900:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1571,"initialValue":{"id":1570,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"11916:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"11900:36:10"},{"expression":{"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1572,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"11942:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"11966:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11942:30:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1575,"nodeType":"ExpressionStatement","src":"11942:30:10"},{"expression":{"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1576,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"11978:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1577,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"12002:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11978:30:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1579,"nodeType":"ExpressionStatement","src":"11978:30:10"},{"assignments":[1581,null],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"sent","nameLocation":"12020:4:10","nodeType":"VariableDeclaration","scope":1596,"src":"12015:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1580,"name":"bool","nodeType":"ElementaryTypeName","src":"12015:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1588,"initialValue":{"arguments":[{"hexValue":"","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12060:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1582,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"12030:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12040:4:10","memberName":"call","nodeType":"MemberAccess","src":"12030:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"12052:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"src":"12030:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12030:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12014:49:10"},{"condition":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12073:5:10","subExpression":{"id":1589,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"12074:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1595,"nodeType":"IfStatement","src":"12069:53:10","trueBody":{"id":1594,"nodeType":"Block","src":"12080:42:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1591,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"12095:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12095:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1593,"nodeType":"RevertStatement","src":"12088:27:10"}]}}]},"functionSelector":"2f622e6b","id":1597,"implemented":true,"kind":"function","modifiers":[{"id":1556,"kind":"modifierInvocation","modifierName":{"id":1555,"name":"nonReentrant","nameLocations":["11730:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"11730:12:10"},"nodeType":"ModifierInvocation","src":"11730:12:10"},{"id":1558,"kind":"modifierInvocation","modifierName":{"id":1557,"name":"onlyOwner","nameLocations":["11743:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"11743:9:10"},"nodeType":"ModifierInvocation","src":"11743:9:10"}],"name":"withdrawNative","nameLocation":"11679:14:10","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"recipient","nameLocation":"11710:9:10","nodeType":"VariableDeclaration","scope":1597,"src":"11694:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"11694:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"11693:27:10"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"11753:0:10"},"scope":2368,"src":"11670:456:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[308],"body":{"id":1686,"nodeType":"Block","src":"12245:628:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1609,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12255:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12259:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12255:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1613,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12277:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}],"id":1612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12269:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"12269:7:10","typeDescriptions":{}}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12269:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12255:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1620,"nodeType":"IfStatement","src":"12251:77:10","trueBody":{"id":1619,"nodeType":"Block","src":"12284:44:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1616,"name":"OnlyCallableFromLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"12299:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12299:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"RevertStatement","src":"12292:29:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1621,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"12337:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12342:6:10","memberName":"length","nodeType":"MemberAccess","src":"12337:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3332","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12352:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12337:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1629,"nodeType":"IfStatement","src":"12333:62:10","trueBody":{"id":1628,"nodeType":"Block","src":"12356:39:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1625,"name":"InvalidCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12371:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12371:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"RevertStatement","src":"12364:24:10"}]}},{"assignments":[1631],"declarations":[{"constant":false,"id":1631,"mutability":"mutable","name":"subId","nameLocation":"12408:5:10","nodeType":"VariableDeclaration","scope":1686,"src":"12400:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"12400:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1639,"initialValue":{"arguments":[{"id":1634,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"12427:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12434:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"12434:7:10","typeDescriptions":{}}}],"id":1637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12433:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":1632,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12416:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12420:6:10","memberName":"decode","nodeType":"MemberAccess","src":"12416:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12400:43:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1640,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"12453:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1642,"indexExpression":{"id":1641,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"12475:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12453:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12482:5:10","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"12453:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12499:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12491:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"12491:7:10","typeDescriptions":{}}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12491:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12453:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1653,"nodeType":"IfStatement","src":"12449:97:10","trueBody":{"id":1652,"nodeType":"Block","src":"12503:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1649,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12518:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12518:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"RevertStatement","src":"12511:28:10"}]}},{"assignments":[1655],"declarations":[{"constant":false,"id":1655,"mutability":"mutable","name":"oldBalance","nameLocation":"12664:10:10","nodeType":"VariableDeclaration","scope":1686,"src":"12656:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1660,"initialValue":{"expression":{"baseExpression":{"id":1656,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"12677:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1658,"indexExpression":{"id":1657,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"12693:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12677:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12700:7:10","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"12677:30:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"12656:51:10"},{"expression":{"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1661,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"12713:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1663,"indexExpression":{"id":1662,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"12729:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12713:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12736:7:10","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"12713:30:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1667,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"12754:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12747:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1665,"name":"uint96","nodeType":"ElementaryTypeName","src":"12747:6:10","typeDescriptions":{}}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12747:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"12713:48:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1670,"nodeType":"ExpressionStatement","src":"12713:48:10"},{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1671,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"12767:14:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1674,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"12792:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12785:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1672,"name":"uint96","nodeType":"ElementaryTypeName","src":"12785:6:10","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12785:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"12767:32:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1677,"nodeType":"ExpressionStatement","src":"12767:32:10"},{"eventCall":{"arguments":[{"id":1679,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"12829:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1680,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"12836:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"12848:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1682,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"12861:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12848:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1678,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"12810:18:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12810:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"EmitStatement","src":"12805:63:10"}]},"functionSelector":"a4c0ed36","id":1687,"implemented":true,"kind":"function","modifiers":[{"id":1607,"kind":"modifierInvocation","modifierName":{"id":1606,"name":"nonReentrant","nameLocations":["12232:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"12232:12:10"},"nodeType":"ModifierInvocation","src":"12232:12:10"}],"name":"onTokenTransfer","nameLocation":"12139:15:10","nodeType":"FunctionDefinition","overrides":{"id":1605,"nodeType":"OverrideSpecifier","overrides":[],"src":"12223:8:10"},"parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"12155:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"12155:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"amount","nameLocation":"12185:6:10","nodeType":"VariableDeclaration","scope":1687,"src":"12177:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"12177:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"data","nameLocation":"12208:4:10","nodeType":"VariableDeclaration","scope":1687,"src":"12193:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1602,"name":"bytes","nodeType":"ElementaryTypeName","src":"12193:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12154:59:10"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"12245:0:10"},"scope":2368,"src":"12130:743:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2651],"body":{"id":1745,"nodeType":"Block","src":"13019:620:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1696,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"13029:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1698,"indexExpression":{"id":1697,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"13051:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13029:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13058:5:10","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"13029:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13067:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"13067:7:10","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13067:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13029:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1709,"nodeType":"IfStatement","src":"13025:97:10","trueBody":{"id":1708,"nodeType":"Block","src":"13079:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1705,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"13094:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13094:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"RevertStatement","src":"13087:28:10"}]}},{"assignments":[1711],"declarations":[{"constant":false,"id":1711,"mutability":"mutable","name":"oldNativeBalance","nameLocation":"13375:16:10","nodeType":"VariableDeclaration","scope":1745,"src":"13367:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"13367:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1716,"initialValue":{"expression":{"baseExpression":{"id":1712,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"13394:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1714,"indexExpression":{"id":1713,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"13410:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13394:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13417:13:10","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1126,"src":"13394:36:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"13367:63:10"},{"expression":{"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1717,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"13436:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1719,"indexExpression":{"id":1718,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"13452:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13436:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13459:13:10","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1126,"src":"13436:36:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":1723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13483:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13487:5:10","memberName":"value","nodeType":"MemberAccess","src":"13483:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13476:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1721,"name":"uint96","nodeType":"ElementaryTypeName","src":"13476:6:10","typeDescriptions":{}}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13476:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"13436:57:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1727,"nodeType":"ExpressionStatement","src":"13436:57:10"},{"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1728,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13499:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":1731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13530:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13534:5:10","memberName":"value","nodeType":"MemberAccess","src":"13530:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13523:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1729,"name":"uint96","nodeType":"ElementaryTypeName","src":"13523:6:10","typeDescriptions":{}}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13523:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"13499:41:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1735,"nodeType":"ExpressionStatement","src":"13499:41:10"},{"eventCall":{"arguments":[{"id":1737,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"13580:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1738,"name":"oldNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"13587:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"oldNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"13605:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1740,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13624:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:5:10","memberName":"value","nodeType":"MemberAccess","src":"13624:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13605:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1736,"name":"SubscriptionFundedWithNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"13551:28:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13551:83:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"EmitStatement","src":"13546:88:10"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"12877:49:10","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"95b55cfc","id":1746,"implemented":true,"kind":"function","modifiers":[{"id":1694,"kind":"modifierInvocation","modifierName":{"id":1693,"name":"nonReentrant","nameLocations":["13006:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"13006:12:10"},"nodeType":"ModifierInvocation","src":"13006:12:10"}],"name":"fundSubscriptionWithNative","nameLocation":"12938:26:10","nodeType":"FunctionDefinition","overrides":{"id":1692,"nodeType":"OverrideSpecifier","overrides":[],"src":"12997:8:10"},"parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"subId","nameLocation":"12973:5:10","nodeType":"VariableDeclaration","scope":1746,"src":"12965:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"12965:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12964:15:10"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[],"src":"13019:0:10"},"scope":2368,"src":"12929:710:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2627],"body":{"id":1801,"nodeType":"Block","src":"13892:334:10","statements":[{"expression":{"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"13898:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1765,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"13909:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1767,"indexExpression":{"id":1766,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"13931:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13909:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13938:5:10","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"13909:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13898:45:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1770,"nodeType":"ExpressionStatement","src":"13898:45:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"13953:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13973:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13965:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"13965:7:10","typeDescriptions":{}}},"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13965:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13953:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1781,"nodeType":"IfStatement","src":"13949:71:10","trueBody":{"id":1780,"nodeType":"Block","src":"13977:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1777,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"13992:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13992:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"RevertStatement","src":"13985:28:10"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":1782,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"14040:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1784,"indexExpression":{"id":1783,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14056:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14040:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14063:7:10","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"14040:30:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"baseExpression":{"id":1786,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"14078:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1788,"indexExpression":{"id":1787,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14094:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14078:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14101:13:10","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1126,"src":"14078:36:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"baseExpression":{"id":1790,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"14122:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1792,"indexExpression":{"id":1791,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14138:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14122:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14145:8:10","memberName":"reqCount","nodeType":"MemberAccess","referencedDeclaration":1128,"src":"14122:31:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1794,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"14161:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1795,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"14177:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1797,"indexExpression":{"id":1796,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"14199:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14177:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14206:9:10","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1136,"src":"14177:38:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":1799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14032:189:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$_t_uint64_$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(uint96,uint96,uint64,address,address[] storage ref)"}},"functionReturnParameters":1763,"id":1800,"nodeType":"Return","src":"14025:196:10"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"13643:49:10","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"dc311dd3","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"13704:15:10","nodeType":"FunctionDefinition","overrides":{"id":1751,"nodeType":"OverrideSpecifier","overrides":[],"src":"13767:8:10"},"parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"subId","nameLocation":"13733:5:10","nodeType":"VariableDeclaration","scope":1802,"src":"13725:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"13725:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13719:23:10"},"returnParameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"balance","nameLocation":"13796:7:10","nodeType":"VariableDeclaration","scope":1802,"src":"13789:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1752,"name":"uint96","nodeType":"ElementaryTypeName","src":"13789:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"nativeBalance","nameLocation":"13812:13:10","nodeType":"VariableDeclaration","scope":1802,"src":"13805:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1754,"name":"uint96","nodeType":"ElementaryTypeName","src":"13805:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"reqCount","nameLocation":"13834:8:10","nodeType":"VariableDeclaration","scope":1802,"src":"13827:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1756,"name":"uint64","nodeType":"ElementaryTypeName","src":"13827:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"subOwner","nameLocation":"13852:8:10","nodeType":"VariableDeclaration","scope":1802,"src":"13844:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"13844:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"consumers","nameLocation":"13879:9:10","nodeType":"VariableDeclaration","scope":1802,"src":"13862:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"13862:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1761,"nodeType":"ArrayTypeName","src":"13862:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13788:101:10"},"scope":2368,"src":"13695:531:10","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2645],"body":{"id":1885,"nodeType":"Block","src":"14420:427:10","statements":[{"assignments":[1815],"declarations":[{"constant":false,"id":1815,"mutability":"mutable","name":"numSubs","nameLocation":"14434:7:10","nodeType":"VariableDeclaration","scope":1885,"src":"14426:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"14426:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1819,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1816,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"14444:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14453:6:10","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":981,"src":"14444:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$903_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_UintSet_$903_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14444:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14426:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1820,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"14471:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1821,"name":"numSubs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"14485:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14471:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1826,"nodeType":"IfStatement","src":"14467:51:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1823,"name":"IndexOutOfRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"14501:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14501:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1825,"nodeType":"RevertStatement","src":"14494:24:10"}},{"assignments":[1828],"declarations":[{"constant":false,"id":1828,"mutability":"mutable","name":"endIndex","nameLocation":"14532:8:10","nodeType":"VariableDeclaration","scope":1885,"src":"14524:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"14524:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1832,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"14543:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1830,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"14556:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14543:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14524:40:10"},{"expression":{"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1833,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"14570:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"14581:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1835,"name":"numSubs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"14592:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14581:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"14603:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14615:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14603:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14581:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1842,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"14629:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14581:56:10","trueExpression":{"id":1841,"name":"numSubs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"14619:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14570:67:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1845,"nodeType":"ExpressionStatement","src":"14570:67:10"},{"assignments":[1847],"declarations":[{"constant":false,"id":1847,"mutability":"mutable","name":"idsLength","nameLocation":"14651:9:10","nodeType":"VariableDeclaration","scope":1885,"src":"14643:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"14643:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1851,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1848,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"14663:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1849,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"14674:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14663:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14643:41:10"},{"expression":{"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1852,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"14690:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1856,"name":"idsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"14710:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14696:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"14700:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1854,"nodeType":"ArrayTypeName","src":"14700:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14696:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"14690:30:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1859,"nodeType":"ExpressionStatement","src":"14690:30:10"},{"body":{"id":1881,"nodeType":"Block","src":"14772:55:10","statements":[{"expression":{"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1870,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"14780:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1872,"indexExpression":{"id":1871,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"14784:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14780:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"14803:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1876,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"14809:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14803:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1873,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"14791:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14800:2:10","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1002,"src":"14791:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$903_storage_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_struct$_UintSet_$903_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14791:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14780:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1880,"nodeType":"ExpressionStatement","src":"14780:40:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"14748:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1865,"name":"idsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"14754:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14748:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1882,"initializationExpression":{"assignments":[1861],"declarations":[{"constant":false,"id":1861,"mutability":"mutable","name":"idx","nameLocation":"14739:3:10","nodeType":"VariableDeclaration","scope":1882,"src":"14731:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"14731:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1863,"initialValue":{"hexValue":"30","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14731:15:10"},"loopExpression":{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"14765:5:10","subExpression":{"id":1867,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"14767:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ExpressionStatement","src":"14765:5:10"},"nodeType":"ForStatement","src":"14726:101:10"},{"expression":{"id":1883,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"14839:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1813,"id":1884,"nodeType":"Return","src":"14832:10:10"}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"14230:49:10","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"aefb212f","id":1886,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveSubscriptionIds","nameLocation":"14291:24:10","nodeType":"FunctionDefinition","overrides":{"id":1809,"nodeType":"OverrideSpecifier","overrides":[],"src":"14380:8:10"},"parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"startIndex","nameLocation":"14329:10:10","nodeType":"VariableDeclaration","scope":1886,"src":"14321:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"14321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"maxCount","nameLocation":"14353:8:10","nodeType":"VariableDeclaration","scope":1886,"src":"14345:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"14345:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14315:50:10"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"ids","nameLocation":"14415:3:10","nodeType":"VariableDeclaration","scope":1886,"src":"14398:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"14398:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1811,"nodeType":"ArrayTypeName","src":"14398:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14397:22:10"},"scope":2368,"src":"14282:565:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2610],"body":{"id":1978,"nodeType":"Block","src":"14988:852:10","statements":[{"assignments":[1896],"declarations":[{"constant":false,"id":1896,"mutability":"mutable","name":"currentSubNonce","nameLocation":"15060:15:10","nodeType":"VariableDeclaration","scope":1978,"src":"15053:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1895,"name":"uint64","nodeType":"ElementaryTypeName","src":"15053:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":1898,"initialValue":{"id":1897,"name":"s_currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"15078:17:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"15053:42:10"},{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1899,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"15101:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1905,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15151:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15155:6:10","memberName":"sender","nodeType":"MemberAccess","src":"15151:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1908,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15173:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15179:6:10","memberName":"number","nodeType":"MemberAccess","src":"15173:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15188:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15173:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1907,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"15163:9:10","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15163:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1915,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15200:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionAPI_$2368","typeString":"contract SubscriptionAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionAPI_$2368","typeString":"contract SubscriptionAPI"}],"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15192:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"15192:7:10","typeDescriptions":{}}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15192:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1917,"name":"currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"15207:15:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":1903,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15134:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15138:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"15134:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15134:89:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1902,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15124:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:100:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15109:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"15109:7:10","typeDescriptions":{}}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15109:121:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15101:129:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1922,"nodeType":"ExpressionStatement","src":"15101:129:10"},{"expression":{"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1923,"name":"s_currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"15285:17:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"15305:15:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15323:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15305:19:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"15285:39:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1928,"nodeType":"ExpressionStatement","src":"15285:39:10"},{"assignments":[1933],"declarations":[{"constant":false,"id":1933,"mutability":"mutable","name":"consumers","nameLocation":"15384:9:10","nodeType":"VariableDeclaration","scope":1978,"src":"15367:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"15367:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1932,"nodeType":"ArrayTypeName","src":"15367:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1939,"initialValue":{"arguments":[{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15410:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15396:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"15400:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1935,"nodeType":"ArrayTypeName","src":"15400:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15396:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15367:45:10"},{"expression":{"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1940,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"15418:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1942,"indexExpression":{"id":1941,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"15434:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15418:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15466:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15497:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1943,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15443:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$1129_storage_ptr_$","typeString":"type(struct SubscriptionAPI.Subscription storage pointer)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15457:7:10","15469:13:10","15487:8:10"],"names":["balance","nativeBalance","reqCount"],"nodeType":"FunctionCall","src":"15443:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_memory_ptr","typeString":"struct SubscriptionAPI.Subscription memory"}},"src":"15418:82:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1949,"nodeType":"ExpressionStatement","src":"15418:82:10"},{"expression":{"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1950,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"15506:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1952,"indexExpression":{"id":1951,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"15528:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15506:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15571:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15575:6:10","memberName":"sender","nodeType":"MemberAccess","src":"15571:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15613:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15605:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"15605:7:10","typeDescriptions":{}}},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15605:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1960,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"15634:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1953,"name":"SubscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"15537:18:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SubscriptionConfig_$1137_storage_ptr_$","typeString":"type(struct SubscriptionAPI.SubscriptionConfig storage pointer)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15564:5:10","15589:14:10","15623:9:10"],"names":["owner","requestedOwner","consumers"],"nodeType":"FunctionCall","src":"15537:113:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_memory_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig memory"}},"src":"15506:144:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1963,"nodeType":"ExpressionStatement","src":"15506:144:10"},{"expression":{"arguments":[{"id":1967,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"15761:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1964,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"15748:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15757:3:10","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":924,"src":"15748:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$903_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$903_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15748:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1969,"nodeType":"ExpressionStatement","src":"15748:19:10"},{"eventCall":{"arguments":[{"id":1971,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"15799:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1972,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15806:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15810:6:10","memberName":"sender","nodeType":"MemberAccess","src":"15806:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1970,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"15779:19:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15779:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1975,"nodeType":"EmitStatement","src":"15774:43:10"},{"expression":{"id":1976,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"15830:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1894,"id":1977,"nodeType":"Return","src":"15823:12:10"}]},"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"14851:49:10","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"a21a23e4","id":1979,"implemented":true,"kind":"function","modifiers":[{"id":1891,"kind":"modifierInvocation","modifierName":{"id":1890,"name":"nonReentrant","nameLocations":["14951:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"14951:12:10"},"nodeType":"ModifierInvocation","src":"14951:12:10"}],"name":"createSubscription","nameLocation":"14912:18:10","nodeType":"FunctionDefinition","overrides":{"id":1889,"nodeType":"OverrideSpecifier","overrides":[],"src":"14942:8:10"},"parameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"14930:2:10"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"subId","nameLocation":"14981:5:10","nodeType":"VariableDeclaration","scope":1979,"src":"14973:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"14973:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14972:15:10"},"scope":2368,"src":"14903:937:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2604],"body":{"id":2019,"nodeType":"Block","src":"16034:358:10","statements":[{"assignments":[1995],"declarations":[{"constant":false,"id":1995,"mutability":"mutable","name":"subscriptionConfig","nameLocation":"16147:18:10","nodeType":"VariableDeclaration","scope":2019,"src":"16120:45:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig"},"typeName":{"id":1994,"nodeType":"UserDefinedTypeName","pathNode":{"id":1993,"name":"SubscriptionConfig","nameLocations":["16120:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":1137,"src":"16120:18:10"},"referencedDeclaration":1137,"src":"16120:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig"}},"visibility":"internal"}],"id":1999,"initialValue":{"baseExpression":{"id":1996,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"16168:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1998,"indexExpression":{"id":1997,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"16190:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16168:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16120:76:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2000,"name":"subscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"16206:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig storage pointer"}},"id":2001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16225:14:10","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"16206:33:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2002,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"16243:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16206:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2018,"nodeType":"IfStatement","src":"16202:186:10","trueBody":{"id":2017,"nodeType":"Block","src":"16253:135:10","statements":[{"expression":{"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2004,"name":"subscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"16261:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig storage pointer"}},"id":2006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16280:14:10","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"16261:33:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2007,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"16297:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16261:44:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2009,"nodeType":"ExpressionStatement","src":"16261:44:10"},{"eventCall":{"arguments":[{"id":2011,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"16353:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2012,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16360:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16364:6:10","memberName":"sender","nodeType":"MemberAccess","src":"16360:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2014,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"16372:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2010,"name":"SubscriptionOwnerTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"16318:34:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16318:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2016,"nodeType":"EmitStatement","src":"16313:68:10"}]}}]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"15844:49:10","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"dac83d29","id":2020,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1988,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"16014:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1989,"kind":"modifierInvocation","modifierName":{"id":1987,"name":"onlySubOwner","nameLocations":["16001:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2333,"src":"16001:12:10"},"nodeType":"ModifierInvocation","src":"16001:19:10"},{"id":1991,"kind":"modifierInvocation","modifierName":{"id":1990,"name":"nonReentrant","nameLocations":["16021:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"16021:12:10"},"nodeType":"ModifierInvocation","src":"16021:12:10"}],"name":"requestSubscriptionOwnerTransfer","nameLocation":"15905:32:10","nodeType":"FunctionDefinition","overrides":{"id":1986,"nodeType":"OverrideSpecifier","overrides":[],"src":"15992:8:10"},"parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"subId","nameLocation":"15951:5:10","nodeType":"VariableDeclaration","scope":2020,"src":"15943:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"15943:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"newOwner","nameLocation":"15970:8:10","nodeType":"VariableDeclaration","scope":2020,"src":"15962:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"15962:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15937:45:10"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[],"src":"16034:0:10"},"scope":2368,"src":"15896:496:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2596],"body":{"id":2088,"nodeType":"Block","src":"16535:478:10","statements":[{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"oldOwner","nameLocation":"16549:8:10","nodeType":"VariableDeclaration","scope":2088,"src":"16541:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"16541:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2035,"initialValue":{"expression":{"baseExpression":{"id":2031,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"16560:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2033,"indexExpression":{"id":2032,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"16582:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16560:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16589:5:10","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"16560:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16541:53:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"16604:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16624:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16616:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"16616:7:10","typeDescriptions":{}}},"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16616:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16604:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"16600:71:10","trueBody":{"id":2045,"nodeType":"Block","src":"16628:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2042,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"16643:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16643:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"RevertStatement","src":"16636:28:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2047,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"16680:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2049,"indexExpression":{"id":2048,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"16702:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16680:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16709:14:10","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"16680:43:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2051,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16727:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16731:6:10","memberName":"sender","nodeType":"MemberAccess","src":"16727:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16680:57:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2062,"nodeType":"IfStatement","src":"16676:150:10","trueBody":{"id":2061,"nodeType":"Block","src":"16739:87:10","statements":[{"errorCall":{"arguments":[{"expression":{"baseExpression":{"id":2055,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"16775:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2057,"indexExpression":{"id":2056,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"16797:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16775:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16804:14:10","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"16775:43:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2054,"name":"MustBeRequestedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"16754:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16754:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2060,"nodeType":"RevertStatement","src":"16747:72:10"}]}},{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2063,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"16831:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2065,"indexExpression":{"id":2064,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"16853:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16831:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16860:5:10","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"16831:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16868:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16872:6:10","memberName":"sender","nodeType":"MemberAccess","src":"16868:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16831:47:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2070,"nodeType":"ExpressionStatement","src":"16831:47:10"},{"expression":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2071,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"16884:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2073,"indexExpression":{"id":2072,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"16906:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16884:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16913:14:10","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"16884:43:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16938:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16930:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"16930:7:10","typeDescriptions":{}}},"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16930:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16884:56:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2080,"nodeType":"ExpressionStatement","src":"16884:56:10"},{"eventCall":{"arguments":[{"id":2082,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"16980:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2083,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"16987:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2084,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16997:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17001:6:10","memberName":"sender","nodeType":"MemberAccess","src":"16997:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2081,"name":"SubscriptionOwnerTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"16951:28:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16951:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2087,"nodeType":"EmitStatement","src":"16946:62:10"}]},"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"16396:49:10","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"b2a7cac5","id":2089,"implemented":true,"kind":"function","modifiers":[{"id":2027,"kind":"modifierInvocation","modifierName":{"id":2026,"name":"nonReentrant","nameLocations":["16522:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"16522:12:10"},"nodeType":"ModifierInvocation","src":"16522:12:10"}],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"16457:31:10","nodeType":"FunctionDefinition","overrides":{"id":2025,"nodeType":"OverrideSpecifier","overrides":[],"src":"16513:8:10"},"parameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"subId","nameLocation":"16497:5:10","nodeType":"VariableDeclaration","scope":2089,"src":"16489:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"16489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16488:15:10"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"16535:0:10"},"scope":2368,"src":"16448:565:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2574],"body":{"id":2153,"nodeType":"Block","src":"17174:807:10","statements":[{"assignments":[2105],"declarations":[{"constant":false,"id":2105,"mutability":"mutable","name":"consumerConfig","nameLocation":"17203:14:10","nodeType":"VariableDeclaration","scope":2153,"src":"17180:37:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig"},"typeName":{"id":2104,"nodeType":"UserDefinedTypeName","pathNode":{"id":2103,"name":"ConsumerConfig","nameLocations":["17180:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1144,"src":"17180:14:10"},"referencedDeclaration":1144,"src":"17180:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig"}},"visibility":"internal"}],"id":2111,"initialValue":{"baseExpression":{"baseExpression":{"id":2106,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"17220:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":2108,"indexExpression":{"id":2107,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"17232:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17220:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":2110,"indexExpression":{"id":2109,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"17242:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17220:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17180:68:10"},{"condition":{"expression":{"id":2112,"name":"consumerConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"17258:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig storage pointer"}},"id":2113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17273:6:10","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1139,"src":"17258:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2116,"nodeType":"IfStatement","src":"17254:165:10","trueBody":{"id":2115,"nodeType":"Block","src":"17281:138:10","statements":[{"functionReturnParameters":2102,"id":2114,"nodeType":"Return","src":"17406:7:10"}]}},{"assignments":[2121],"declarations":[{"constant":false,"id":2121,"mutability":"mutable","name":"consumers","nameLocation":"17495:9:10","nodeType":"VariableDeclaration","scope":2153,"src":"17477:27:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2119,"name":"address","nodeType":"ElementaryTypeName","src":"17477:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2120,"nodeType":"ArrayTypeName","src":"17477:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2126,"initialValue":{"expression":{"baseExpression":{"id":2122,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"17507:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2124,"indexExpression":{"id":2123,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"17529:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17507:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17536:9:10","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1136,"src":"17507:38:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17477:68:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2127,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"17555:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17565:6:10","memberName":"length","nodeType":"MemberAccess","src":"17555:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2129,"name":"MAX_CONSUMERS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"17575:13:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"17555:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2135,"nodeType":"IfStatement","src":"17551:79:10","trueBody":{"id":2134,"nodeType":"Block","src":"17590:40:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2131,"name":"TooManyConsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"17605:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17605:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2133,"nodeType":"RevertStatement","src":"17598:25:10"}]}},{"expression":{"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2136,"name":"consumerConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"17864:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig storage pointer"}},"id":2138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17879:6:10","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1139,"src":"17864:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17888:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"17864:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2141,"nodeType":"ExpressionStatement","src":"17864:28:10"},{"expression":{"arguments":[{"id":2145,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"17913:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2142,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"17898:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17908:4:10","memberName":"push","nodeType":"MemberAccess","src":"17898:14:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17898:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2147,"nodeType":"ExpressionStatement","src":"17898:24:10"},{"eventCall":{"arguments":[{"id":2149,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"17960:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2150,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"17967:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2148,"name":"SubscriptionConsumerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"17934:25:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17934:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2152,"nodeType":"EmitStatement","src":"17929:47:10"}]},"documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"17017:49:10","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"bec4c08c","id":2154,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2098,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"17154:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2099,"kind":"modifierInvocation","modifierName":{"id":2097,"name":"onlySubOwner","nameLocations":["17141:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2333,"src":"17141:12:10"},"nodeType":"ModifierInvocation","src":"17141:19:10"},{"id":2101,"kind":"modifierInvocation","modifierName":{"id":2100,"name":"nonReentrant","nameLocations":["17161:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"17161:12:10"},"nodeType":"ModifierInvocation","src":"17161:12:10"}],"name":"addConsumer","nameLocation":"17078:11:10","nodeType":"FunctionDefinition","overrides":{"id":2096,"nodeType":"OverrideSpecifier","overrides":[],"src":"17132:8:10"},"parameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"subId","nameLocation":"17098:5:10","nodeType":"VariableDeclaration","scope":2154,"src":"17090:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"17090:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"consumer","nameLocation":"17113:8:10","nodeType":"VariableDeclaration","scope":2154,"src":"17105:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"17105:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17089:33:10"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[],"src":"17174:0:10"},"scope":2368,"src":"17069:912:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2251,"nodeType":"Block","src":"18085:697:10","statements":[{"assignments":[2167],"declarations":[{"constant":false,"id":2167,"mutability":"mutable","name":"consumers","nameLocation":"18109:9:10","nodeType":"VariableDeclaration","scope":2251,"src":"18091:27:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"18091:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2166,"nodeType":"ArrayTypeName","src":"18091:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2172,"initialValue":{"expression":{"baseExpression":{"id":2168,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"18121:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2170,"indexExpression":{"id":2169,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"18143:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18121:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18150:9:10","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1136,"src":"18121:38:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18091:68:10"},{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2173,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"18165:7:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2174,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"18175:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":2176,"indexExpression":{"id":2175,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"18191:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18175:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":2177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18198:7:10","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"18175:30:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18165:40:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2179,"nodeType":"ExpressionStatement","src":"18165:40:10"},{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2180,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"18211:13:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2181,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"18227:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":2183,"indexExpression":{"id":2182,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"18243:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18227:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":2184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18250:13:10","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1126,"src":"18227:36:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18211:52:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2186,"nodeType":"ExpressionStatement","src":"18211:52:10"},{"assignments":[2188],"declarations":[{"constant":false,"id":2188,"mutability":"mutable","name":"consumersLength","nameLocation":"18353:15:10","nodeType":"VariableDeclaration","scope":2251,"src":"18345:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"18345:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2191,"initialValue":{"expression":{"id":2189,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"18371:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18381:6:10","memberName":"length","nodeType":"MemberAccess","src":"18371:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18345:42:10"},{"body":{"id":2211,"nodeType":"Block","src":"18439:54:10","statements":[{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18447:39:10","subExpression":{"baseExpression":{"baseExpression":{"id":2202,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"18454:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":2206,"indexExpression":{"baseExpression":{"id":2203,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"18466:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2205,"indexExpression":{"id":2204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"18476:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18466:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18454:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":2208,"indexExpression":{"id":2207,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"18480:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18454:32:10","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2210,"nodeType":"ExpressionStatement","src":"18447:39:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"18413:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2197,"name":"consumersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"18417:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18413:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2212,"initializationExpression":{"assignments":[2193],"declarations":[{"constant":false,"id":2193,"mutability":"mutable","name":"i","nameLocation":"18406:1:10","nodeType":"VariableDeclaration","scope":2212,"src":"18398:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"18398:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2195,"initialValue":{"hexValue":"30","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18410:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18398:13:10"},"loopExpression":{"expression":{"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18434:3:10","subExpression":{"id":2199,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"18436:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2201,"nodeType":"ExpressionStatement","src":"18434:3:10"},"nodeType":"ForStatement","src":"18393:100:10"},{"expression":{"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18498:35:10","subExpression":{"baseExpression":{"id":2213,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"18505:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2215,"indexExpression":{"id":2214,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"18527:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18505:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2217,"nodeType":"ExpressionStatement","src":"18498:35:10"},{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18539:29:10","subExpression":{"baseExpression":{"id":2218,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"18546:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":2220,"indexExpression":{"id":2219,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"18562:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18546:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"ExpressionStatement","src":"18539:29:10"},{"expression":{"arguments":[{"id":2226,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"18590:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2223,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"18574:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$903_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":2225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18583:6:10","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":945,"src":"18574:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$903_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$903_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18574:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2228,"nodeType":"ExpressionStatement","src":"18574:22:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2229,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"18606:7:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18617:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18606:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"nodeType":"IfStatement","src":"18602:58:10","trueBody":{"id":2236,"nodeType":"Block","src":"18620:40:10","statements":[{"expression":{"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2232,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"18628:14:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2233,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"18646:7:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18628:25:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2235,"nodeType":"ExpressionStatement","src":"18628:25:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2238,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"18669:13:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18686:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18669:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2246,"nodeType":"IfStatement","src":"18665:76:10","trueBody":{"id":2245,"nodeType":"Block","src":"18689:52:10","statements":[{"expression":{"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2241,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"18697:20:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2242,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"18721:13:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18697:37:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2244,"nodeType":"ExpressionStatement","src":"18697:37:10"}]}},{"expression":{"components":[{"id":2247,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"18754:7:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2248,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"18763:13:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"id":2249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18753:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$","typeString":"tuple(uint96,uint96)"}},"functionReturnParameters":2162,"id":2250,"nodeType":"Return","src":"18746:31:10"}]},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteSubscription","nameLocation":"17994:19:10","nodeType":"FunctionDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"subId","nameLocation":"18022:5:10","nodeType":"VariableDeclaration","scope":2252,"src":"18014:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2155,"name":"uint256","nodeType":"ElementaryTypeName","src":"18014:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18013:15:10"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"balance","nameLocation":"18054:7:10","nodeType":"VariableDeclaration","scope":2252,"src":"18047:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2158,"name":"uint96","nodeType":"ElementaryTypeName","src":"18047:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"nativeBalance","nameLocation":"18070:13:10","nodeType":"VariableDeclaration","scope":2252,"src":"18063:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2160,"name":"uint96","nodeType":"ElementaryTypeName","src":"18063:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"18046:38:10"},"scope":2368,"src":"17985:797:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2322,"nodeType":"Block","src":"18857:554:10","statements":[{"assignments":[2260,2262],"declarations":[{"constant":false,"id":2260,"mutability":"mutable","name":"balance","nameLocation":"18871:7:10","nodeType":"VariableDeclaration","scope":2322,"src":"18864:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2259,"name":"uint96","nodeType":"ElementaryTypeName","src":"18864:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"nativeBalance","nameLocation":"18887:13:10","nodeType":"VariableDeclaration","scope":2322,"src":"18880:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2261,"name":"uint96","nodeType":"ElementaryTypeName","src":"18880:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2266,"initialValue":{"arguments":[{"id":2264,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"18924:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2263,"name":"_deleteSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"18904:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint96_$_t_uint96_$","typeString":"function (uint256) returns (uint96,uint96)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18904:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$","typeString":"tuple(uint96,uint96)"}},"nodeType":"VariableDeclarationStatement","src":"18863:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2269,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"19022:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}],"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19014:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"19014:7:10","typeDescriptions":{}}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19014:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19039:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19031:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"19031:7:10","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19031:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19014:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2276,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"19045:7:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19056:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19045:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19014:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2295,"nodeType":"IfStatement","src":"19010:152:10","trueBody":{"id":2294,"nodeType":"Block","src":"19059:103:10","statements":[{"condition":{"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19071:36:10","subExpression":{"arguments":[{"id":2282,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"19086:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2285,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"19098:7:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19090:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"19090:7:10","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19090:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2280,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"19072:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$420","typeString":"contract LinkTokenInterface"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19077:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":397,"src":"19072:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19072:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2293,"nodeType":"IfStatement","src":"19067:89:10","trueBody":{"id":2292,"nodeType":"Block","src":"19109:47:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2289,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"19126:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19126:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2291,"nodeType":"RevertStatement","src":"19119:28:10"}]}}]}},{"assignments":[2297,null],"declarations":[{"constant":false,"id":2297,"mutability":"mutable","name":"success","nameLocation":"19224:7:10","nodeType":"VariableDeclaration","scope":2322,"src":"19219:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2296,"name":"bool","nodeType":"ElementaryTypeName","src":"19219:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2307,"initialValue":{"arguments":[{"hexValue":"","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19276:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2298,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"19237:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19240:4:10","memberName":"call","nodeType":"MemberAccess","src":"19237:7:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"arguments":[{"id":2302,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"19260:13:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19252:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"19252:7:10","typeDescriptions":{}}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19252:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"19237:38:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19237:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19218:61:10"},{"condition":{"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19289:8:10","subExpression":{"id":2308,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"19290:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2314,"nodeType":"IfStatement","src":"19285:56:10","trueBody":{"id":2313,"nodeType":"Block","src":"19299:42:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2310,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"19314:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19314:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2312,"nodeType":"RevertStatement","src":"19307:27:10"}]}},{"eventCall":{"arguments":[{"id":2316,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"19372:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2317,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"19379:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2318,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"19383:7:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2319,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"19392:13:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2315,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"19351:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19351:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2321,"nodeType":"EmitStatement","src":"19346:60:10"}]},"id":2323,"implemented":true,"kind":"function","modifiers":[],"name":"_cancelSubscriptionHelper","nameLocation":"18795:25:10","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"subId","nameLocation":"18829:5:10","nodeType":"VariableDeclaration","scope":2323,"src":"18821:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"18821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"to","nameLocation":"18844:2:10","nodeType":"VariableDeclaration","scope":2323,"src":"18836:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"18836:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18820:27:10"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[],"src":"18857:0:10"},"scope":2368,"src":"18786:625:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2332,"nodeType":"Block","src":"19452:38:10","statements":[{"expression":{"arguments":[{"id":2328,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"19472:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2327,"name":"_onlySubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"19458:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19458:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2330,"nodeType":"ExpressionStatement","src":"19458:20:10"},{"id":2331,"nodeType":"PlaceholderStatement","src":"19484:1:10"}]},"id":2333,"name":"onlySubOwner","nameLocation":"19424:12:10","nodeType":"ModifierDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"subId","nameLocation":"19445:5:10","nodeType":"VariableDeclaration","scope":2333,"src":"19437:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"19437:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19436:15:10"},"src":"19415:75:10","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"19546:219:10","statements":[{"assignments":[2339],"declarations":[{"constant":false,"id":2339,"mutability":"mutable","name":"subOwner","nameLocation":"19560:8:10","nodeType":"VariableDeclaration","scope":2366,"src":"19552:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"19552:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2344,"initialValue":{"expression":{"baseExpression":{"id":2340,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"19571:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2342,"indexExpression":{"id":2341,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"19593:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19571:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19600:5:10","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"19571:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19552:53:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"19615:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19635:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19627:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"19627:7:10","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19627:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19615:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2355,"nodeType":"IfStatement","src":"19611:71:10","trueBody":{"id":2354,"nodeType":"Block","src":"19639:43:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2351,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"19654:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19654:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2353,"nodeType":"RevertStatement","src":"19647:28:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19691:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19695:6:10","memberName":"sender","nodeType":"MemberAccess","src":"19691:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2358,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"19705:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19691:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2365,"nodeType":"IfStatement","src":"19687:74:10","trueBody":{"id":2364,"nodeType":"Block","src":"19715:46:10","statements":[{"errorCall":{"arguments":[{"id":2361,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"19745:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2360,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"19730:14:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19730:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2363,"nodeType":"RevertStatement","src":"19723:31:10"}]}}]},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"_onlySubOwner","nameLocation":"19503:13:10","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"subId","nameLocation":"19525:5:10","nodeType":"VariableDeclaration","scope":2367,"src":"19517:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"19517:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19516:15:10"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"19546:0:10"},"scope":2368,"src":"19494:271:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2369,"src":"573:19194:10","usedErrors":[1070,1072,1078,1080,1082,1084,1088,1090,1094,1100,1114,1116,1118,1120,1122,1258]}],"src":"32:19736:10"},"id":10},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","exportedSymbols":{"ConfirmedOwner":[88],"IVRFCoordinatorV2Plus":[2549],"IVRFMigratableConsumerV2Plus":[2563],"VRFConsumerBaseV2Plus":[2531]},"id":2532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2370,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","file":"./interfaces/IVRFCoordinatorV2Plus.sol","id":2372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":2550,"src":"57:77:11","symbolAliases":[{"foreign":{"id":2371,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"65:21:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","file":"./interfaces/IVRFMigratableConsumerV2Plus.sol","id":2374,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":2564,"src":"135:91:11","symbolAliases":[{"foreign":{"id":2373,"name":"IVRFMigratableConsumerV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"143:28:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../../shared/access/ConfirmedOwner.sol","id":2376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":89,"src":"227:70:11","symbolAliases":[{"foreign":{"id":2375,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"235:14:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2378,"name":"IVRFMigratableConsumerV2Plus","nameLocations":["5712:28:11"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"5712:28:11"},"id":2379,"nodeType":"InheritanceSpecifier","src":"5712:28:11"},{"baseName":{"id":2380,"name":"ConfirmedOwner","nameLocations":["5742:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":88,"src":"5742:14:11"},"id":2381,"nodeType":"InheritanceSpecifier","src":"5742:14:11"}],"canonicalName":"VRFConsumerBaseV2Plus","contractDependencies":[],"contractKind":"contract","documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"299:5369:11","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create a subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords, extraArgs),\n @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":2531,"linearizedBaseContracts":[2531,88,251,325,2563],"name":"VRFConsumerBaseV2Plus","nameLocation":"5687:21:11","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":2387,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5767:25:11","nodeType":"ErrorDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"have","nameLocation":"5801:4:11","nodeType":"VariableDeclaration","scope":2387,"src":"5793:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"5793:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"want","nameLocation":"5815:4:11","nodeType":"VariableDeclaration","scope":2387,"src":"5807:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"5807:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5792:28:11"},"src":"5761:60:11"},{"errorSelector":"061db9c1","id":2395,"name":"OnlyOwnerOrCoordinator","nameLocation":"5830:22:11","nodeType":"ErrorDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"have","nameLocation":"5861:4:11","nodeType":"VariableDeclaration","scope":2395,"src":"5853:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2388,"name":"address","nodeType":"ElementaryTypeName","src":"5853:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2391,"mutability":"mutable","name":"owner","nameLocation":"5875:5:11","nodeType":"VariableDeclaration","scope":2395,"src":"5867:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2390,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"coordinator","nameLocation":"5890:11:11","nodeType":"VariableDeclaration","scope":2395,"src":"5882:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2392,"name":"address","nodeType":"ElementaryTypeName","src":"5882:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5852:50:11"},"src":"5824:79:11"},{"errorSelector":"d92e233d","id":2397,"name":"ZeroAddress","nameLocation":"5912:11:11","nodeType":"ErrorDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[],"src":"5923:2:11"},"src":"5906:20:11"},{"constant":false,"functionSelector":"9eccacf6","id":2400,"mutability":"mutable","name":"s_vrfCoordinator","nameLocation":"6106:16:11","nodeType":"VariableDeclaration","scope":2531,"src":"6077:45:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"},"typeName":{"id":2399,"nodeType":"UserDefinedTypeName","pathNode":{"id":2398,"name":"IVRFCoordinatorV2Plus","nameLocations":["6077:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":2549,"src":"6077:21:11"},"referencedDeclaration":2549,"src":"6077:21:11","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"visibility":"public"},{"body":{"id":2427,"nodeType":"Block","src":"6266:143:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"6276:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6303:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6295:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:11","typeDescriptions":{}}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6276:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"6272:70:11","trueBody":{"id":2419,"nodeType":"Block","src":"6307:35:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2416,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"6322:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"RevertStatement","src":"6315:20:11"}]}},{"expression":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2421,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6347:16:11","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2423,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"6388:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2422,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6366:21:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2549_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6366:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"6347:57:11","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2426,"nodeType":"ExpressionStatement","src":"6347:57:11"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"6127:72:11","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":2428,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6254:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6258:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6254:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2408,"kind":"baseConstructorSpecifier","modifierName":{"id":2405,"name":"ConfirmedOwner","nameLocations":["6239:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":88,"src":"6239:14:11"},"nodeType":"ModifierInvocation","src":"6239:26:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"6222:15:11","nodeType":"VariableDeclaration","scope":2428,"src":"6214:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"6214:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6213:25:11"},"returnParameters":{"id":2409,"nodeType":"ParameterList","parameters":[],"src":"6266:0:11"},"scope":2531,"src":"6202:207:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"6413:690:11","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":2437,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"7207:18:11","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"requestId","nameLocation":"7234:9:11","nodeType":"VariableDeclaration","scope":2437,"src":"7226:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"7226:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"randomWords","nameLocation":"7264:11:11","nodeType":"VariableDeclaration","scope":2437,"src":"7245:30:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"7245:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ArrayTypeName","src":"7245:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7225:51:11"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[],"src":"7293:0:11"},"scope":2531,"src":"7198:96:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2468,"nodeType":"Block","src":"7580:189:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2445,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7590:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7594:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7590:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2449,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"7612:16:11","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7604:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2447,"name":"address","nodeType":"ElementaryTypeName","src":"7604:7:11","typeDescriptions":{}}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7604:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7590:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2462,"nodeType":"IfStatement","src":"7586:131:11","trueBody":{"id":2461,"nodeType":"Block","src":"7631:86:11","statements":[{"errorCall":{"arguments":[{"expression":{"id":2453,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7672:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7676:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7672:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2457,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"7692:16:11","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7684:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2455,"name":"address","nodeType":"ElementaryTypeName","src":"7684:7:11","typeDescriptions":{}}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7684:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2452,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"7646:25:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7646:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2460,"nodeType":"RevertStatement","src":"7639:71:11"}]}},{"expression":{"arguments":[{"id":2464,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"7741:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2465,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"7752:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":2463,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"7722:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$","typeString":"function (uint256,uint256[] calldata)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7722:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"ExpressionStatement","src":"7722:42:11"}]},"functionSelector":"1fe543e3","id":2469,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"7498:21:11","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"requestId","nameLocation":"7528:9:11","nodeType":"VariableDeclaration","scope":2469,"src":"7520:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"7520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"randomWords","nameLocation":"7558:11:11","nodeType":"VariableDeclaration","scope":2469,"src":"7539:30:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"7539:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2441,"nodeType":"ArrayTypeName","src":"7539:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7519:51:11"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"7580:0:11"},"scope":2531,"src":"7489:280:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2562],"body":{"id":2499,"nodeType":"Block","src":"7921:186:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2478,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"7931:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7958:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7950:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"7950:7:11","typeDescriptions":{}}},"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7950:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7931:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2488,"nodeType":"IfStatement","src":"7927:70:11","trueBody":{"id":2487,"nodeType":"Block","src":"7962:35:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2484,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"7977:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7977:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2486,"nodeType":"RevertStatement","src":"7970:20:11"}]}},{"expression":{"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2489,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8002:16:11","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2491,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"8043:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2490,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"8021:21:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2549_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"8002:57:11","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2494,"nodeType":"ExpressionStatement","src":"8002:57:11"},{"eventCall":{"arguments":[{"id":2496,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"8086:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2495,"name":"CoordinatorSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"8071:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8071:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2498,"nodeType":"EmitStatement","src":"8066:36:11"}]},"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"7773:55:11","text":" @inheritdoc IVRFMigratableConsumerV2Plus"},"functionSelector":"8ea98117","id":2500,"implemented":true,"kind":"function","modifiers":[{"id":2476,"kind":"modifierInvocation","modifierName":{"id":2475,"name":"onlyOwnerOrCoordinator","nameLocations":["7898:22:11"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"7898:22:11"},"nodeType":"ModifierInvocation","src":"7898:22:11"}],"name":"setCoordinator","nameLocation":"7840:14:11","nodeType":"FunctionDefinition","overrides":{"id":2474,"nodeType":"OverrideSpecifier","overrides":[],"src":"7889:8:11"},"parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"7863:15:11","nodeType":"VariableDeclaration","scope":2500,"src":"7855:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2471,"name":"address","nodeType":"ElementaryTypeName","src":"7855:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7854:25:11"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[],"src":"7921:0:11"},"scope":2531,"src":"7831:276:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2529,"nodeType":"Block","src":"8145:179:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2502,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8155:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8159:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8155:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8169:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8169:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8155:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2507,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8180:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8184:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8180:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2511,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8202:16:11","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:11","typeDescriptions":{}}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8180:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8155:64:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2527,"nodeType":"IfStatement","src":"8151:162:11","trueBody":{"id":2526,"nodeType":"Block","src":"8221:92:11","statements":[{"errorCall":{"arguments":[{"expression":{"id":2516,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8259:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8263:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8259:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2518,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8271:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8271:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2522,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8288:16:11","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8280:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"8280:7:11","typeDescriptions":{}}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8280:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2515,"name":"OnlyOwnerOrCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"8236:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) pure"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2525,"nodeType":"RevertStatement","src":"8229:77:11"}]}},{"id":2528,"nodeType":"PlaceholderStatement","src":"8318:1:11"}]},"id":2530,"name":"onlyOwnerOrCoordinator","nameLocation":"8120:22:11","nodeType":"ModifierDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[],"src":"8142:2:11"},"src":"8111:213:11","virtual":false,"visibility":"internal"}],"scope":2532,"src":"5669:2657:11","usedErrors":[2387,2395,2397]}],"src":"32:8295:11"},"id":11},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2549],"IVRFSubscriptionV2Plus":[2652],"VRFV2PlusClient":[2694]},"id":2550,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2533,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"../libraries/VRFV2PlusClient.sol","id":2535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2550,"sourceUnit":2695,"src":"57:65:12","symbolAliases":[{"foreign":{"id":2534,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"65:15:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","file":"./IVRFSubscriptionV2Plus.sol","id":2537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2550,"sourceUnit":2653,"src":"123:68:12","symbolAliases":[{"foreign":{"id":2536,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"131:22:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2538,"name":"IVRFSubscriptionV2Plus","nameLocations":["398:22:12"],"nodeType":"IdentifierPath","referencedDeclaration":2652,"src":"398:22:12"},"id":2539,"nodeType":"InheritanceSpecifier","src":"398:22:12"}],"canonicalName":"IVRFCoordinatorV2Plus","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2549,"linearizedBaseContracts":[2549,2652],"name":"IVRFCoordinatorV2Plus","nameLocation":"373:21:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2540,"nodeType":"StructuredDocumentation","src":"425:1588:12","text":" @notice Request a set of random words.\n @param req - a struct containing following fields for randomness request:\n keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n requestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n extraArgs - abi-encoded extra args\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"9b1c385e","id":2548,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2025:18:12","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"req","nameLocation":"2088:3:12","nodeType":"VariableDeclaration","scope":2548,"src":"2044:47:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"},"typeName":{"id":2542,"nodeType":"UserDefinedTypeName","pathNode":{"id":2541,"name":"VRFV2PlusClient.RandomWordsRequest","nameLocations":["2044:15:12","2060:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"2044:34:12"},"referencedDeclaration":2678,"src":"2044:34:12","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_storage_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"}},"visibility":"internal"}],"src":"2043:49:12"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"requestId","nameLocation":"2119:9:12","nodeType":"VariableDeclaration","scope":2548,"src":"2111:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:19:12"},"scope":2549,"src":"2016:114:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2550,"src":"363:1769:12","usedErrors":[]}],"src":"32:2101:12"},"id":12},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","exportedSymbols":{"IVRFMigratableConsumerV2Plus":[2563]},"id":2564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2551,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFMigratableConsumerV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"57:211:13","text":"@notice The IVRFMigratableConsumerV2Plus interface defines the\n @notice method required to be implemented by all V2Plus consumers.\n @dev This interface is designed to be used in VRFConsumerBaseV2Plus."},"fullyImplemented":false,"id":2563,"linearizedBaseContracts":[2563],"name":"IVRFMigratableConsumerV2Plus","nameLocation":"278:28:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6","id":2556,"name":"CoordinatorSet","nameLocation":"317:14:13","nodeType":"EventDefinition","parameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"indexed":false,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"340:14:13","nodeType":"VariableDeclaration","scope":2556,"src":"332:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"331:24:13"},"src":"311:45:13"},{"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"360:131:13","text":"@notice Sets the VRF Coordinator address\n @notice This method should only be callable by the coordinator or contract owner"},"functionSelector":"8ea98117","id":2562,"implemented":false,"kind":"function","modifiers":[],"name":"setCoordinator","nameLocation":"503:14:13","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"526:14:13","nodeType":"VariableDeclaration","scope":2562,"src":"518:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2558,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"517:24:13"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[],"src":"550:0:13"},"scope":2563,"src":"494:57:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2564,"src":"268:285:13","usedErrors":[]}],"src":"32:522:13"},"id":13},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","exportedSymbols":{"IVRFSubscriptionV2Plus":[2652]},"id":2653,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2565,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFSubscriptionV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"57:141:14","text":"@notice The IVRFSubscriptionV2Plus interface defines the subscription\n @notice related methods implemented by the V2Plus coordinator."},"fullyImplemented":false,"id":2652,"linearizedBaseContracts":[2652],"name":"IVRFSubscriptionV2Plus","nameLocation":"208:22:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"235:170:14","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"bec4c08c","id":2574,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"417:11:14","nodeType":"FunctionDefinition","parameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"subId","nameLocation":"437:5:14","nodeType":"VariableDeclaration","scope":2574,"src":"429:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"429:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"consumer","nameLocation":"452:8:14","nodeType":"VariableDeclaration","scope":2574,"src":"444:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"428:33:14"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[],"src":"470:0:14"},"scope":2652,"src":"408:63:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2575,"nodeType":"StructuredDocumentation","src":"475:172:14","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"cb631797","id":2582,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"659:14:14","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"subId","nameLocation":"682:5:14","nodeType":"VariableDeclaration","scope":2582,"src":"674:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"consumer","nameLocation":"697:8:14","nodeType":"VariableDeclaration","scope":2582,"src":"689:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2578,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"673:33:14"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[],"src":"715:0:14"},"scope":2652,"src":"650:66:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"720:140:14","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"0ae09540","id":2590,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"872:18:14","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"subId","nameLocation":"899:5:14","nodeType":"VariableDeclaration","scope":2590,"src":"891:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"to","nameLocation":"914:2:14","nodeType":"VariableDeclaration","scope":2590,"src":"906:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:27:14"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[],"src":"926:0:14"},"scope":2652,"src":"863:64:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"931:211:14","text":" @notice Accept subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"b2a7cac5","id":2596,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"1154:31:14","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"subId","nameLocation":"1194:5:14","nodeType":"VariableDeclaration","scope":2596,"src":"1186:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:15:14"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"1209:0:14"},"scope":2652,"src":"1145:65:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2597,"nodeType":"StructuredDocumentation","src":"1214:164:14","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"dac83d29","id":2604,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"1390:32:14","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"subId","nameLocation":"1431:5:14","nodeType":"VariableDeclaration","scope":2604,"src":"1423:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"newOwner","nameLocation":"1446:8:14","nodeType":"VariableDeclaration","scope":2604,"src":"1438:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2600,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1422:33:14"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[],"src":"1464:0:14"},"scope":2652,"src":"1381:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"1469:613:14","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription with LINK, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));\n @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n @dev  to send Native with the call, for example:\n @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);"},"functionSelector":"a21a23e4","id":2610,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2094:18:14","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[],"src":"2112:2:14"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"subId","nameLocation":"2141:5:14","nodeType":"VariableDeclaration","scope":2610,"src":"2133:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:15:14"},"scope":2652,"src":"2085:63:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2611,"nodeType":"StructuredDocumentation","src":"2152:422:14","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return nativeBalance - native balance of the subscription in wei.\n @return reqCount - Requests count of subscription.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"dc311dd3","id":2627,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"2586:15:14","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"subId","nameLocation":"2615:5:14","nodeType":"VariableDeclaration","scope":2627,"src":"2607:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2601:23:14"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"balance","nameLocation":"2667:7:14","nodeType":"VariableDeclaration","scope":2627,"src":"2660:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2615,"name":"uint96","nodeType":"ElementaryTypeName","src":"2660:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"nativeBalance","nameLocation":"2683:13:14","nodeType":"VariableDeclaration","scope":2627,"src":"2676:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2617,"name":"uint96","nodeType":"ElementaryTypeName","src":"2676:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"reqCount","nameLocation":"2705:8:14","nodeType":"VariableDeclaration","scope":2627,"src":"2698:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2619,"name":"uint64","nodeType":"ElementaryTypeName","src":"2698:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"owner","nameLocation":"2723:5:14","nodeType":"VariableDeclaration","scope":2627,"src":"2715:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"consumers","nameLocation":"2747:9:14","nodeType":"VariableDeclaration","scope":2627,"src":"2730:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"2730:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2624,"nodeType":"ArrayTypeName","src":"2730:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2659:98:14"},"scope":2652,"src":"2577:181:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"41af6c87","id":2634,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"3063:20:14","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"subId","nameLocation":"3092:5:14","nodeType":"VariableDeclaration","scope":2634,"src":"3084:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:15:14"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"3122:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2631,"name":"bool","nodeType":"ElementaryTypeName","src":"3122:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3121:6:14"},"scope":2652,"src":"3054:74:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"3132:427:14","text":" @notice Paginate through all active VRF subscriptions.\n @param startIndex index of the subscription to start from\n @param maxCount maximum number of subscriptions to return, 0 to return all\n @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state"},"functionSelector":"aefb212f","id":2645,"implemented":false,"kind":"function","modifiers":[],"name":"getActiveSubscriptionIds","nameLocation":"3571:24:14","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"startIndex","nameLocation":"3604:10:14","nodeType":"VariableDeclaration","scope":2645,"src":"3596:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"maxCount","nameLocation":"3624:8:14","nodeType":"VariableDeclaration","scope":2645,"src":"3616:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"3616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:38:14"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2645,"src":"3657:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2642,"nodeType":"ArrayTypeName","src":"3657:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3656:18:14"},"scope":2652,"src":"3562:113:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"3679:175:14","text":" @notice Fund a subscription with native.\n @param subId - ID of the subscription\n @notice This method expects msg.value to be greater than or equal to 0."},"functionSelector":"95b55cfc","id":2651,"implemented":false,"kind":"function","modifiers":[],"name":"fundSubscriptionWithNative","nameLocation":"3866:26:14","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"subId","nameLocation":"3901:5:14","nodeType":"VariableDeclaration","scope":2651,"src":"3893:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:15:14"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[],"src":"3924:0:14"},"scope":2652,"src":"3857:68:14","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2653,"src":"198:3729:14","usedErrors":[]}],"src":"32:3896:14"},"id":14},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","exportedSymbols":{"VRFV2PlusClient":[2694]},"id":2695,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2654,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFV2PlusClient","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2694,"linearizedBaseContracts":[2694],"name":"VRFV2PlusClient","nameLocation":"90:15:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f7514ab4","id":2662,"mutability":"constant","name":"EXTRA_ARGS_V1_TAG","nameLocation":"188:17:15","nodeType":"VariableDeclaration","scope":2694,"src":"165:79:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2655,"name":"bytes4","nodeType":"ElementaryTypeName","src":"165:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"565246204578747261417267735631","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"225:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""},"value":"VRF ExtraArgsV1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""}],"id":2658,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"215:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"215:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"208:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2656,"name":"bytes4","nodeType":"ElementaryTypeName","src":"208:6:15","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"208:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"public"},{"canonicalName":"VRFV2PlusClient.ExtraArgsV1","id":2665,"members":[{"constant":false,"id":2664,"mutability":"mutable","name":"nativePayment","nameLocation":"284:13:15","nodeType":"VariableDeclaration","scope":2665,"src":"279:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2663,"name":"bool","nodeType":"ElementaryTypeName","src":"279:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExtraArgsV1","nameLocation":"257:11:15","nodeType":"StructDefinition","scope":2694,"src":"250:54:15","visibility":"public"},{"canonicalName":"VRFV2PlusClient.RandomWordsRequest","id":2678,"members":[{"constant":false,"id":2667,"mutability":"mutable","name":"keyHash","nameLocation":"354:7:15","nodeType":"VariableDeclaration","scope":2678,"src":"346:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"346:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"subId","nameLocation":"379:5:15","nodeType":"VariableDeclaration","scope":2678,"src":"371:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"requestConfirmations","nameLocation":"401:20:15","nodeType":"VariableDeclaration","scope":2678,"src":"394:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2670,"name":"uint16","nodeType":"ElementaryTypeName","src":"394:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"438:16:15","nodeType":"VariableDeclaration","scope":2678,"src":"431:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2672,"name":"uint32","nodeType":"ElementaryTypeName","src":"431:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"numWords","nameLocation":"471:8:15","nodeType":"VariableDeclaration","scope":2678,"src":"464:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2674,"name":"uint32","nodeType":"ElementaryTypeName","src":"464:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"extraArgs","nameLocation":"495:9:15","nodeType":"VariableDeclaration","scope":2678,"src":"489:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2676,"name":"bytes","nodeType":"ElementaryTypeName","src":"489:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"RandomWordsRequest","nameLocation":"317:18:15","nodeType":"StructDefinition","scope":2694,"src":"310:201:15","visibility":"public"},{"body":{"id":2692,"nodeType":"Block","src":"610:76:15","statements":[{"expression":{"arguments":[{"id":2688,"name":"EXTRA_ARGS_V1_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"650:17:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2689,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"669:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":2686,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"627:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"631:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"627:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2685,"id":2691,"nodeType":"Return","src":"620:59:15"}]},"id":2693,"implemented":true,"kind":"function","modifiers":[],"name":"_argsToBytes","nameLocation":"526:12:15","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"extraArgs","nameLocation":"558:9:15","nodeType":"VariableDeclaration","scope":2693,"src":"539:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"},"typeName":{"id":2680,"nodeType":"UserDefinedTypeName","pathNode":{"id":2679,"name":"ExtraArgsV1","nameLocations":["539:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2665,"src":"539:11:15"},"referencedDeclaration":2665,"src":"539:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_storage_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"}},"visibility":"internal"}],"src":"538:30:15"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"bts","nameLocation":"605:3:15","nodeType":"VariableDeclaration","scope":2693,"src":"592:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2683,"name":"bytes","nodeType":"ElementaryTypeName","src":"592:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"591:18:15"},"scope":2694,"src":"517:169:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2695,"src":"82:606:15","usedErrors":[]}],"src":"32:657:15"},"id":15},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2549],"IVRFSubscriptionV2Plus":[2652],"SubscriptionAPI":[2368],"VRFConsumerBaseV2Plus":[2531],"VRFCoordinatorV2_5Mock":[3522],"VRFV2PlusClient":[2694]},"id":3523,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2696,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"94:24:16"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","file":"../dev/interfaces/IVRFCoordinatorV2Plus.sol","id":2699,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3523,"sourceUnit":2550,"src":"166:106:16","symbolAliases":[{"foreign":{"id":2697,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"174:21:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2698,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"197:22:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"../dev/libraries/VRFV2PlusClient.sol","id":2701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3523,"sourceUnit":2695,"src":"273:69:16","symbolAliases":[{"foreign":{"id":2700,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"281:15:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol","file":"../dev/SubscriptionAPI.sol","id":2703,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3523,"sourceUnit":2369,"src":"343:59:16","symbolAliases":[{"foreign":{"id":2702,"name":"SubscriptionAPI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"351:15:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","file":"../dev/VRFConsumerBaseV2Plus.sol","id":2705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3523,"sourceUnit":2532,"src":"403:71:16","symbolAliases":[{"foreign":{"id":2704,"name":"VRFConsumerBaseV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"411:21:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2706,"name":"SubscriptionAPI","nameLocations":["511:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"511:15:16"},"id":2707,"nodeType":"InheritanceSpecifier","src":"511:15:16"},{"baseName":{"id":2708,"name":"IVRFCoordinatorV2Plus","nameLocations":["528:21:16"],"nodeType":"IdentifierPath","referencedDeclaration":2549,"src":"528:21:16"},"id":2709,"nodeType":"InheritanceSpecifier","src":"528:21:16"}],"canonicalName":"VRFCoordinatorV2_5Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3522,"linearizedBaseContracts":[3522,2549,2368,2652,309,88,251,325],"name":"VRFCoordinatorV2_5Mock","nameLocation":"485:22:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"1eebc117","id":2711,"mutability":"immutable","name":"i_base_fee","nameLocation":"578:10:16","nodeType":"VariableDeclaration","scope":3522,"src":"554:34:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2710,"name":"uint96","nodeType":"ElementaryTypeName","src":"554:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"dcab3dcf","id":2713,"mutability":"immutable","name":"i_gas_price","nameLocation":"616:11:16","nodeType":"VariableDeclaration","scope":3522,"src":"592:35:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2712,"name":"uint96","nodeType":"ElementaryTypeName","src":"592:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"13478329","id":2715,"mutability":"immutable","name":"i_wei_per_unit_link","nameLocation":"655:19:16","nodeType":"VariableDeclaration","scope":3522,"src":"631:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2714,"name":"int256","nodeType":"ElementaryTypeName","src":"631:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"public"},{"errorSelector":"41abc801","id":2717,"name":"InvalidRequest","nameLocation":"685:14:16","nodeType":"ErrorDefinition","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[],"src":"699:2:16"},"src":"679:23:16"},{"errorSelector":"3f3df5b6","id":2719,"name":"InvalidRandomWords","nameLocation":"711:18:16","nodeType":"ErrorDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[],"src":"729:2:16"},"src":"705:27:16"},{"errorSelector":"5247fdce","id":2721,"name":"InvalidExtraArgsTag","nameLocation":"741:19:16","nodeType":"ErrorDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[],"src":"760:2:16"},"src":"735:28:16"},{"errorSelector":"d6234725","id":2723,"name":"NotImplemented","nameLocation":"772:14:16","nodeType":"ErrorDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"786:2:16"},"src":"766:23:16"},{"anonymous":false,"eventSelector":"eb0e3652e0f44f417695e6e90f2f42c99b65cd7169074c5a654b16b9748c3a4e","id":2743,"name":"RandomWordsRequested","nameLocation":"799:20:16","nodeType":"EventDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"841:7:16","nodeType":"VariableDeclaration","scope":2743,"src":"825:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"825:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2727,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"862:9:16","nodeType":"VariableDeclaration","scope":2743,"src":"854:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"854:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2729,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"885:7:16","nodeType":"VariableDeclaration","scope":2743,"src":"877:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2731,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"914:5:16","nodeType":"VariableDeclaration","scope":2743,"src":"898:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2733,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"932:27:16","nodeType":"VariableDeclaration","scope":2743,"src":"925:34:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2732,"name":"uint16","nodeType":"ElementaryTypeName","src":"925:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2735,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"972:16:16","nodeType":"VariableDeclaration","scope":2743,"src":"965:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2734,"name":"uint32","nodeType":"ElementaryTypeName","src":"965:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2737,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"1001:8:16","nodeType":"VariableDeclaration","scope":2743,"src":"994:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2736,"name":"uint32","nodeType":"ElementaryTypeName","src":"994:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2739,"indexed":false,"mutability":"mutable","name":"extraArgs","nameLocation":"1021:9:16","nodeType":"VariableDeclaration","scope":2743,"src":"1015:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2738,"name":"bytes","nodeType":"ElementaryTypeName","src":"1015:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2741,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1052:6:16","nodeType":"VariableDeclaration","scope":2743,"src":"1036:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"819:243:16"},"src":"793:270:16"},{"anonymous":false,"eventSelector":"aeb4b4786571e184246d39587f659abf0e26f41f6a3358692250382c0cdb47b7","id":2759,"name":"RandomWordsFulfilled","nameLocation":"1072:20:16","nodeType":"EventDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1114:9:16","nodeType":"VariableDeclaration","scope":2759,"src":"1098:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1098:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2747,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"1137:10:16","nodeType":"VariableDeclaration","scope":2759,"src":"1129:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1129:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2749,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1169:5:16","nodeType":"VariableDeclaration","scope":2759,"src":"1153:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1153:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2751,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"1187:7:16","nodeType":"VariableDeclaration","scope":2759,"src":"1180:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2750,"name":"uint96","nodeType":"ElementaryTypeName","src":"1180:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2753,"indexed":false,"mutability":"mutable","name":"nativePayment","nameLocation":"1205:13:16","nodeType":"VariableDeclaration","scope":2759,"src":"1200:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2752,"name":"bool","nodeType":"ElementaryTypeName","src":"1200:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2755,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1229:7:16","nodeType":"VariableDeclaration","scope":2759,"src":"1224:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2754,"name":"bool","nodeType":"ElementaryTypeName","src":"1224:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2757,"indexed":false,"mutability":"mutable","name":"onlyPremium","nameLocation":"1247:11:16","nodeType":"VariableDeclaration","scope":2759,"src":"1242:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2756,"name":"bool","nodeType":"ElementaryTypeName","src":"1242:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1092:170:16"},"src":"1066:197:16"},{"anonymous":false,"eventSelector":"4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be","id":2761,"name":"ConfigSet","nameLocation":"1272:9:16","nodeType":"EventDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"1281:2:16"},"src":"1266:18:16"},{"constant":false,"id":2763,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1304:14:16","nodeType":"VariableDeclaration","scope":3522,"src":"1288:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2762,"name":"uint64","nodeType":"ElementaryTypeName","src":"1288:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2766,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1339:15:16","nodeType":"VariableDeclaration","scope":3522,"src":"1322:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1357:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1379:13:16","nodeType":"VariableDeclaration","scope":3522,"src":"1362:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"1362:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1395:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2_5Mock.Request","id":2778,"members":[{"constant":false,"id":2771,"mutability":"mutable","name":"subId","nameLocation":"1432:5:16","nodeType":"VariableDeclaration","scope":2778,"src":"1424:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1424:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1450:16:16","nodeType":"VariableDeclaration","scope":2778,"src":"1443:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2772,"name":"uint32","nodeType":"ElementaryTypeName","src":"1443:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"numWords","nameLocation":"1479:8:16","nodeType":"VariableDeclaration","scope":2778,"src":"1472:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2774,"name":"uint32","nodeType":"ElementaryTypeName","src":"1472:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"extraArgs","nameLocation":"1499:9:16","nodeType":"VariableDeclaration","scope":2778,"src":"1493:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2776,"name":"bytes","nodeType":"ElementaryTypeName","src":"1493:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Request","nameLocation":"1410:7:16","nodeType":"StructDefinition","scope":3522,"src":"1403:110:16","visibility":"public"},{"constant":false,"id":2783,"mutability":"mutable","name":"s_requests","nameLocation":"1553:10:16","nodeType":"VariableDeclaration","scope":3522,"src":"1516:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2778_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request)"},"typeName":{"id":2782,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1524:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1516:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2778_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2781,"nodeType":"UserDefinedTypeName","pathNode":{"id":2780,"name":"Request","nameLocations":["1535:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2778,"src":"1535:7:16"},"referencedDeclaration":2778,"src":"1535:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_storage_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request"}}},"visibility":"internal"},{"body":{"id":2809,"nodeType":"Block","src":"1687:121:16","statements":[{"expression":{"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2794,"name":"i_base_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"1693:10:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2795,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"1706:8:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1693:21:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2797,"nodeType":"ExpressionStatement","src":"1693:21:16"},{"expression":{"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2798,"name":"i_gas_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"1720:11:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2799,"name":"_gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"1734:9:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1720:23:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2801,"nodeType":"ExpressionStatement","src":"1720:23:16"},{"expression":{"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"i_wei_per_unit_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1749:19:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2803,"name":"_weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"1771:15:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1749:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2805,"nodeType":"ExpressionStatement","src":"1749:37:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2806,"name":"setConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"1792:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2808,"nodeType":"ExpressionStatement","src":"1792:11:16"}]},"id":2810,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":2792,"kind":"baseConstructorSpecifier","modifierName":{"id":2791,"name":"SubscriptionAPI","nameLocations":["1669:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"1669:15:16"},"nodeType":"ModifierInvocation","src":"1669:17:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"_baseFee","nameLocation":"1617:8:16","nodeType":"VariableDeclaration","scope":2810,"src":"1610:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2784,"name":"uint96","nodeType":"ElementaryTypeName","src":"1610:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2787,"mutability":"mutable","name":"_gasPrice","nameLocation":"1634:9:16","nodeType":"VariableDeclaration","scope":2810,"src":"1627:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2786,"name":"uint96","nodeType":"ElementaryTypeName","src":"1627:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"_weiPerUnitLink","nameLocation":"1652:15:16","nodeType":"VariableDeclaration","scope":2810,"src":"1645:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2788,"name":"int256","nodeType":"ElementaryTypeName","src":"1645:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1609:59:16"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[],"src":"1687:0:16"},"scope":3522,"src":"1598:210:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2833,"nodeType":"Block","src":"1928:359:16","statements":[{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2816,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"1934:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1253_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1989:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2011:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2100:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2142:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2220:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2252:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2817,"name":"Config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1945:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Config_$1253_storage_ptr_$","typeString":"type(struct SubscriptionAPI.Config storage pointer)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1960:27:16","1998:11:16","2020:16:16","2047:26:16","2084:14:16","2113:27:16","2151:33:16","2195:23:16","2229:21:16"],"names":["minimumRequestConfirmations","maxGasLimit","stalenessSeconds","gasAfterPaymentCalculation","reentrancyLock","fulfillmentFlatFeeNativePPM","fulfillmentFlatFeeLinkDiscountPPM","nativePremiumPercentage","linkPremiumPercentage"],"nodeType":"FunctionCall","src":"1945:315:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1253_memory_ptr","typeString":"struct SubscriptionAPI.Config memory"}},"src":"1934:326:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1253_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":2829,"nodeType":"ExpressionStatement","src":"1934:326:16"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2830,"name":"ConfigSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2271:9:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2832,"nodeType":"EmitStatement","src":"2266:16:16"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"1812:75:16","text":" @notice Sets the configuration of the vrfv2 mock coordinator"},"functionSelector":"8b673e7a","id":2834,"implemented":true,"kind":"function","modifiers":[{"id":2814,"kind":"modifierInvocation","modifierName":{"id":2813,"name":"onlyOwner","nameLocations":["1918:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"1918:9:16"},"nodeType":"ModifierInvocation","src":"1918:9:16"}],"name":"setConfig","nameLocation":"1899:9:16","nodeType":"FunctionDefinition","parameters":{"id":2812,"nodeType":"ParameterList","parameters":[],"src":"1908:2:16"},"returnParameters":{"id":2815,"nodeType":"ParameterList","parameters":[],"src":"1928:0:16"},"scope":3522,"src":"1890:397:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2850,"nodeType":"Block","src":"2378:55:16","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":2843,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"2391:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":2845,"indexExpression":{"id":2844,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"2403:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2391:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":2847,"indexExpression":{"id":2846,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2414:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2391:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"id":2848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2422:6:16","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1139,"src":"2391:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2842,"id":2849,"nodeType":"Return","src":"2384:44:16"}]},"functionSelector":"953e9c75","id":2851,"implemented":true,"kind":"function","modifiers":[],"name":"consumerIsAdded","nameLocation":"2300:15:16","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"_subId","nameLocation":"2324:6:16","nodeType":"VariableDeclaration","scope":2851,"src":"2316:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2316:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"_consumer","nameLocation":"2340:9:16","nodeType":"VariableDeclaration","scope":2851,"src":"2332:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2837,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2315:35:16"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2851,"src":"2372:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2840,"name":"bool","nodeType":"ElementaryTypeName","src":"2372:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2371:6:16"},"scope":3522,"src":"2291:142:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2870,"nodeType":"Block","src":"2499:114:16","statements":[{"condition":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2509:35:16","subExpression":{"arguments":[{"id":2858,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"2526:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2859,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"2534:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2857,"name":"consumerIsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"2510:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2868,"nodeType":"IfStatement","src":"2505:97:16","trueBody":{"id":2867,"nodeType":"Block","src":"2546:56:16","statements":[{"errorCall":{"arguments":[{"id":2863,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"2577:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2864,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"2585:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2862,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"2561:15:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2561:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2866,"nodeType":"RevertStatement","src":"2554:41:16"}]}},{"id":2869,"nodeType":"PlaceholderStatement","src":"2607:1:16"}]},"id":2871,"name":"onlyValidConsumer","nameLocation":"2446:17:16","nodeType":"ModifierDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"_subId","nameLocation":"2472:6:16","nodeType":"VariableDeclaration","scope":2871,"src":"2464:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2464:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"_consumer","nameLocation":"2488:9:16","nodeType":"VariableDeclaration","scope":2871,"src":"2480:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2854,"name":"address","nodeType":"ElementaryTypeName","src":"2480:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2463:35:16"},"src":"2437:176:16","virtual":false,"visibility":"internal"},{"body":{"id":2891,"nodeType":"Block","src":"3256:82:16","statements":[{"expression":{"arguments":[{"id":2882,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"3293:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2883,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3305:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3330:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3316:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2885,"nodeType":"ArrayTypeName","src":"3320:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3316:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2881,"name":"fulfillRandomWordsWithOverride","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"3262:30:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256[] memory)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2890,"nodeType":"ExpressionStatement","src":"3262:71:16"}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"2617:547:16","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":2892,"implemented":true,"kind":"function","modifiers":[{"id":2879,"kind":"modifierInvocation","modifierName":{"id":2878,"name":"nonReentrant","nameLocations":["3243:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"3243:12:16"},"nodeType":"ModifierInvocation","src":"3243:12:16"}],"name":"fulfillRandomWords","nameLocation":"3176:18:16","nodeType":"FunctionDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"_requestId","nameLocation":"3203:10:16","nodeType":"VariableDeclaration","scope":2892,"src":"3195:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"3195:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"_consumer","nameLocation":"3223:9:16","nodeType":"VariableDeclaration","scope":2892,"src":"3215:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"3215:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3194:39:16"},"returnParameters":{"id":2880,"nodeType":"ParameterList","parameters":[],"src":"3256:0:16"},"scope":3522,"src":"3167:171:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3092,"nodeType":"Block","src":"3729:1316:16","statements":[{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"startGas","nameLocation":"3743:8:16","nodeType":"VariableDeclaration","scope":3092,"src":"3735:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3735:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2907,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2905,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"3754:7:16","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3754:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3735:28:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2908,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"3773:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2778_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":2910,"indexExpression":{"id":2909,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3784:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3773:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"id":2911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3796:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"3773:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3805:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3773:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2918,"nodeType":"IfStatement","src":"3769:77:16","trueBody":{"id":2917,"nodeType":"Block","src":"3808:38:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2914,"name":"InvalidRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"3823:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2916,"nodeType":"RevertStatement","src":"3816:23:16"}]}},{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"req","nameLocation":"3866:3:16","nodeType":"VariableDeclaration","scope":3092,"src":"3851:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request"},"typeName":{"id":2920,"nodeType":"UserDefinedTypeName","pathNode":{"id":2919,"name":"Request","nameLocations":["3851:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2778,"src":"3851:7:16"},"referencedDeclaration":2778,"src":"3851:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_storage_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request"}},"visibility":"internal"}],"id":2925,"initialValue":{"baseExpression":{"id":2922,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"3872:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2778_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":2924,"indexExpression":{"id":2923,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3883:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3872:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3851:43:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2926,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3905:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3912:6:16","memberName":"length","nodeType":"MemberAccess","src":"3905:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3922:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3905:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2968,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4112:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4119:6:16","memberName":"length","nodeType":"MemberAccess","src":"4112:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2970,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"4129:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":2971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4133:8:16","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"4129:12:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4112:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2977,"nodeType":"IfStatement","src":"4108:77:16","trueBody":{"id":2976,"nodeType":"Block","src":"4143:42:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2973,"name":"InvalidRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"4158:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4158:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2975,"nodeType":"RevertStatement","src":"4151:27:16"}]}},"id":2978,"nodeType":"IfStatement","src":"3901:284:16","trueBody":{"id":2967,"nodeType":"Block","src":"3925:177:16","statements":[{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2930,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3933:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2934,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"3956:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":2935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3960:8:16","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"3956:12:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3942:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2932,"nodeType":"ArrayTypeName","src":"3946:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3942:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3933:36:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2938,"nodeType":"ExpressionStatement","src":"3933:36:16"},{"body":{"id":2965,"nodeType":"Block","src":"4020:76:16","statements":[{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2950,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4030:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2952,"indexExpression":{"id":2951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"4037:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4030:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":2958,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"4071:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2959,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"4083:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2956,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4060:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4064:6:16","memberName":"encode","nodeType":"MemberAccess","src":"4060:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4060:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2955,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4050:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4050:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4042:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2953,"name":"uint256","nodeType":"ElementaryTypeName","src":"4042:7:16","typeDescriptions":{}}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4042:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4030:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"4030:57:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"3997:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2944,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"4001:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":2945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4005:8:16","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"4001:12:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3997:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2966,"initializationExpression":{"assignments":[2940],"declarations":[{"constant":false,"id":2940,"mutability":"mutable","name":"i","nameLocation":"3990:1:16","nodeType":"VariableDeclaration","scope":2966,"src":"3982:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"3982:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2942,"initialValue":{"hexValue":"30","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3982:13:16"},"loopExpression":{"expression":{"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4015:3:16","subExpression":{"id":2947,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"4015:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2949,"nodeType":"ExpressionStatement","src":"4015:3:16"},"nodeType":"ForStatement","src":"3977:119:16"}]}},{"assignments":[2981],"declarations":[{"constant":false,"id":2981,"mutability":"mutable","name":"v","nameLocation":"4213:1:16","nodeType":"VariableDeclaration","scope":3092,"src":"4191:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2Plus_$2531","typeString":"contract VRFConsumerBaseV2Plus"},"typeName":{"id":2980,"nodeType":"UserDefinedTypeName","pathNode":{"id":2979,"name":"VRFConsumerBaseV2Plus","nameLocations":["4191:21:16"],"nodeType":"IdentifierPath","referencedDeclaration":2531,"src":"4191:21:16"},"referencedDeclaration":2531,"src":"4191:21:16","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2Plus_$2531","typeString":"contract VRFConsumerBaseV2Plus"}},"visibility":"internal"}],"id":2982,"nodeType":"VariableDeclarationStatement","src":"4191:23:16"},{"assignments":[2984],"declarations":[{"constant":false,"id":2984,"mutability":"mutable","name":"callReq","nameLocation":"4233:7:16","nodeType":"VariableDeclaration","scope":3092,"src":"4220:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2983,"name":"bytes","nodeType":"ElementaryTypeName","src":"4220:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2993,"initialValue":{"arguments":[{"expression":{"expression":{"id":2987,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"4266:1:16","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2Plus_$2531","typeString":"contract VRFConsumerBaseV2Plus"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4268:21:16","memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":2469,"src":"4266:23:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4290:8:16","memberName":"selector","nodeType":"MemberAccess","src":"4266:32:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2990,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"4300:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2991,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4312:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":2985,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4243:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4247:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4243:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4220:99:16"},{"expression":{"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2994,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"4325:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1253_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":2996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4334:14:16","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":1240,"src":"4325:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4351:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4325:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2999,"nodeType":"ExpressionStatement","src":"4325:30:16"},{"assignments":[3001,null],"declarations":[{"constant":false,"id":3001,"mutability":"mutable","name":"success","nameLocation":"4438:7:16","nodeType":"VariableDeclaration","scope":3092,"src":"4433:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3000,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3009,"initialValue":{"arguments":[{"id":3007,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"4493:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3002,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4451:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4461:4:16","memberName":"call","nodeType":"MemberAccess","src":"4451:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3004,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"4471:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4475:16:16","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2773,"src":"4471:20:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"4451:41:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4451:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4432:69:16"},{"expression":{"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3010,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"4507:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1253_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":3012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4516:14:16","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":1240,"src":"4507:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4533:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4507:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3015,"nodeType":"ExpressionStatement","src":"4507:31:16"},{"assignments":[3017],"declarations":[{"constant":false,"id":3017,"mutability":"mutable","name":"nativePayment","nameLocation":"4550:13:16","nodeType":"VariableDeclaration","scope":3092,"src":"4545:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3016,"name":"bool","nodeType":"ElementaryTypeName","src":"4545:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3031,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"expression":{"id":3020,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"4572:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4576:9:16","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"4572:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3027,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3022,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"4586:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4590:9:16","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"4586:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4600:6:16","memberName":"length","nodeType":"MemberAccess","src":"4586:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4609:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4586:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4572:39:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4566:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3018,"name":"uint8","nodeType":"ElementaryTypeName","src":"4566:5:16","typeDescriptions":{}}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4566:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4616:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4566:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4545:72:16"},{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"rawPayment","nameLocation":"4632:10:16","nodeType":"VariableDeclaration","scope":3092,"src":"4624:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"4624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3044,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"i_base_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"4645:10:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"4660:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3036,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"4671:7:16","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4660:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4659:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3040,"name":"i_gas_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"4684:11:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4659:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4658:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4645:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4624:72:16"},{"condition":{"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4706:14:16","subExpression":{"id":3045,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"4707:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3060,"nodeType":"IfStatement","src":"4702:98:16","trueBody":{"id":3059,"nodeType":"Block","src":"4722:78:16","statements":[{"expression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3047,"name":"rawPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"4730:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653138","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4744:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3049,"name":"rawPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"4751:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4744:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4743:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":3054,"name":"i_wei_per_unit_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"4773:19:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4765:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"4765:7:16","typeDescriptions":{}}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4765:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4743:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4730:63:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3058,"nodeType":"ExpressionStatement","src":"4730:63:16"}]}},{"assignments":[3062],"declarations":[{"constant":false,"id":3062,"mutability":"mutable","name":"payment","nameLocation":"4812:7:16","nodeType":"VariableDeclaration","scope":3092,"src":"4805:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3061,"name":"uint96","nodeType":"ElementaryTypeName","src":"4805:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3067,"initialValue":{"arguments":[{"id":3065,"name":"rawPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"4829:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4822:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3063,"name":"uint96","nodeType":"ElementaryTypeName","src":"4822:6:16","typeDescriptions":{}}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4822:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4805:35:16"},{"expression":{"arguments":[{"id":3069,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"4862:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3070,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"4871:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3071,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"4886:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4890:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"4886:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3068,"name":"_chargePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"4847:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint96_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (uint96,bool,uint256)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4847:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3074,"nodeType":"ExpressionStatement","src":"4847:49:16"},{"expression":{"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4903:31:16","subExpression":{"components":[{"baseExpression":{"id":3075,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"4911:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2778_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":3077,"indexExpression":{"id":3076,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"4922:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4911:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}}],"id":3078,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4910:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"ExpressionStatement","src":"4903:31:16"},{"eventCall":{"arguments":[{"id":3082,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"4966:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3083,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"4978:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3084,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"4990:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4994:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"4990:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3086,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"5001:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3087,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"5010:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3088,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"5025:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66616c7365","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5034:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3081,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"4945:20:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$_t_bool_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint256,uint96,bool,bool,bool)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4945:95:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3091,"nodeType":"EmitStatement","src":"4940:100:16"}]},"documentation":{"id":2893,"nodeType":"StructuredDocumentation","src":"3342:273:16","text":" @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to\n @param _words user-provided random words"},"functionSelector":"08e3898e","id":3093,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWordsWithOverride","nameLocation":"3627:30:16","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"_requestId","nameLocation":"3666:10:16","nodeType":"VariableDeclaration","scope":3093,"src":"3658:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3658:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"_consumer","nameLocation":"3686:9:16","nodeType":"VariableDeclaration","scope":3093,"src":"3678:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"3678:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"_words","nameLocation":"3714:6:16","nodeType":"VariableDeclaration","scope":3093,"src":"3697:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"3697:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2899,"nodeType":"ArrayTypeName","src":"3697:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3657:64:16"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[],"src":"3729:0:16"},"scope":3522,"src":"3618:1427:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3163,"nodeType":"Block","src":"5133:538:16","statements":[{"assignments":[3104],"declarations":[{"constant":false,"id":3104,"mutability":"mutable","name":"subcription","nameLocation":"5160:11:16","nodeType":"VariableDeclaration","scope":3163,"src":"5139:32:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage_ptr","typeString":"struct SubscriptionAPI.Subscription"},"typeName":{"id":3103,"nodeType":"UserDefinedTypeName","pathNode":{"id":3102,"name":"Subscription","nameLocations":["5139:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1129,"src":"5139:12:16"},"referencedDeclaration":1129,"src":"5139:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage_ptr","typeString":"struct SubscriptionAPI.Subscription"}},"visibility":"internal"}],"id":3108,"initialValue":{"baseExpression":{"id":3105,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"5174:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":3107,"indexExpression":{"id":3106,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"5190:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5174:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5139:57:16"},{"condition":{"id":3109,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"5206:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3161,"nodeType":"Block","src":"5453:214:16","statements":[{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"prevBal","nameLocation":"5468:7:16","nodeType":"VariableDeclaration","scope":3161,"src":"5461:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3136,"name":"uint96","nodeType":"ElementaryTypeName","src":"5461:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3140,"initialValue":{"expression":{"id":3138,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5478:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":3139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5490:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"5478:19:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5461:36:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"5509:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3142,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"5519:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5509:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"IfStatement","src":"5505:70:16","trueBody":{"id":3147,"nodeType":"Block","src":"5528:47:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3144,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5545:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3146,"nodeType":"RevertStatement","src":"5538:28:16"}]}},{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3149,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5582:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":3151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5594:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"5582:19:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"5604:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3153,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"5614:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5604:17:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5582:39:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3156,"nodeType":"ExpressionStatement","src":"5582:39:16"},{"expression":{"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3157,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"5629:20:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3158,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"5653:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5629:31:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3160,"nodeType":"ExpressionStatement","src":"5629:31:16"}]},"id":3162,"nodeType":"IfStatement","src":"5202:465:16","trueBody":{"id":3135,"nodeType":"Block","src":"5221:226:16","statements":[{"assignments":[3111],"declarations":[{"constant":false,"id":3111,"mutability":"mutable","name":"prevBal","nameLocation":"5236:7:16","nodeType":"VariableDeclaration","scope":3135,"src":"5229:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3110,"name":"uint96","nodeType":"ElementaryTypeName","src":"5229:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3114,"initialValue":{"expression":{"id":3112,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5246:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":3113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5258:13:16","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1126,"src":"5246:25:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5229:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3115,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"5283:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3116,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"5293:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5283:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"nodeType":"IfStatement","src":"5279:70:16","trueBody":{"id":3121,"nodeType":"Block","src":"5302:47:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3118,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5319:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3120,"nodeType":"RevertStatement","src":"5312:28:16"}]}},{"expression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3123,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5356:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":3125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5368:13:16","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1126,"src":"5356:25:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3126,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"5384:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3127,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"5394:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5384:17:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5356:45:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3130,"nodeType":"ExpressionStatement","src":"5356:45:16"},{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3131,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"5409:20:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3132,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"5433:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5409:31:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3134,"nodeType":"ExpressionStatement","src":"5409:31:16"}]}}]},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"_chargePayment","nameLocation":"5058:14:16","nodeType":"FunctionDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"payment","nameLocation":"5080:7:16","nodeType":"VariableDeclaration","scope":3164,"src":"5073:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3094,"name":"uint96","nodeType":"ElementaryTypeName","src":"5073:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"nativePayment","nameLocation":"5094:13:16","nodeType":"VariableDeclaration","scope":3164,"src":"5089:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3096,"name":"bool","nodeType":"ElementaryTypeName","src":"5089:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"subId","nameLocation":"5117:5:16","nodeType":"VariableDeclaration","scope":3164,"src":"5109:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"5109:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5072:51:16"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[],"src":"5133:0:16"},"scope":3522,"src":"5049:622:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3218,"nodeType":"Block","src":"5939:332:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3172,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"5949:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3174,"indexExpression":{"id":3173,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"5971:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5949:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5979:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"5949:35:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5996:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5988:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"5988:7:16","typeDescriptions":{}}},"id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5988:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5949:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3185,"nodeType":"IfStatement","src":"5945:98:16","trueBody":{"id":3184,"nodeType":"Block","src":"6000:43:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3181,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"6015:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3183,"nodeType":"RevertStatement","src":"6008:28:16"}]}},{"assignments":[3187],"declarations":[{"constant":false,"id":3187,"mutability":"mutable","name":"oldBalance","nameLocation":"6056:10:16","nodeType":"VariableDeclaration","scope":3218,"src":"6048:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"6048:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3192,"initialValue":{"expression":{"baseExpression":{"id":3188,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"6069:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":3190,"indexExpression":{"id":3189,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"6085:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6069:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":3191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6093:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"6069:31:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"6048:52:16"},{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3193,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"6106:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1129_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":3195,"indexExpression":{"id":3194,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"6122:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6106:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1129_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":3196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6130:7:16","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"6106:31:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3199,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6148:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6141:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3197,"name":"uint96","nodeType":"ElementaryTypeName","src":"6141:6:16","typeDescriptions":{}}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6106:50:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3202,"nodeType":"ExpressionStatement","src":"6106:50:16"},{"expression":{"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3203,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"6162:14:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3206,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6187:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6180:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3204,"name":"uint96","nodeType":"ElementaryTypeName","src":"6180:6:16","typeDescriptions":{}}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6180:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6162:33:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3209,"nodeType":"ExpressionStatement","src":"6162:33:16"},{"eventCall":{"arguments":[{"id":3211,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"6225:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3212,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"6233:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3213,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"6245:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3214,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6245:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3210,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6206:18:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6206:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"EmitStatement","src":"6201:65:16"}]},"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"5675:195:16","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"115e3c0d","id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"5882:16:16","nodeType":"FunctionDefinition","parameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"_subId","nameLocation":"5907:6:16","nodeType":"VariableDeclaration","scope":3219,"src":"5899:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"_amount","nameLocation":"5923:7:16","nodeType":"VariableDeclaration","scope":3219,"src":"5915:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5898:33:16"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[],"src":"5939:0:16"},"scope":3522,"src":"5873:398:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3260,"nodeType":"Block","src":"6514:273:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3228,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6524:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6534:6:16","memberName":"length","nodeType":"MemberAccess","src":"6524:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6544:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6524:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3238,"nodeType":"IfStatement","src":"6520:100:16","trueBody":{"id":3237,"nodeType":"Block","src":"6547:73:16","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6606:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3232,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"6562:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2694_$","typeString":"type(library VRFV2PlusClient)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6578:11:16","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"6562:27:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2665_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6591:13:16"],"names":["nativePayment"],"nodeType":"FunctionCall","src":"6562:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}},"functionReturnParameters":3227,"id":3236,"nodeType":"Return","src":"6555:58:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3241,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6636:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6629:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3239,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6629:6:16","typeDescriptions":{}}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6629:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3243,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"6650:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2694_$","typeString":"type(library VRFV2PlusClient)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6666:17:16","memberName":"EXTRA_ARGS_V1_TAG","nodeType":"MemberAccess","referencedDeclaration":2662,"src":"6650:33:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"6629:54:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3249,"nodeType":"IfStatement","src":"6625:88:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3246,"name":"InvalidExtraArgsTag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"6692:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6692:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3248,"nodeType":"RevertStatement","src":"6685:28:16"}},{"expression":{"arguments":[{"baseExpression":{"id":3252,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6737:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"6737:13:16","startExpression":{"hexValue":"34","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"expression":{"id":3255,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"6753:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2694_$","typeString":"type(library VRFV2PlusClient)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6769:11:16","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"6753:27:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2665_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}}],"id":3257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6752:29:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2665_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2665_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}],"expression":{"id":3250,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6726:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6730:6:16","memberName":"decode","nodeType":"MemberAccess","src":"6726:10:16","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6726:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}},"functionReturnParameters":3227,"id":3259,"nodeType":"Return","src":"6719:63:16"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"6275:131:16","text":"@dev Convert the extra args bytes into a struct\n @param extraArgs The extra args bytes\n @return The extra args struct"},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"_fromBytes","nameLocation":"6418:10:16","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"extraArgs","nameLocation":"6444:9:16","nodeType":"VariableDeclaration","scope":3261,"src":"6429:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3221,"name":"bytes","nodeType":"ElementaryTypeName","src":"6429:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6428:26:16"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3261,"src":"6478:34:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"},"typeName":{"id":3225,"nodeType":"UserDefinedTypeName","pathNode":{"id":3224,"name":"VRFV2PlusClient.ExtraArgsV1","nameLocations":["6478:15:16","6494:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2665,"src":"6478:27:16"},"referencedDeclaration":2665,"src":"6478:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_storage_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"}},"visibility":"internal"}],"src":"6477:36:16"},"scope":3522,"src":"6409:378:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[2548],"body":{"id":3352,"nodeType":"Block","src":"6968:749:16","statements":[{"assignments":[3279],"declarations":[{"constant":false,"id":3279,"mutability":"mutable","name":"subId","nameLocation":"6982:5:16","nodeType":"VariableDeclaration","scope":3352,"src":"6974:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6974:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3282,"initialValue":{"expression":{"id":3280,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"6990:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6995:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2669,"src":"6990:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6974:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3283,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"7010:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3285,"indexExpression":{"id":3284,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"7032:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7010:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"7010:34:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7056:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7048:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"7048:7:16","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7048:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7010:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3296,"nodeType":"IfStatement","src":"7006:97:16","trueBody":{"id":3295,"nodeType":"Block","src":"7060:43:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3292,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"7075:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7075:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3294,"nodeType":"RevertStatement","src":"7068:28:16"}]}},{"assignments":[3298],"declarations":[{"constant":false,"id":3298,"mutability":"mutable","name":"requestId","nameLocation":"7117:9:16","nodeType":"VariableDeclaration","scope":3352,"src":"7109:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"7109:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3301,"initialValue":{"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7129:17:16","subExpression":{"id":3299,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"7129:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7109:37:16"},{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"preSeed","nameLocation":"7160:7:16","nodeType":"VariableDeclaration","scope":3352,"src":"7152:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"7152:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3306,"initialValue":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7170:15:16","subExpression":{"id":3304,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7170:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7152:33:16"},{"assignments":[3308],"declarations":[{"constant":false,"id":3308,"mutability":"mutable","name":"extraArgsBytes","nameLocation":"7205:14:16","nodeType":"VariableDeclaration","scope":3352,"src":"7192:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3307,"name":"bytes","nodeType":"ElementaryTypeName","src":"7192:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3316,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":3312,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7262:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7267:9:16","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2677,"src":"7262:14:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3311,"name":"_fromBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"7251:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_ExtraArgsV1_$2665_memory_ptr_$","typeString":"function (bytes calldata) pure returns (struct VRFV2PlusClient.ExtraArgsV1 memory)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7251:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":3309,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"7222:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2694_$","typeString":"type(library VRFV2PlusClient)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7238:12:16","memberName":"_argsToBytes","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"7222:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ExtraArgsV1_$2665_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7222:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7192:86:16"},{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3317,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"7284:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2778_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":3319,"indexExpression":{"id":3318,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"7295:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3321,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7331:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7336:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2669,"src":"7331:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3323,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7367:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7372:16:16","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"7367:21:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3325,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7406:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7411:8:16","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2675,"src":"7406:13:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3327,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7438:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7443:9:16","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2677,"src":"7438:14:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3320,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"7308:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$2778_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2_5Mock.Request storage pointer)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7324:5:16","7349:16:16","7396:8:16","7427:9:16"],"names":["subId","callbackGasLimit","numWords","extraArgs"],"nodeType":"FunctionCall","src":"7308:151:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"src":"7284:175:16","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2778_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"id":3331,"nodeType":"ExpressionStatement","src":"7284:175:16"},{"eventCall":{"arguments":[{"expression":{"id":3333,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7499:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7504:7:16","memberName":"keyHash","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"7499:12:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3335,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"7519:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3336,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"7536:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3337,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7551:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7556:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2669,"src":"7551:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3339,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7569:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7574:20:16","memberName":"requestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2671,"src":"7569:25:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":3341,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7602:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7607:16:16","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"7602:21:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3343,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7631:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7636:8:16","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2675,"src":"7631:13:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3345,"name":"extraArgsBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"7652:14:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3346,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7674:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7678:6:16","memberName":"sender","nodeType":"MemberAccess","src":"7674:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3332,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"7471:20:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_uint32_$_t_uint32_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256,uint16,uint32,uint32,bytes memory,address)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7471:219:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3349,"nodeType":"EmitStatement","src":"7466:224:16"},{"expression":{"id":3350,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"7703:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3277,"id":3351,"nodeType":"Return","src":"7696:16:16"}]},"functionSelector":"9b1c385e","id":3353,"implemented":true,"kind":"function","modifiers":[{"id":3268,"kind":"modifierInvocation","modifierName":{"id":3267,"name":"nonReentrant","nameLocations":["6895:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"6895:12:16"},"nodeType":"ModifierInvocation","src":"6895:12:16"},{"arguments":[{"expression":{"id":3270,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"6926:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6931:5:16","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2669,"src":"6926:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3272,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6938:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6942:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6938:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3274,"kind":"modifierInvocation","modifierName":{"id":3269,"name":"onlyValidConsumer","nameLocations":["6908:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"6908:17:16"},"nodeType":"ModifierInvocation","src":"6908:41:16"}],"name":"requestRandomWords","nameLocation":"6800:18:16","nodeType":"FunctionDefinition","overrides":{"id":3266,"nodeType":"OverrideSpecifier","overrides":[],"src":"6886:8:16"},"parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"_req","nameLocation":"6868:4:16","nodeType":"VariableDeclaration","scope":3353,"src":"6824:48:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"},"typeName":{"id":3263,"nodeType":"UserDefinedTypeName","pathNode":{"id":3262,"name":"VRFV2PlusClient.RandomWordsRequest","nameLocations":["6824:15:16","6840:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"6824:34:16"},"referencedDeclaration":2678,"src":"6824:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_storage_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"}},"visibility":"internal"}],"src":"6818:58:16"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3353,"src":"6959:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"6959:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6958:9:16"},"scope":3522,"src":"6791:926:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2582],"body":{"id":3459,"nodeType":"Block","src":"7933:634:16","statements":[{"condition":{"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7943:38:16","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":3371,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"7944:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":3373,"indexExpression":{"id":3372,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"7956:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7944:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":3375,"indexExpression":{"id":3374,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7967:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7944:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"id":3376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7975:6:16","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1139,"src":"7944:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3384,"nodeType":"IfStatement","src":"7939:100:16","trueBody":{"id":3383,"nodeType":"Block","src":"7983:56:16","statements":[{"errorCall":{"arguments":[{"id":3379,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8014:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3380,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8022:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3378,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"7998:15:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3382,"nodeType":"RevertStatement","src":"7991:41:16"}]}},{"assignments":[3389],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"consumers","nameLocation":"8061:9:16","nodeType":"VariableDeclaration","scope":3459,"src":"8044:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"8044:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3388,"nodeType":"ArrayTypeName","src":"8044:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3394,"initialValue":{"expression":{"baseExpression":{"id":3390,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"8073:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3392,"indexExpression":{"id":3391,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8095:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8073:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8103:9:16","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1136,"src":"8073:39:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8044:68:16"},{"assignments":[3396],"declarations":[{"constant":false,"id":3396,"mutability":"mutable","name":"lastConsumerIndex","nameLocation":"8126:17:16","nodeType":"VariableDeclaration","scope":3459,"src":"8118:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"8118:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3401,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3397,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8146:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8156:6:16","memberName":"length","nodeType":"MemberAccess","src":"8146:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8165:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8146:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8118:48:16"},{"body":{"id":3443,"nodeType":"Block","src":"8219:236:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3413,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8231:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3415,"indexExpression":{"id":3414,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"8241:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8231:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3416,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8247:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8231:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3442,"nodeType":"IfStatement","src":"8227:222:16","trueBody":{"id":3441,"nodeType":"Block","src":"8258:191:16","statements":[{"assignments":[3419],"declarations":[{"constant":false,"id":3419,"mutability":"mutable","name":"last","nameLocation":"8276:4:16","nodeType":"VariableDeclaration","scope":3441,"src":"8268:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3418,"name":"address","nodeType":"ElementaryTypeName","src":"8268:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3423,"initialValue":{"baseExpression":{"id":3420,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8283:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3422,"indexExpression":{"id":3421,"name":"lastConsumerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"8293:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8283:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8268:43:16"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":3424,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"8321:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3426,"indexExpression":{"id":3425,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8343:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8321:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8351:9:16","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1136,"src":"8321:39:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3429,"indexExpression":{"id":3428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"8361:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8321:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3430,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"8366:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8321:49:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3432,"nodeType":"ExpressionStatement","src":"8321:49:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":3433,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"8380:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1137_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3435,"indexExpression":{"id":3434,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8402:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8380:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1137_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8410:9:16","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1136,"src":"8380:39:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8420:3:16","memberName":"pop","nodeType":"MemberAccess","src":"8380:43:16","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3439,"nodeType":"ExpressionStatement","src":"8380:45:16"},{"id":3440,"nodeType":"Break","src":"8435:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3406,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"8192:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3407,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8196:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8206:6:16","memberName":"length","nodeType":"MemberAccess","src":"8196:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8192:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3444,"initializationExpression":{"assignments":[3403],"declarations":[{"constant":false,"id":3403,"mutability":"mutable","name":"i","nameLocation":"8185:1:16","nodeType":"VariableDeclaration","scope":3444,"src":"8177:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"8177:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3405,"initialValue":{"hexValue":"30","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8189:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8177:13:16"},"loopExpression":{"expression":{"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"8214:3:16","subExpression":{"id":3410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"8216:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3412,"nodeType":"ExpressionStatement","src":"8214:3:16"},"nodeType":"ForStatement","src":"8172:283:16"},{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":3445,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"8460:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":3448,"indexExpression":{"id":3446,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8472:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8460:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1144_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":3449,"indexExpression":{"id":3447,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8483:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8460:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1144_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"id":3450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8491:6:16","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1139,"src":"8460:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8500:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8460:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3453,"nodeType":"ExpressionStatement","src":"8460:45:16"},{"eventCall":{"arguments":[{"id":3455,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8544:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3456,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8552:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3454,"name":"SubscriptionConsumerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"8516:27:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8516:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3458,"nodeType":"EmitStatement","src":"8511:51:16"}]},"documentation":{"id":3354,"nodeType":"StructuredDocumentation","src":"7721:49:16","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"cb631797","id":3460,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3362,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7875:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3363,"kind":"modifierInvocation","modifierName":{"id":3361,"name":"onlySubOwner","nameLocations":["7862:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2333,"src":"7862:12:16"},"nodeType":"ModifierInvocation","src":"7862:20:16"},{"arguments":[{"id":3365,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7901:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3366,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"7909:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3367,"kind":"modifierInvocation","modifierName":{"id":3364,"name":"onlyValidConsumer","nameLocations":["7883:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"7883:17:16"},"nodeType":"ModifierInvocation","src":"7883:36:16"},{"id":3369,"kind":"modifierInvocation","modifierName":{"id":3368,"name":"nonReentrant","nameLocations":["7920:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"7920:12:16"},"nodeType":"ModifierInvocation","src":"7920:12:16"}],"name":"removeConsumer","nameLocation":"7782:14:16","nodeType":"FunctionDefinition","overrides":{"id":3360,"nodeType":"OverrideSpecifier","overrides":[],"src":"7853:8:16"},"parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"_subId","nameLocation":"7810:6:16","nodeType":"VariableDeclaration","scope":3460,"src":"7802:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"7802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3358,"mutability":"mutable","name":"_consumer","nameLocation":"7830:9:16","nodeType":"VariableDeclaration","scope":3460,"src":"7822:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3357,"name":"address","nodeType":"ElementaryTypeName","src":"7822:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7796:47:16"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[],"src":"7933:0:16"},"scope":3522,"src":"7773:794:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2590],"body":{"id":3508,"nodeType":"Block","src":"8732:277:16","statements":[{"assignments":[3475,3477],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"balance","nameLocation":"8746:7:16","nodeType":"VariableDeclaration","scope":3508,"src":"8739:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3474,"name":"uint96","nodeType":"ElementaryTypeName","src":"8739:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"nativeBalance","nameLocation":"8762:13:16","nodeType":"VariableDeclaration","scope":3508,"src":"8755:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3476,"name":"uint96","nodeType":"ElementaryTypeName","src":"8755:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3481,"initialValue":{"arguments":[{"id":3479,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"8799:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3478,"name":"_deleteSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"8779:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint96_$_t_uint96_$","typeString":"function (uint256) returns (uint96,uint96)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8779:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$","typeString":"tuple(uint96,uint96)"}},"nodeType":"VariableDeclarationStatement","src":"8738:68:16"},{"assignments":[3483,null],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"success","nameLocation":"8819:7:16","nodeType":"VariableDeclaration","scope":3508,"src":"8814:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3482,"name":"bool","nodeType":"ElementaryTypeName","src":"8814:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3493,"initialValue":{"arguments":[{"hexValue":"","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8872:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3484,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"8832:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8836:4:16","memberName":"call","nodeType":"MemberAccess","src":"8832:8:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"arguments":[{"id":3488,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"8856:13:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"8848:7:16","typeDescriptions":{}}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8848:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8832:39:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8832:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8813:62:16"},{"condition":{"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8885:8:16","subExpression":{"id":3494,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"8886:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3500,"nodeType":"IfStatement","src":"8881:56:16","trueBody":{"id":3499,"nodeType":"Block","src":"8895:42:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3496,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"8910:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8910:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3498,"nodeType":"RevertStatement","src":"8903:27:16"}]}},{"eventCall":{"arguments":[{"id":3502,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"8968:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3503,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"8976:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3504,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"8981:7:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3505,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"8990:13:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3501,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"8947:20:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3507,"nodeType":"EmitStatement","src":"8942:62:16"}]},"documentation":{"id":3461,"nodeType":"StructuredDocumentation","src":"8571:49:16","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"0ae09540","id":3509,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3469,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"8711:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3470,"kind":"modifierInvocation","modifierName":{"id":3468,"name":"onlySubOwner","nameLocations":["8698:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2333,"src":"8698:12:16"},"nodeType":"ModifierInvocation","src":"8698:20:16"},{"id":3472,"kind":"modifierInvocation","modifierName":{"id":3471,"name":"nonReentrant","nameLocations":["8719:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"8719:12:16"},"nodeType":"ModifierInvocation","src":"8719:12:16"}],"name":"cancelSubscription","nameLocation":"8632:18:16","nodeType":"FunctionDefinition","overrides":{"id":3467,"nodeType":"OverrideSpecifier","overrides":[],"src":"8689:8:16"},"parameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"_subId","nameLocation":"8659:6:16","nodeType":"VariableDeclaration","scope":3509,"src":"8651:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3462,"name":"uint256","nodeType":"ElementaryTypeName","src":"8651:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3465,"mutability":"mutable","name":"_to","nameLocation":"8675:3:16","nodeType":"VariableDeclaration","scope":3509,"src":"8667:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3464,"name":"address","nodeType":"ElementaryTypeName","src":"8667:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8650:29:16"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[],"src":"8732:0:16"},"scope":3522,"src":"8623:386:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2634],"body":{"id":3520,"nodeType":"Block","src":"9098:34:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3517,"name":"NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"9111:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9111:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3519,"nodeType":"RevertStatement","src":"9104:23:16"}]},"functionSelector":"41af6c87","id":3521,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"9022:20:16","nodeType":"FunctionDefinition","overrides":{"id":3513,"nodeType":"OverrideSpecifier","overrides":[],"src":"9074:8:16"},"parameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3521,"src":"9043:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"9043:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9042:19:16"},"returnParameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3521,"src":"9092:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3514,"name":"bool","nodeType":"ElementaryTypeName","src":"9092:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9091:6:16"},"scope":3522,"src":"9013:119:16","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":3523,"src":"476:8658:16","usedErrors":[1070,1072,1078,1080,1082,1084,1088,1090,1094,1100,1114,1116,1118,1120,1122,1258,2717,2719,2721,2723]}],"src":"94:9041:16"},"id":16},"contracts/Raffel.sol":{"ast":{"absolutePath":"contracts/Raffel.sol","exportedSymbols":{"AutomationCompatibleInterface":[67],"IVRFCoordinatorV2Plus":[2549],"Raffel":[3990],"Raffel__NotOpen":[3538],"Raffel__TransferFailed":[3536],"Raffel__notEnoughEthEntered":[3534],"Raffel__upKeepNotNeeded":[3546],"VRFConsumerBaseV2Plus":[2531],"VRFV2PlusClient":[2694]},"id":3991,"nodeType":"SourceUnit","nodes":[{"id":3524,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"256:24:17"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","id":3526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3991,"sourceUnit":2532,"src":"288:102:17","symbolAliases":[{"foreign":{"id":3525,"name":"VRFConsumerBaseV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"296:21:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","id":3528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3991,"sourceUnit":2695,"src":"391:100:17","symbolAliases":[{"foreign":{"id":3527,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"399:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","id":3530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3991,"sourceUnit":2550,"src":"492:113:17","symbolAliases":[{"foreign":{"id":3529,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"500:21:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","file":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","id":3532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3991,"sourceUnit":49,"src":"615:112:17","symbolAliases":[{"foreign":{"id":3531,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"623:29:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"errorSelector":"ddbb36c5","id":3534,"name":"Raffel__notEnoughEthEntered","nameLocation":"743:27:17","nodeType":"ErrorDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[],"src":"770:2:17"},"src":"737:36:17"},{"errorSelector":"3c30e74a","id":3536,"name":"Raffel__TransferFailed","nameLocation":"780:22:17","nodeType":"ErrorDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[],"src":"802:2:17"},"src":"774:31:17"},{"errorSelector":"5438580b","id":3538,"name":"Raffel__NotOpen","nameLocation":"812:15:17","nodeType":"ErrorDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[],"src":"827:2:17"},"src":"806:24:17"},{"errorSelector":"125f719f","id":3546,"name":"Raffel__upKeepNotNeeded","nameLocation":"837:23:17","nodeType":"ErrorDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3540,"mutability":"mutable","name":"balance","nameLocation":"869:7:17","nodeType":"VariableDeclaration","scope":3546,"src":"861:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"861:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"numberOfPlayers","nameLocation":"886:15:17","nodeType":"VariableDeclaration","scope":3546,"src":"878:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"raffelstate","nameLocation":"911:11:17","nodeType":"VariableDeclaration","scope":3546,"src":"903:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"860:63:17"},"src":"831:93:17"},{"abstract":false,"baseContracts":[{"baseName":{"id":3547,"name":"VRFConsumerBaseV2Plus","nameLocations":["993:21:17"],"nodeType":"IdentifierPath","referencedDeclaration":2531,"src":"993:21:17"},"id":3548,"nodeType":"InheritanceSpecifier","src":"993:21:17"},{"baseName":{"id":3549,"name":"AutomationCompatibleInterface","nameLocations":["1016:29:17"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"1016:29:17"},"id":3550,"nodeType":"InheritanceSpecifier","src":"1016:29:17"}],"canonicalName":"Raffel","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3990,"linearizedBaseContracts":[3990,67,2531,88,251,325,2563],"name":"Raffel","nameLocation":"983:6:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Raffel.RaffelState","id":3553,"members":[{"id":3551,"name":"open","nameLocation":"1103:4:17","nodeType":"EnumValue","src":"1103:4:17"},{"id":3552,"name":"calculating","nameLocation":"1117:11:17","nodeType":"EnumValue","src":"1117:11:17"}],"name":"RaffelState","nameLocation":"1081:11:17","nodeType":"EnumDefinition","src":"1076:58:17"},{"constant":false,"id":3555,"mutability":"immutable","name":"i_enteranceFee","nameLocation":"1189:14:17","nodeType":"VariableDeclaration","scope":3990,"src":"1163:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3558,"mutability":"mutable","name":"s_players","nameLocation":"1235:9:17","nodeType":"VariableDeclaration","scope":3990,"src":"1209:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":3556,"name":"address","nodeType":"ElementaryTypeName","src":"1209:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3557,"nodeType":"ArrayTypeName","src":"1209:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"canonicalName":"Raffel.RequestStatus","id":3566,"members":[{"constant":false,"id":3560,"mutability":"mutable","name":"fulfilled","nameLocation":"1286:9:17","nodeType":"VariableDeclaration","scope":3566,"src":"1281:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3559,"name":"bool","nodeType":"ElementaryTypeName","src":"1281:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3562,"mutability":"mutable","name":"exists","nameLocation":"1365:6:17","nodeType":"VariableDeclaration","scope":3566,"src":"1360:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3561,"name":"bool","nodeType":"ElementaryTypeName","src":"1360:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"randomWords","nameLocation":"1421:11:17","nodeType":"VariableDeclaration","scope":3566,"src":"1411:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3564,"nodeType":"ArrayTypeName","src":"1411:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RequestStatus","nameLocation":"1257:13:17","nodeType":"StructDefinition","scope":3990,"src":"1250:189:17","visibility":"public"},{"constant":false,"functionSelector":"a168fa89","id":3571,"mutability":"mutable","name":"s_requests","nameLocation":"1485:10:17","nodeType":"VariableDeclaration","scope":3990,"src":"1444:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$3566_storage_$","typeString":"mapping(uint256 => struct Raffel.RequestStatus)"},"typeName":{"id":3570,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1452:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1444:33:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$3566_storage_$","typeString":"mapping(uint256 => struct Raffel.RequestStatus)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3569,"nodeType":"UserDefinedTypeName","pathNode":{"id":3568,"name":"RequestStatus","nameLocations":["1463:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":3566,"src":"1463:13:17"},"referencedDeclaration":3566,"src":"1463:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$3566_storage_ptr","typeString":"struct Raffel.RequestStatus"}}},"visibility":"public"},{"constant":false,"functionSelector":"8796ba8c","id":3574,"mutability":"mutable","name":"requestIds","nameLocation":"1519:10:17","nodeType":"VariableDeclaration","scope":3990,"src":"1502:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":3572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1502:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3573,"nodeType":"ArrayTypeName","src":"1502:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"fc2a88c3","id":3576,"mutability":"mutable","name":"lastRequestId","nameLocation":"1550:13:17","nodeType":"VariableDeclaration","scope":3990,"src":"1535:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1535:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"61728f39","id":3579,"mutability":"mutable","name":"keyHash","nameLocation":"1584:7:17","nodeType":"VariableDeclaration","scope":3990,"src":"1569:91:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307837383764373463616561313062326233353737393064356235323437633266363364316439313537326139383436663738303630366534643935333637376165","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1594:66:17","typeDescriptions":{"typeIdentifier":"t_rational_54499203786224664545214975898555686073558526619289911036465919174612406925230_by_1","typeString":"int_const 5449...(69 digits omitted)...5230"},"value":"0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae"},"visibility":"public"},{"constant":false,"functionSelector":"24f74697","id":3582,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1680:16:17","nodeType":"VariableDeclaration","scope":3990,"src":"1666:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3580,"name":"uint32","nodeType":"ElementaryTypeName","src":"1666:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"313030303030","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1699:6:17","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"visibility":"public"},{"constant":false,"functionSelector":"b0fb162f","id":3585,"mutability":"mutable","name":"requestConfirmations","nameLocation":"1725:20:17","nodeType":"VariableDeclaration","scope":3990,"src":"1711:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3583,"name":"uint16","nodeType":"ElementaryTypeName","src":"1711:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1748:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"7ccfd7fc","id":3588,"mutability":"mutable","name":"numWords","nameLocation":"1769:8:17","nodeType":"VariableDeclaration","scope":3990,"src":"1755:26:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3586,"name":"uint32","nodeType":"ElementaryTypeName","src":"1755:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"32","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1780:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"id":3590,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"1813:16:17","nodeType":"VariableDeclaration","scope":3990,"src":"1787:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3593,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"1875:16:17","nodeType":"VariableDeclaration","scope":3990,"src":"1835:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"},"typeName":{"id":3592,"nodeType":"UserDefinedTypeName","pathNode":{"id":3591,"name":"IVRFCoordinatorV2Plus","nameLocations":["1835:21:17"],"nodeType":"IdentifierPath","referencedDeclaration":2549,"src":"1835:21:17"},"referencedDeclaration":2549,"src":"1835:21:17","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"visibility":"private"},{"constant":false,"id":3595,"mutability":"mutable","name":"s_recentWinner","nameLocation":"1940:14:17","nodeType":"VariableDeclaration","scope":3990,"src":"1924:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3594,"name":"address","nodeType":"ElementaryTypeName","src":"1924:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3598,"mutability":"mutable","name":"s_raffelState","nameLocation":"1980:13:17","nodeType":"VariableDeclaration","scope":3990,"src":"1960:33:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"},"typeName":{"id":3597,"nodeType":"UserDefinedTypeName","pathNode":{"id":3596,"name":"RaffelState","nameLocations":["1960:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3553,"src":"1960:11:17"},"referencedDeclaration":3553,"src":"1960:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"visibility":"private"},{"constant":false,"id":3600,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"2015:15:17","nodeType":"VariableDeclaration","scope":3990,"src":"1999:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1999:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3602,"mutability":"immutable","name":"i_interval","nameLocation":"2062:10:17","nodeType":"VariableDeclaration","scope":3990,"src":"2036:36:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"aa80e2a495e1f9621cef4cc4e683c91012559860b607a726567faec8d409f647","id":3606,"name":"raffelEnter","nameLocation":"2098:11:17","nodeType":"EventDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"2126:6:17","nodeType":"VariableDeclaration","scope":3606,"src":"2110:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"2110:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2109:24:17"},"src":"2092:42:17"},{"anonymous":false,"eventSelector":"07d73ddda260dc89816ee12ce72b1a4114528f275259ef6541d5f91803c6c284","id":3610,"name":"winnerRandomRequest","nameLocation":"2145:19:17","nodeType":"EventDefinition","parameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"2173:9:17","nodeType":"VariableDeclaration","scope":3610,"src":"2165:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2165:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2164:19:17"},"src":"2139:45:17"},{"anonymous":false,"eventSelector":"794919b0f484b8e90b1b817ac7f880f846fbd8a9813dee2a378e820db094e3d1","id":3614,"name":"winnerPicked","nameLocation":"2195:12:17","nodeType":"EventDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"2224:6:17","nodeType":"VariableDeclaration","scope":3614,"src":"2208:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2207:24:17"},"src":"2189:43:17"},{"body":{"id":3657,"nodeType":"Block","src":"2558:280:17","statements":[{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3629,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"2568:16:17","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3631,"name":"vrfCoordinatorV2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"2609:23:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3630,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"2587:21:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2549_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"2568:65:17","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"id":3634,"nodeType":"ExpressionStatement","src":"2568:65:17"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"2643:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3636,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"2662:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2643:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"2643:33:17"},{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3639,"name":"i_enteranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"2686:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3640,"name":"enteranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"2703:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2686:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3642,"nodeType":"ExpressionStatement","src":"2686:29:17"},{"expression":{"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3643,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"2725:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3644,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"2741:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$3553_$","typeString":"type(enum Raffel.RaffelState)"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2753:4:17","memberName":"open","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"2741:16:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"src":"2725:32:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"id":3647,"nodeType":"ExpressionStatement","src":"2725:32:17"},{"expression":{"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3648,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"2767:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3649,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2785:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2791:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"2785:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2767:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3652,"nodeType":"ExpressionStatement","src":"2767:33:17"},{"expression":{"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3653,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2810:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3654,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2823:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2810:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3656,"nodeType":"ExpressionStatement","src":"2810:21:17"}]},"documentation":{"id":3615,"nodeType":"StructuredDocumentation","src":"2238:103:17","text":" HARDCODED FOR SEPOLIA\n COORDINATOR: 0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625"},"id":3658,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3626,"name":"vrfCoordinatorV2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"2533:23:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3627,"kind":"baseConstructorSpecifier","modifierName":{"id":3625,"name":"VRFConsumerBaseV2Plus","nameLocations":["2511:21:17"],"nodeType":"IdentifierPath","referencedDeclaration":2531,"src":"2511:21:17"},"nodeType":"ModifierInvocation","src":"2511:46:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"vrfCoordinatorV2Address","nameLocation":"2393:23:17","nodeType":"VariableDeclaration","scope":3658,"src":"2385:31:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"2385:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3619,"mutability":"mutable","name":"subscriptionId","nameLocation":"2434:14:17","nodeType":"VariableDeclaration","scope":3658,"src":"2426:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2426:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3621,"mutability":"mutable","name":"enteranceFee","nameLocation":"2466:12:17","nodeType":"VariableDeclaration","scope":3658,"src":"2458:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"interval","nameLocation":"2496:8:17","nodeType":"VariableDeclaration","scope":3658,"src":"2488:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2488:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2375:135:17"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[],"src":"2558:0:17"},"scope":3990,"src":"2364:474:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3694,"nodeType":"Block","src":"2902:290:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2916:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2920:5:17","memberName":"value","nodeType":"MemberAccess","src":"2916:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3663,"name":"i_enteranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"2928:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2916:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3669,"nodeType":"IfStatement","src":"2912:93:17","trueBody":{"id":3668,"nodeType":"Block","src":"2944:61:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3665,"name":"Raffel__notEnoughEthEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"2965:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2965:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3667,"nodeType":"RevertStatement","src":"2958:36:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3670,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"3018:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3671,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"3035:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$3553_$","typeString":"type(enum Raffel.RaffelState)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3047:4:17","memberName":"open","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"3035:16:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"src":"3018:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3678,"nodeType":"IfStatement","src":"3014:88:17","trueBody":{"id":3677,"nodeType":"Block","src":"3053:49:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3674,"name":"Raffel__NotOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"3074:15:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3074:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3676,"nodeType":"RevertStatement","src":"3067:24:17"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3684,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3134:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3138:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3134:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3126:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3682,"name":"address","nodeType":"ElementaryTypeName","src":"3126:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3126:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":3679,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"3111:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3121:4:17","memberName":"push","nodeType":"MemberAccess","src":"3111:14:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3111:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3688,"nodeType":"ExpressionStatement","src":"3111:35:17"},{"eventCall":{"arguments":[{"expression":{"id":3690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3174:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3178:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3174:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3689,"name":"raffelEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"3162:11:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3162:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3693,"nodeType":"EmitStatement","src":"3157:28:17"}]},"functionSelector":"0ff19fd7","id":3695,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffel","nameLocation":"2873:11:17","nodeType":"FunctionDefinition","parameters":{"id":3659,"nodeType":"ParameterList","parameters":[],"src":"2884:2:17"},"returnParameters":{"id":3660,"nodeType":"ParameterList","parameters":[],"src":"2902:0:17"},"scope":3990,"src":"2864:328:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[60],"body":{"id":3759,"nodeType":"Block","src":"3569:367:17","statements":[{"assignments":[3707],"declarations":[{"constant":false,"id":3707,"mutability":"mutable","name":"isOpen","nameLocation":"3584:6:17","nodeType":"VariableDeclaration","scope":3759,"src":"3579:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3706,"name":"bool","nodeType":"ElementaryTypeName","src":"3579:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3713,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"3594:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3709,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"3611:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$3553_$","typeString":"type(enum Raffel.RaffelState)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3623:4:17","memberName":"open","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"3611:16:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"src":"3594:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3593:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3579:49:17"},{"assignments":[3715],"declarations":[{"constant":false,"id":3715,"mutability":"mutable","name":"isTimePassed","nameLocation":"3643:12:17","nodeType":"VariableDeclaration","scope":3759,"src":"3638:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3714,"name":"bool","nodeType":"ElementaryTypeName","src":"3638:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3724,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3716,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3660:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3666:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"3660:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3718,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"3678:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3660:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3659:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3721,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"3697:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3659:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3658:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3638:70:17"},{"assignments":[3726],"declarations":[{"constant":false,"id":3726,"mutability":"mutable","name":"hasPlayers","nameLocation":"3723:10:17","nodeType":"VariableDeclaration","scope":3759,"src":"3718:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3725,"name":"bool","nodeType":"ElementaryTypeName","src":"3718:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3732,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3727,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"3737:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3747:6:17","memberName":"length","nodeType":"MemberAccess","src":"3737:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3756:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3737:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3736:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3718:40:17"},{"assignments":[3734],"declarations":[{"constant":false,"id":3734,"mutability":"mutable","name":"hasBalance","nameLocation":"3773:10:17","nodeType":"VariableDeclaration","scope":3759,"src":"3768:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3733,"name":"bool","nodeType":"ElementaryTypeName","src":"3768:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3743,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3737,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3795:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Raffel_$3990","typeString":"contract Raffel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffel_$3990","typeString":"contract Raffel"}],"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3787:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3735,"name":"address","nodeType":"ElementaryTypeName","src":"3787:7:17","typeDescriptions":{}}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3787:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3801:7:17","memberName":"balance","nodeType":"MemberAccess","src":"3787:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3811:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3787:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3786:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3768:45:17"},{"expression":{"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3744,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"3824:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"3840:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3746,"name":"isTimePassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"3850:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3840:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3748,"name":"hasPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"3866:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3840:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3750,"name":"hasBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"3880:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3840:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3839:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3824:67:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3754,"nodeType":"ExpressionStatement","src":"3824:67:17"},{"expression":{"components":[{"id":3755,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"3909:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"307830","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3923:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810","typeString":"literal_string \"0x0\""},"value":"0x0"}],"id":3757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3908:21:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_$","typeString":"tuple(bool,literal_string \"0x0\")"}},"functionReturnParameters":3705,"id":3758,"nodeType":"Return","src":"3901:28:17"}]},"documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"3198:224:17","text":" @dev\n  check upkeep for the function  to return upkeepNeeded  true\n  time interval should be passed\n  atleast 1 player\n  subscription funded with link\n  lottery should be open"},"functionSelector":"6e04ff0d","id":3760,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"3437:11:17","nodeType":"FunctionDefinition","overrides":{"id":3700,"nodeType":"OverrideSpecifier","overrides":[],"src":"3500:8:17"},"parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3760,"src":"3458:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3697,"name":"bytes","nodeType":"ElementaryTypeName","src":"3458:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3448:44:17"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"3523:12:17","nodeType":"VariableDeclaration","scope":3760,"src":"3518:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3701,"name":"bool","nodeType":"ElementaryTypeName","src":"3518:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3760,"src":"3537:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3703,"name":"bytes","nodeType":"ElementaryTypeName","src":"3537:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3517:51:17"},"scope":3990,"src":"3428:508:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[66],"body":{"id":3790,"nodeType":"Block","src":"4012:314:17","statements":[{"assignments":[3767,null],"declarations":[{"constant":false,"id":3767,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"4076:12:17","nodeType":"VariableDeclaration","scope":3790,"src":"4071:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3766,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"documentation":"performupkeep function with this ","id":3771,"initialValue":{"arguments":[{"hexValue":"","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4106:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3768,"name":"checkUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"4094:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4094:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4070:39:17"},{"condition":{"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4123:13:17","subExpression":{"id":3772,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4124:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3789,"nodeType":"IfStatement","src":"4119:201:17","trueBody":{"id":3788,"nodeType":"Block","src":"4138:182:17","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3777,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4208:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Raffel_$3990","typeString":"contract Raffel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffel_$3990","typeString":"contract Raffel"}],"id":3776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4200:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3775,"name":"address","nodeType":"ElementaryTypeName","src":"4200:7:17","typeDescriptions":{}}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4200:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4214:7:17","memberName":"balance","nodeType":"MemberAccess","src":"4200:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3780,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"4239:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4249:6:17","memberName":"length","nodeType":"MemberAccess","src":"4239:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3784,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"4281:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}],"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4273:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"4273:7:17","typeDescriptions":{}}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3774,"name":"Raffel__upKeepNotNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"4159:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4159:150:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3787,"nodeType":"RevertStatement","src":"4152:157:17"}]}}]},"functionSelector":"4585e33b","id":3791,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"3951:13:17","nodeType":"FunctionDefinition","overrides":{"id":3764,"nodeType":"OverrideSpecifier","overrides":[],"src":"4003:8:17"},"parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3791,"src":"3965:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3761,"name":"bytes","nodeType":"ElementaryTypeName","src":"3965:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3964:31:17"},"returnParameters":{"id":3765,"nodeType":"ParameterList","parameters":[],"src":"4012:0:17"},"scope":3990,"src":"3942:384:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3854,"nodeType":"Block","src":"4424:872:17","statements":[{"expression":{"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3798,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"4434:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3799,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"4450:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$3553_$","typeString":"type(enum Raffel.RaffelState)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4462:11:17","memberName":"calculating","nodeType":"MemberAccess","referencedDeclaration":3552,"src":"4450:23:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"src":"4434:39:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"id":3802,"nodeType":"ExpressionStatement","src":"4434:39:17"},{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3803,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"4483:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3808,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"4606:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3809,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"4638:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3810,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"4694:20:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3811,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"4750:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3812,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"4794:8:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"arguments":[{"id":3817,"name":"enableNativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"4925:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3815,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4881:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2694_$","typeString":"type(library VRFV2PlusClient)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4897:11:17","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"4881:27:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2665_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4910:13:17"],"names":["nativePayment"],"nodeType":"FunctionCall","src":"4881:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExtraArgsV1_$2665_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":3813,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4831:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2694_$","typeString":"type(library VRFV2PlusClient)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4847:12:17","memberName":"_argsToBytes","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"4831:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ExtraArgsV1_$2665_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4831:133:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3806,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4544:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2694_$","typeString":"type(library VRFV2PlusClient)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4560:18:17","memberName":"RandomWordsRequest","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"4544:34:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RandomWordsRequest_$2678_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.RandomWordsRequest storage pointer)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4597:7:17","4631:5:17","4672:20:17","4732:16:17","4784:8:17","4820:9:17"],"names":["keyHash","subId","requestConfirmations","callbackGasLimit","numWords","extraArgs"],"nodeType":"FunctionCall","src":"4544:435:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RandomWordsRequest_$2678_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}],"expression":{"id":3804,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"4495:16:17","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2549","typeString":"contract IVRFCoordinatorV2Plus"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4512:18:17","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"4495:35:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_RandomWordsRequest_$2678_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VRFV2PlusClient.RandomWordsRequest memory) external returns (uint256)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4495:494:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:506:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3823,"nodeType":"ExpressionStatement","src":"4483:506:17"},{"expression":{"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3824,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"4999:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$3566_storage_$","typeString":"mapping(uint256 => struct Raffel.RequestStatus storage ref)"}},"id":3826,"indexExpression":{"id":3825,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"5010:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4999:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$3566_storage","typeString":"struct Raffel.RequestStatus storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"30","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5078:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5064:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5068:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3829,"nodeType":"ArrayTypeName","src":"5068:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5064:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"74727565","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5102:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5131:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3827,"name":"RequestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"5023:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RequestStatus_$3566_storage_ptr_$","typeString":"type(struct Raffel.RequestStatus storage pointer)"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5051:11:17","5094:6:17","5120:9:17"],"names":["randomWords","exists","fulfilled"],"nodeType":"FunctionCall","src":"5023:124:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$3566_memory_ptr","typeString":"struct Raffel.RequestStatus memory"}},"src":"4999:148:17","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$3566_storage","typeString":"struct Raffel.RequestStatus storage ref"}},"id":3837,"nodeType":"ExpressionStatement","src":"4999:148:17"},{"expression":{"arguments":[{"id":3841,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"5173:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3838,"name":"requestIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"5157:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5168:4:17","memberName":"push","nodeType":"MemberAccess","src":"5157:15:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3843,"nodeType":"ExpressionStatement","src":"5157:26:17"},{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"lastRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"5193:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3845,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"5209:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5193:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3847,"nodeType":"ExpressionStatement","src":"5193:25:17"},{"eventCall":{"arguments":[{"id":3849,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"5253:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3848,"name":"winnerRandomRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"5233:19:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5233:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3851,"nodeType":"EmitStatement","src":"5228:35:17"},{"expression":{"id":3852,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"5280:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3797,"id":3853,"nodeType":"Return","src":"5273:16:17"}]},"functionSelector":"9d52d89d","id":3855,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomWinner","nameLocation":"4341:19:17","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"enableNativePayment","nameLocation":"4366:19:17","nodeType":"VariableDeclaration","scope":3855,"src":"4361:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3792,"name":"bool","nodeType":"ElementaryTypeName","src":"4361:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4360:26:17"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"requestId","nameLocation":"4413:9:17","nodeType":"VariableDeclaration","scope":3855,"src":"4405:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4405:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4404:19:17"},"scope":3990,"src":"4332:964:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2437],"body":{"id":3925,"nodeType":"Block","src":"5426:510:17","statements":[{"assignments":[3865],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"indexOfWinner","nameLocation":"5444:13:17","nodeType":"VariableDeclaration","scope":3925,"src":"5436:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"5436:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3872,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3866,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"5460:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3868,"indexExpression":{"hexValue":"30","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5472:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5460:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":3869,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"5477:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5487:6:17","memberName":"length","nodeType":"MemberAccess","src":"5477:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5460:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5436:57:17"},{"assignments":[3874],"declarations":[{"constant":false,"id":3874,"mutability":"mutable","name":"recentWinner","nameLocation":"5519:12:17","nodeType":"VariableDeclaration","scope":3925,"src":"5503:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3873,"name":"address","nodeType":"ElementaryTypeName","src":"5503:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":3878,"initialValue":{"baseExpression":{"id":3875,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"5534:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3877,"indexExpression":{"id":3876,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"5544:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5534:24:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"5503:55:17"},{"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3879,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"5568:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3880,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"5585:12:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5568:29:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3882,"nodeType":"ExpressionStatement","src":"5568:29:17"},{"expression":{"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3883,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"5607:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3884,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"5623:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$3553_$","typeString":"type(enum Raffel.RaffelState)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5635:4:17","memberName":"open","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"5623:16:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"src":"5607:32:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"id":3887,"nodeType":"ExpressionStatement","src":"5607:32:17"},{"expression":{"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3888,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"5649:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5683:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5661:21:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":3889,"name":"address","nodeType":"ElementaryTypeName","src":"5665:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3890,"nodeType":"ArrayTypeName","src":"5665:17:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5661:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"5649:36:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3895,"nodeType":"ExpressionStatement","src":"5649:36:17"},{"expression":{"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3896,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"5695:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3897,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5713:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5719:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"5713:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5695:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3900,"nodeType":"ExpressionStatement","src":"5695:33:17"},{"assignments":[3902,null],"declarations":[{"constant":false,"id":3902,"mutability":"mutable","name":"success","nameLocation":"5745:7:17","nodeType":"VariableDeclaration","scope":3925,"src":"5740:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3901,"name":"bool","nodeType":"ElementaryTypeName","src":"5740:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3913,"initialValue":{"arguments":[{"hexValue":"","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5806:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3903,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"5758:12:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5771:4:17","memberName":"call","nodeType":"MemberAccess","src":"5758:17:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":3907,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5791:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Raffel_$3990","typeString":"contract Raffel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffel_$3990","typeString":"contract Raffel"}],"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5783:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3905,"name":"address","nodeType":"ElementaryTypeName","src":"5783:7:17","typeDescriptions":{}}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5783:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5797:7:17","memberName":"balance","nodeType":"MemberAccess","src":"5783:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5758:47:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5758:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5739:70:17"},{"condition":{"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5823:8:17","subExpression":{"id":3914,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"5824:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3920,"nodeType":"IfStatement","src":"5819:70:17","trueBody":{"id":3919,"nodeType":"Block","src":"5833:56:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3916,"name":"Raffel__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"5854:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5854:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3918,"nodeType":"RevertStatement","src":"5847:31:17"}]}},{"eventCall":{"arguments":[{"id":3922,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"5916:12:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":3921,"name":"winnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"5903:12:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5903:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3924,"nodeType":"EmitStatement","src":"5898:31:17"}]},"id":3926,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"5311:18:17","nodeType":"FunctionDefinition","overrides":{"id":3862,"nodeType":"OverrideSpecifier","overrides":[],"src":"5417:8:17"},"parameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3926,"src":"5339:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"randomWords","nameLocation":"5390:11:17","nodeType":"VariableDeclaration","scope":3926,"src":"5371:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"5371:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3859,"nodeType":"ArrayTypeName","src":"5371:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5329:78:17"},"returnParameters":{"id":3863,"nodeType":"ParameterList","parameters":[],"src":"5426:0:17"},"scope":3990,"src":"5302:634:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3934,"nodeType":"Block","src":"6033:38:17","statements":[{"expression":{"id":3932,"name":"i_enteranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"6050:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3931,"id":3933,"nodeType":"Return","src":"6043:21:17"}]},"documentation":{"id":3927,"nodeType":"StructuredDocumentation","src":"5942:28:17","text":"view / pure functions "},"functionSelector":"535bf50f","id":3935,"implemented":true,"kind":"function","modifiers":[],"name":"getEnteranceFee","nameLocation":"5985:15:17","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[],"src":"6000:2:17"},"returnParameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3935,"src":"6024:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"6024:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6023:9:17"},"scope":3990,"src":"5976:95:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3946,"nodeType":"Block","src":"6142:40:17","statements":[{"expression":{"baseExpression":{"id":3942,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"6159:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3944,"indexExpression":{"id":3943,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"6169:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6159:16:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":3941,"id":3945,"nodeType":"Return","src":"6152:23:17"}]},"functionSelector":"460e2049","id":3947,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayers","nameLocation":"6086:10:17","nodeType":"FunctionDefinition","parameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"mutability":"mutable","name":"index","nameLocation":"6105:5:17","nodeType":"VariableDeclaration","scope":3947,"src":"6097:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"6097:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6096:15:17"},"returnParameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3947,"src":"6133:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"6133:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6132:9:17"},"scope":3990,"src":"6077:105:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3954,"nodeType":"Block","src":"6245:38:17","statements":[{"expression":{"id":3952,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"6262:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3951,"id":3953,"nodeType":"Return","src":"6255:21:17"}]},"functionSelector":"473f1ddc","id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinner","nameLocation":"6197:15:17","nodeType":"FunctionDefinition","parameters":{"id":3948,"nodeType":"ParameterList","parameters":[],"src":"6212:2:17"},"returnParameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"6236:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3949,"name":"address","nodeType":"ElementaryTypeName","src":"6236:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6235:9:17"},"scope":3990,"src":"6188:95:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3963,"nodeType":"Block","src":"6349:37:17","statements":[{"expression":{"id":3961,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"6366:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"functionReturnParameters":3960,"id":3962,"nodeType":"Return","src":"6359:20:17"}]},"functionSelector":"8a78da41","id":3964,"implemented":true,"kind":"function","modifiers":[],"name":"getRaffelState","nameLocation":"6298:14:17","nodeType":"FunctionDefinition","parameters":{"id":3956,"nodeType":"ParameterList","parameters":[],"src":"6312:2:17"},"returnParameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3964,"src":"6336:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"},"typeName":{"id":3958,"nodeType":"UserDefinedTypeName","pathNode":{"id":3957,"name":"RaffelState","nameLocations":["6336:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3553,"src":"6336:11:17"},"referencedDeclaration":3553,"src":"6336:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$3553","typeString":"enum Raffel.RaffelState"}},"visibility":"internal"}],"src":"6335:13:17"},"scope":3990,"src":"6289:97:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3972,"nodeType":"Block","src":"6452:40:17","statements":[{"expression":{"expression":{"id":3969,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"6469:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6479:6:17","memberName":"length","nodeType":"MemberAccess","src":"6469:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3968,"id":3971,"nodeType":"Return","src":"6462:23:17"}]},"functionSelector":"fd6673f5","id":3973,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfPlayers","nameLocation":"6401:18:17","nodeType":"FunctionDefinition","parameters":{"id":3965,"nodeType":"ParameterList","parameters":[],"src":"6419:2:17"},"returnParameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"6443:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"6443:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6442:9:17"},"scope":3990,"src":"6392:100:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3980,"nodeType":"Block","src":"6558:39:17","statements":[{"expression":{"id":3978,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"6575:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3977,"id":3979,"nodeType":"Return","src":"6568:22:17"}]},"functionSelector":"320229eb","id":3981,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestTimeStamp","nameLocation":"6507:18:17","nodeType":"FunctionDefinition","parameters":{"id":3974,"nodeType":"ParameterList","parameters":[],"src":"6525:2:17"},"returnParameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3981,"src":"6549:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"6549:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6548:9:17"},"scope":3990,"src":"6498:99:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3988,"nodeType":"Block","src":"6656:34:17","statements":[{"expression":{"id":3986,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"6673:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3985,"id":3987,"nodeType":"Return","src":"6666:17:17"}]},"functionSelector":"91ad27b4","id":3989,"implemented":true,"kind":"function","modifiers":[],"name":"getInterval","nameLocation":"6612:11:17","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[],"src":"6623:2:17"},"returnParameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3989,"src":"6647:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"6647:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6646:9:17"},"scope":3990,"src":"6603:87:17","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3991,"src":"974:5718:17","usedErrors":[2387,2395,2397,3534,3536,3538,3546]}],"src":"256:6437:17"},"id":17},"contracts/VRFCoordinatorV2_5Mock.sol":{"ast":{"absolutePath":"contracts/VRFCoordinatorV2_5Mock.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2549],"IVRFSubscriptionV2Plus":[2652],"SubscriptionAPI":[2368],"VRFConsumerBaseV2Plus":[2531],"VRFCoordinatorV2_5Mock":[3522],"VRFV2PlusClient":[2694]},"id":3994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3992,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","file":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","id":3993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3994,"sourceUnit":3523,"src":"57:76:18","symbolAliases":[],"unitAlias":""}],"src":"32:102:18"},"id":18}},"contracts":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"AutomationBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122092fa31c9d07a18f6f0eb5ade3dc224c4bad43bb8162b5d86b601e0422b304ef064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 STATICCALL BALANCE 0xC9 0xD0 PUSH27 0x18F6F0EB5ADE3DC224C4BAD43BB8162B5D86B601E0422B304EF064 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"57:634:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122092fa31c9d07a18f6f0eb5ade3dc224c4bad43bb8162b5d86b601e0422b304ef064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 STATICCALL BALANCE 0xC9 0xD0 PUSH27 0x18F6F0EB5ADE3DC224C4BAD43BB8162B5D86B601E0422B304EF064 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"57:634:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"_preventExecution()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function _preventExecution() internal view {\\n    // solhint-disable-next-line avoid-tx-origin\\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    _preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"AutomationCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function _preventExecution() internal view {\\n    // solhint-disable-next-line avoid-tx-origin\\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    _preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {AutomationBase} from \\\"./AutomationBase.sol\\\";\\nimport {AutomationCompatibleInterface} from \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_145":{"entryPoint":null,"id":145,"parameterSlots":2,"returnSlots":0},"@_87":{"entryPoint":null,"id":87,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_229":{"entryPoint":197,"id":229,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1011:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:19","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:19"},"nodeType":"YulFunctionCall","src":"143:12:19"},"nodeType":"YulExpressionStatement","src":"143:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:19"},"nodeType":"YulFunctionCall","src":"112:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:19"},"nodeType":"YulFunctionCall","src":"108:32:19"},"nodeType":"YulIf","src":"105:52:19"},{"nodeType":"YulVariableDeclaration","src":"166:29:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:19"},"nodeType":"YulFunctionCall","src":"179:16:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:19"},"nodeType":"YulFunctionCall","src":"260:12:19"},"nodeType":"YulExpressionStatement","src":"260:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:19"},"nodeType":"YulFunctionCall","src":"239:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:19"},"nodeType":"YulFunctionCall","src":"235:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:19"},"nodeType":"YulFunctionCall","src":"224:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:19"},"nodeType":"YulFunctionCall","src":"214:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:19"},"nodeType":"YulFunctionCall","src":"207:50:19"},"nodeType":"YulIf","src":"204:70:19"},{"nodeType":"YulAssignment","src":"283:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:19"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:19","type":""}],"src":"14:290:19"},{"body":{"nodeType":"YulBlock","src":"483:174:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"511:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"493:6:19"},"nodeType":"YulFunctionCall","src":"493:21:19"},"nodeType":"YulExpressionStatement","src":"493:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"545:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"530:3:19"},"nodeType":"YulFunctionCall","src":"530:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:19","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"523:6:19"},"nodeType":"YulFunctionCall","src":"523:30:19"},"nodeType":"YulExpressionStatement","src":"523:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"573:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"584:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"569:3:19"},"nodeType":"YulFunctionCall","src":"569:18:19"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"589:26:19","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:19"},"nodeType":"YulFunctionCall","src":"562:54:19"},"nodeType":"YulExpressionStatement","src":"562:54:19"},{"nodeType":"YulAssignment","src":"625:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"637:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"648:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"633:3:19"},"nodeType":"YulFunctionCall","src":"633:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"625:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"460:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"474:4:19","type":""}],"src":"309:348:19"},{"body":{"nodeType":"YulBlock","src":"836:173:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"864:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"846:6:19"},"nodeType":"YulFunctionCall","src":"846:21:19"},"nodeType":"YulExpressionStatement","src":"846:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"887:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"898:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"883:3:19"},"nodeType":"YulFunctionCall","src":"883:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"903:2:19","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"876:6:19"},"nodeType":"YulFunctionCall","src":"876:30:19"},"nodeType":"YulExpressionStatement","src":"876:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"926:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"937:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"922:3:19"},"nodeType":"YulFunctionCall","src":"922:18:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"942:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"915:6:19"},"nodeType":"YulFunctionCall","src":"915:53:19"},"nodeType":"YulExpressionStatement","src":"915:53:19"},{"nodeType":"YulAssignment","src":"977:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"989:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1000:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"985:3:19"},"nodeType":"YulFunctionCall","src":"985:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"977:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"813:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"827:4:19","type":""}],"src":"662:347:19"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161045638038061045683398101604081905261002f9161016e565b8060006001600160a01b03821661008d5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100bd576100bd816100c5565b50505061019e565b336001600160a01b0382160361011d5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610084565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561018057600080fd5b81516001600160a01b038116811461019757600080fd5b9392505050565b6102a9806101ad6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212202123d46233f32a645d394c43791ec9a348a105c264798af50c5069d99528ea2564736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x456 CODESIZE SUB DUP1 PUSH2 0x456 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x16E JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xBD JUMPI PUSH2 0xBD DUP2 PUSH2 0xC5 JUMP JUMPDEST POP POP POP PUSH2 0x19E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x11D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x84 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2A9 DUP1 PUSH2 0x1AD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x23 0xD4 PUSH3 0x33F32A PUSH5 0x5D394C4379 0x1E 0xC9 LOG3 BASEFEE LOG1 SDIV 0xC2 PUSH5 0x798AF50C50 PUSH10 0xD99528EA2564736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"240:141:3:-:0;;;298:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;355:8;373:1;-1:-1:-1;;;;;598:22:4;;590:59;;;;-1:-1:-1;;;590:59:4;;511:2:19;590:59:4;;;493:21:19;550:2;530:18;;;523:30;589:26;569:18;;;562:54;633:18;;590:59:4;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:4;-1:-1:-1;;;;;656:18:4;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;481:282;;298:81:3;240:141;;1536:239:4;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;864:2:19;1641:52:4;;;846:21:19;903:2;883:18;;;876:30;942:25;922:18;;;915:53;985:18;;1641:52:4;662:347:19;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;14:290:19:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:19;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:19:o;662:347::-;240:141:3;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_229":{"entryPoint":410,"id":229,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_242":{"entryPoint":325,"id":242,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_195":{"entryPoint":130,"id":195,"parameterSlots":0,"returnSlots":0},"@owner_205":{"entryPoint":null,"id":205,"parameterSlots":0,"returnSlots":1},"@transferOwnership_159":{"entryPoint":305,"id":159,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":579,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1564:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:19","statements":[{"nodeType":"YulAssignment","src":"125:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:19"},"nodeType":"YulFunctionCall","src":"133:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:19"},"nodeType":"YulFunctionCall","src":"194:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:19"},"nodeType":"YulFunctionCall","src":"190:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:19"},"nodeType":"YulFunctionCall","src":"178:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:19"},"nodeType":"YulFunctionCall","src":"160:51:19"},"nodeType":"YulExpressionStatement","src":"160:51:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:19","type":""}],"src":"14:203:19"},{"body":{"nodeType":"YulBlock","src":"292:216:19","statements":[{"body":{"nodeType":"YulBlock","src":"338:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"347:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"350:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"340:6:19"},"nodeType":"YulFunctionCall","src":"340:12:19"},"nodeType":"YulExpressionStatement","src":"340:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"313:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"309:3:19"},"nodeType":"YulFunctionCall","src":"309:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"334:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"305:3:19"},"nodeType":"YulFunctionCall","src":"305:32:19"},"nodeType":"YulIf","src":"302:52:19"},{"nodeType":"YulVariableDeclaration","src":"363:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"376:12:19"},"nodeType":"YulFunctionCall","src":"376:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"367:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"462:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"471:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"474:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"464:6:19"},"nodeType":"YulFunctionCall","src":"464:12:19"},"nodeType":"YulExpressionStatement","src":"464:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"421:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"432:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"447:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"443:3:19"},"nodeType":"YulFunctionCall","src":"443:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"456:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"439:3:19"},"nodeType":"YulFunctionCall","src":"439:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"428:3:19"},"nodeType":"YulFunctionCall","src":"428:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"418:2:19"},"nodeType":"YulFunctionCall","src":"418:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"411:6:19"},"nodeType":"YulFunctionCall","src":"411:50:19"},"nodeType":"YulIf","src":"408:70:19"},{"nodeType":"YulAssignment","src":"487:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"497:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"487:6:19"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"258:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"269:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"281:6:19","type":""}],"src":"222:286:19"},{"body":{"nodeType":"YulBlock","src":"687:172:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"704:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"715:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"697:6:19"},"nodeType":"YulFunctionCall","src":"697:21:19"},"nodeType":"YulExpressionStatement","src":"697:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"749:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"734:3:19"},"nodeType":"YulFunctionCall","src":"734:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"754:2:19","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"727:6:19"},"nodeType":"YulFunctionCall","src":"727:30:19"},"nodeType":"YulExpressionStatement","src":"727:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"777:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:19"},"nodeType":"YulFunctionCall","src":"773:18:19"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"793:24:19","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"766:6:19"},"nodeType":"YulFunctionCall","src":"766:52:19"},"nodeType":"YulExpressionStatement","src":"766:52:19"},{"nodeType":"YulAssignment","src":"827:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"839:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"850:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:19"},"nodeType":"YulFunctionCall","src":"835:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"827:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"678:4:19","type":""}],"src":"513:346:19"},{"body":{"nodeType":"YulBlock","src":"1038:172:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1055:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1066:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1048:6:19"},"nodeType":"YulFunctionCall","src":"1048:21:19"},"nodeType":"YulExpressionStatement","src":"1048:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1089:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1100:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1085:3:19"},"nodeType":"YulFunctionCall","src":"1085:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"1105:2:19","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1078:6:19"},"nodeType":"YulFunctionCall","src":"1078:30:19"},"nodeType":"YulExpressionStatement","src":"1078:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1128:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1139:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1124:3:19"},"nodeType":"YulFunctionCall","src":"1124:18:19"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1144:24:19","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1117:6:19"},"nodeType":"YulFunctionCall","src":"1117:52:19"},"nodeType":"YulExpressionStatement","src":"1117:52:19"},{"nodeType":"YulAssignment","src":"1178:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1190:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1201:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1186:3:19"},"nodeType":"YulFunctionCall","src":"1186:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1178:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1015:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1029:4:19","type":""}],"src":"864:346:19"},{"body":{"nodeType":"YulBlock","src":"1389:173:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1406:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1417:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1399:6:19"},"nodeType":"YulFunctionCall","src":"1399:21:19"},"nodeType":"YulExpressionStatement","src":"1399:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1440:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1451:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1436:3:19"},"nodeType":"YulFunctionCall","src":"1436:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"1456:2:19","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1429:6:19"},"nodeType":"YulFunctionCall","src":"1429:30:19"},"nodeType":"YulExpressionStatement","src":"1429:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1479:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1490:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1475:3:19"},"nodeType":"YulFunctionCall","src":"1475:18:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"1495:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1468:6:19"},"nodeType":"YulFunctionCall","src":"1468:53:19"},"nodeType":"YulExpressionStatement","src":"1468:53:19"},{"nodeType":"YulAssignment","src":"1530:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1542:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1553:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1538:3:19"},"nodeType":"YulFunctionCall","src":"1538:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1530:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1380:4:19","type":""}],"src":"1215:347:19"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212202123d46233f32a645d394c43791ec9a348a105c264798af50c5069d99528ea2564736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x23 0xD4 PUSH3 0x33F32A PUSH5 0x5D394C4379 0x1E 0xC9 LOG3 BASEFEE LOG1 SDIV 0xC2 PUSH5 0x798AF50C50 PUSH10 0xD99528EA2564736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"240:141:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316:4;;;:::i;:::-;;1382:81;1429:7;1451;1382:81;;;-1:-1:-1;;;;;1451:7:4;;;160:51:19;;1382:81:4;;;;;148:2:19;1382:81:4;;;847:98;;;;;;:::i;:::-;;:::i;1026:316::-;1150:14;;-1:-1:-1;;;;;1150:14:4;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:4;;715:2:19;1128:63:4;;;697:21:19;754:2;734:18;;;727:30;-1:-1:-1;;;773:18:19;;;766:52;835:18;;1128:63:4;;;;;;;;;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:4;;;;;;;-1:-1:-1;1256:27:4;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:4;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;-1:-1:-1;;;;;1932:7:4;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:4;;1066:2:19;1910:56:4;;;1048:21:19;1105:2;1085:18;;;1078:30;-1:-1:-1;;;1124:18:19;;;1117:52;1186:18;;1910:56:4;864:346:19;1910:56:4;1809:162::o;1536:239::-;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;1417:2:19;1641:52:4;;;1399:21:19;1456:2;1436:18;;;1429:30;1495:25;1475:18;;;1468:53;1538:18;;1641:52:4;1215:347:19;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;222:286:19:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:19;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:19:o"},"gasEstimates":{"creation":{"codeDepositCost":"136200","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"52277","owner()":"2292","transferOwnership(address)":"30423"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":97,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":99,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_145":{"entryPoint":null,"id":145,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_229":{"entryPoint":193,"id":229,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":362,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":390,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1196:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:19","statements":[{"nodeType":"YulAssignment","src":"84:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:19"},"nodeType":"YulFunctionCall","src":"93:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:19"}]},{"body":{"nodeType":"YulBlock","src":"169:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:19"},"nodeType":"YulFunctionCall","src":"171:12:19"},"nodeType":"YulExpressionStatement","src":"171:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:19"},"nodeType":"YulFunctionCall","src":"150:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:19"},"nodeType":"YulFunctionCall","src":"146:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:19"},"nodeType":"YulFunctionCall","src":"135:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:19"},"nodeType":"YulFunctionCall","src":"125:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:19"},"nodeType":"YulFunctionCall","src":"118:50:19"},"nodeType":"YulIf","src":"115:70:19"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:19","type":""}],"src":"14:177:19"},{"body":{"nodeType":"YulBlock","src":"294:195:19","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:19"},"nodeType":"YulFunctionCall","src":"342:12:19"},"nodeType":"YulExpressionStatement","src":"342:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:19"},"nodeType":"YulFunctionCall","src":"311:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:19"},"nodeType":"YulFunctionCall","src":"307:32:19"},"nodeType":"YulIf","src":"304:52:19"},{"nodeType":"YulAssignment","src":"365:50:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:19"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:19"},"nodeType":"YulFunctionCall","src":"375:40:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:19"}]},{"nodeType":"YulAssignment","src":"424:59:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:19"},"nodeType":"YulFunctionCall","src":"464:18:19"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:19"},"nodeType":"YulFunctionCall","src":"434:49:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:19","type":""}],"src":"196:293:19"},{"body":{"nodeType":"YulBlock","src":"668:174:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"685:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"696:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"678:6:19"},"nodeType":"YulFunctionCall","src":"678:21:19"},"nodeType":"YulExpressionStatement","src":"678:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"719:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"730:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"715:3:19"},"nodeType":"YulFunctionCall","src":"715:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:19","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"708:6:19"},"nodeType":"YulFunctionCall","src":"708:30:19"},"nodeType":"YulExpressionStatement","src":"708:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:19"},"nodeType":"YulFunctionCall","src":"754:18:19"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"774:26:19","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"747:6:19"},"nodeType":"YulFunctionCall","src":"747:54:19"},"nodeType":"YulExpressionStatement","src":"747:54:19"},{"nodeType":"YulAssignment","src":"810:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"822:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"833:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"818:3:19"},"nodeType":"YulFunctionCall","src":"818:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"810:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"645:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"659:4:19","type":""}],"src":"494:348:19"},{"body":{"nodeType":"YulBlock","src":"1021:173:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1038:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1031:6:19"},"nodeType":"YulFunctionCall","src":"1031:21:19"},"nodeType":"YulExpressionStatement","src":"1031:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1072:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1083:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1068:3:19"},"nodeType":"YulFunctionCall","src":"1068:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"1088:2:19","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1061:6:19"},"nodeType":"YulFunctionCall","src":"1061:30:19"},"nodeType":"YulExpressionStatement","src":"1061:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1111:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1122:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1107:3:19"},"nodeType":"YulFunctionCall","src":"1107:18:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"1127:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1100:6:19"},"nodeType":"YulFunctionCall","src":"1100:53:19"},"nodeType":"YulExpressionStatement","src":"1100:53:19"},{"nodeType":"YulAssignment","src":"1162:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1185:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:19"},"nodeType":"YulFunctionCall","src":"1170:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1162:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"998:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1012:4:19","type":""}],"src":"847:347:19"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161047138038061047183398101604081905261002f91610186565b6001600160a01b03821661008a5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100ba576100ba816100c1565b50506101b9565b336001600160a01b038216036101195760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610081565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160a01b038116811461018157600080fd5b919050565b6000806040838503121561019957600080fd5b6101a28361016a565b91506101b06020840161016a565b90509250929050565b6102a9806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea264697066735822122000191f44d972820f011dbc8c3483c4bf78363ffdb000bdc3c5997bd37fbea52064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x471 CODESIZE SUB DUP1 PUSH2 0x471 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xBA JUMPI PUSH2 0xBA DUP2 PUSH2 0xC1 JUMP JUMPDEST POP POP PUSH2 0x1B9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2 DUP4 PUSH2 0x16A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0 PUSH1 0x20 DUP5 ADD PUSH2 0x16A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A9 DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP NOT 0x1F PREVRANDAO 0xD9 PUSH19 0x820F011DBC8C3483C4BF78363FFDB000BDC3C5 SWAP10 PUSH28 0xD37FBEA52064736F6C63430008130033000000000000000000000000 ","sourceMap":"216:1893:4:-:0;;;481:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;598:22:4;;590:59;;;;-1:-1:-1;;;590:59:4;;696:2:19;590:59:4;;;678:21:19;735:2;715:18;;;708:30;774:26;754:18;;;747:54;818:18;;590:59:4;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:4;-1:-1:-1;;;;;656:18:4;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;481:282;;216:1893;;1536:239;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;1049:2:19;1641:52:4;;;1031:21:19;1088:2;1068:18;;;1061:30;1127:25;1107:18;;;1100:53;1170:18;;1641:52:4;847:347:19;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;14:177:19:-;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;847:347::-;216:1893:4;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_229":{"entryPoint":410,"id":229,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_242":{"entryPoint":325,"id":242,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_195":{"entryPoint":130,"id":195,"parameterSlots":0,"returnSlots":0},"@owner_205":{"entryPoint":null,"id":205,"parameterSlots":0,"returnSlots":1},"@transferOwnership_159":{"entryPoint":305,"id":159,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":579,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1564:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:19","statements":[{"nodeType":"YulAssignment","src":"125:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:19"},"nodeType":"YulFunctionCall","src":"133:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:19"},"nodeType":"YulFunctionCall","src":"194:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:19"},"nodeType":"YulFunctionCall","src":"190:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:19"},"nodeType":"YulFunctionCall","src":"178:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:19"},"nodeType":"YulFunctionCall","src":"160:51:19"},"nodeType":"YulExpressionStatement","src":"160:51:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:19","type":""}],"src":"14:203:19"},{"body":{"nodeType":"YulBlock","src":"292:216:19","statements":[{"body":{"nodeType":"YulBlock","src":"338:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"347:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"350:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"340:6:19"},"nodeType":"YulFunctionCall","src":"340:12:19"},"nodeType":"YulExpressionStatement","src":"340:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"313:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"309:3:19"},"nodeType":"YulFunctionCall","src":"309:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"334:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"305:3:19"},"nodeType":"YulFunctionCall","src":"305:32:19"},"nodeType":"YulIf","src":"302:52:19"},{"nodeType":"YulVariableDeclaration","src":"363:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"376:12:19"},"nodeType":"YulFunctionCall","src":"376:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"367:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"462:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"471:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"474:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"464:6:19"},"nodeType":"YulFunctionCall","src":"464:12:19"},"nodeType":"YulExpressionStatement","src":"464:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"421:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"432:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"447:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"443:3:19"},"nodeType":"YulFunctionCall","src":"443:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"456:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"439:3:19"},"nodeType":"YulFunctionCall","src":"439:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"428:3:19"},"nodeType":"YulFunctionCall","src":"428:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"418:2:19"},"nodeType":"YulFunctionCall","src":"418:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"411:6:19"},"nodeType":"YulFunctionCall","src":"411:50:19"},"nodeType":"YulIf","src":"408:70:19"},{"nodeType":"YulAssignment","src":"487:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"497:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"487:6:19"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"258:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"269:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"281:6:19","type":""}],"src":"222:286:19"},{"body":{"nodeType":"YulBlock","src":"687:172:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"704:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"715:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"697:6:19"},"nodeType":"YulFunctionCall","src":"697:21:19"},"nodeType":"YulExpressionStatement","src":"697:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"749:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"734:3:19"},"nodeType":"YulFunctionCall","src":"734:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"754:2:19","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"727:6:19"},"nodeType":"YulFunctionCall","src":"727:30:19"},"nodeType":"YulExpressionStatement","src":"727:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"777:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:19"},"nodeType":"YulFunctionCall","src":"773:18:19"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"793:24:19","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"766:6:19"},"nodeType":"YulFunctionCall","src":"766:52:19"},"nodeType":"YulExpressionStatement","src":"766:52:19"},{"nodeType":"YulAssignment","src":"827:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"839:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"850:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:19"},"nodeType":"YulFunctionCall","src":"835:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"827:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"678:4:19","type":""}],"src":"513:346:19"},{"body":{"nodeType":"YulBlock","src":"1038:172:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1055:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1066:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1048:6:19"},"nodeType":"YulFunctionCall","src":"1048:21:19"},"nodeType":"YulExpressionStatement","src":"1048:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1089:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1100:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1085:3:19"},"nodeType":"YulFunctionCall","src":"1085:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"1105:2:19","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1078:6:19"},"nodeType":"YulFunctionCall","src":"1078:30:19"},"nodeType":"YulExpressionStatement","src":"1078:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1128:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1139:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1124:3:19"},"nodeType":"YulFunctionCall","src":"1124:18:19"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1144:24:19","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1117:6:19"},"nodeType":"YulFunctionCall","src":"1117:52:19"},"nodeType":"YulExpressionStatement","src":"1117:52:19"},{"nodeType":"YulAssignment","src":"1178:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1190:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1201:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1186:3:19"},"nodeType":"YulFunctionCall","src":"1186:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1178:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1015:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1029:4:19","type":""}],"src":"864:346:19"},{"body":{"nodeType":"YulBlock","src":"1389:173:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1406:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1417:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1399:6:19"},"nodeType":"YulFunctionCall","src":"1399:21:19"},"nodeType":"YulExpressionStatement","src":"1399:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1440:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1451:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1436:3:19"},"nodeType":"YulFunctionCall","src":"1436:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"1456:2:19","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1429:6:19"},"nodeType":"YulFunctionCall","src":"1429:30:19"},"nodeType":"YulExpressionStatement","src":"1429:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1479:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1490:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1475:3:19"},"nodeType":"YulFunctionCall","src":"1475:18:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"1495:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1468:6:19"},"nodeType":"YulFunctionCall","src":"1468:53:19"},"nodeType":"YulExpressionStatement","src":"1468:53:19"},{"nodeType":"YulAssignment","src":"1530:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1542:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1553:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1538:3:19"},"nodeType":"YulFunctionCall","src":"1538:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1530:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1380:4:19","type":""}],"src":"1215:347:19"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea264697066735822122000191f44d972820f011dbc8c3483c4bf78363ffdb000bdc3c5997bd37fbea52064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP NOT 0x1F PREVRANDAO 0xD9 PUSH19 0x820F011DBC8C3483C4BF78363FFDB000BDC3C5 SWAP10 PUSH28 0xD37FBEA52064736F6C63430008130033000000000000000000000000 ","sourceMap":"216:1893:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316;;;:::i;:::-;;1382:81;1429:7;1451;1382:81;;;-1:-1:-1;;;;;1451:7:4;;;160:51:19;;1382:81:4;;;;;148:2:19;1382:81:4;;;847:98;;;;;;:::i;:::-;;:::i;1026:316::-;1150:14;;-1:-1:-1;;;;;1150:14:4;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:4;;715:2:19;1128:63:4;;;697:21:19;754:2;734:18;;;727:30;-1:-1:-1;;;773:18:19;;;766:52;835:18;;1128:63:4;;;;;;;;;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:4;;;;;;;-1:-1:-1;1256:27:4;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:4;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;-1:-1:-1;;;;;1932:7:4;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:4;;1066:2:19;1910:56:4;;;1048:21:19;1105:2;1085:18;;;1078:30;-1:-1:-1;;;1124:18:19;;;1117:52;1186:18;;1910:56:4;864:346:19;1910:56:4;1809:162::o;1536:239::-;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;1417:2:19;1641:52:4;;;1399:21:19;1456:2;1436:18;;;1429:30;1495:25;1475:18;;;1468:53;1538:18;;1641:52:4;1215:347:19;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;222:286:19:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:19;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:19:o"},"gasEstimates":{"creation":{"codeDepositCost":"136200","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"52277","owner()":"2292","transferOwnership(address)":"30423"},"internal":{"_transferOwnership(address)":"infinite","_validateOwnership()":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":97,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":99,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"IERC677Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onTokenTransfer(address,uint256,bytes)":"a4c0ed36"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":\"IERC677Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"IOwnable":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209294d7e1f3ad687804ba76a0f1600bfab3395b78a5307adf893d90ff8c96bb5464736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 SWAP5 0xD7 0xE1 RETURN 0xAD PUSH9 0x7804BA76A0F1600BFA 0xB3 CODECOPY JUMPDEST PUSH25 0xA5307ADF893D90FF8C96BB5464736F6C634300081300330000 ","sourceMap":"1318:11630:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1318:11630:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209294d7e1f3ad687804ba76a0f1600bfab3395b78a5307adf893d90ff8c96bb5464736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 SWAP5 0xD7 0xE1 RETURN 0xAD PUSH9 0x7804BA76A0F1600BFA 0xB3 CODECOPY JUMPDEST PUSH25 0xA5307ADF893D90FF8C96BB5464736F6C634300081300330000 ","sourceMap":"1318:11630:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_add(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSet.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSet.Set storage pointer)":"infinite","_remove(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSet.Set storage pointer)":"infinite","add(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSet.AddressSet storage pointer)":"infinite","length(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSet.UintSet storage pointer)":"infinite","remove(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSet.AddressSet storage pointer)":"infinite","values(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSet.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol":{"SubscriptionAPI":{"abi":[{"inputs":[{"internalType":"uint256","name":"internalBalance","type":"uint256"},{"internalType":"uint256","name":"externalBalance","type":"uint256"}],"name":"BalanceInvariantViolated","type":"error"},{"inputs":[],"name":"FailedToSendNative","type":"error"},{"inputs":[],"name":"FailedToTransferLink","type":"error"},{"inputs":[],"name":"IndexOutOfRange","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidCalldata","type":"error"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"InvalidConsumer","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[],"name":"LinkAlreadySet","type":"error"},{"inputs":[],"name":"LinkNotSet","type":"error"},{"inputs":[{"internalType":"address","name":"proposedOwner","type":"address"}],"name":"MustBeRequestedOwner","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"OnlyCallableFromLink","type":"error"},{"inputs":[],"name":"PendingRequestExists","type":"error"},{"inputs":[],"name":"Reentrant","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NativeFundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLink","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountNative","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldNativeBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newNativeBalance","type":"uint256"}],"name":"SubscriptionFundedWithNative","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferred","type":"event"},{"inputs":[],"name":"LINK","outputs":[{"internalType":"contract LinkTokenInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK_NATIVE_FEED","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"subOwner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"ownerCancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"}],"name":"recoverNativeFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_config","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"bool","name":"reentrancyLock","type":"bool"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeNativePPM","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkDiscountPPM","type":"uint32"},{"internalType":"uint8","name":"nativePremiumPercentage","type":"uint8"},{"internalType":"uint8","name":"linkPremiumPercentage","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_currentSubNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalNativeBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"link","type":"address"},{"internalType":"address","name":"linkNativeFeed","type":"address"}],"name":"setLINKAndLINKNativeFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"}],"name":"withdrawNative","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","reqCount":"- Requests count of subscription.","subOwner":"- owner of the subscription."}},"ownerCancelSubscription(uint256)":{"details":"notably can be called even if there are pending requests, outstanding ones may fail onchain","params":{"subId":"subscription id"}},"recoverFunds(address)":{"params":{"to":"address to send link to"}},"recoverNativeFunds(address)":{"params":{"to":"address to send native to"}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}},"setLINKAndLINKNativeFeed(address,address)":{"params":{"link":"- address of link token","linkNativeFeed":"address of the link native feed"}}},"stateVariables":{"LINK":{"details":"may not be provided upon construction on some chains due to lack of availability"},"LINK_NATIVE_FEED":{"details":"may not be provided upon construction on some chains due to lack of availability"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"LINK()":"1b6b6d23","LINK_NATIVE_FEED()":"72e9d565","MAX_CONSUMERS()":"64d51a2a","acceptOwnership()":"79ba5097","acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","onTokenTransfer(address,uint256,bytes)":"a4c0ed36","owner()":"8da5cb5b","ownerCancelSubscription(uint256)":"aa433aff","pendingRequestExists(uint256)":"41af6c87","recoverFunds(address)":"e72f6e30","recoverNativeFunds(address)":"8402595e","removeConsumer(uint256,address)":"cb631797","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29","s_config()":"088070f5","s_currentSubNonce()":"9d40a6fd","s_totalBalance()":"86fe91c7","s_totalNativeBalance()":"18e3dd27","setLINKAndLINKNativeFeed(address,address)":"65982744","transferOwnership(address)":"f2fde38b","withdraw(address)":"51cff8d9","withdrawNative(address)":"2f622e6b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"internalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceInvariantViolated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToSendNative\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToTransferLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"MustBeRequestedOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCallableFromLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingRequestExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeFundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLink\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountNative\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNativeBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNativeBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFundedWithNative\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_NATIVE_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"subOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"ownerCancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverNativeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_config\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"reentrancyLock\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeNativePPM\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkDiscountPPM\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"nativePremiumPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"linkPremiumPercentage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_currentSubNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalNativeBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkNativeFeed\",\"type\":\"address\"}],\"name\":\"setLINKAndLINKNativeFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"reqCount\":\"- Requests count of subscription.\",\"subOwner\":\"- owner of the subscription.\"}},\"ownerCancelSubscription(uint256)\":{\"details\":\"notably can be called even if there are pending requests, outstanding ones may fail onchain\",\"params\":{\"subId\":\"subscription id\"}},\"recoverFunds(address)\":{\"params\":{\"to\":\"address to send link to\"}},\"recoverNativeFunds(address)\":{\"params\":{\"to\":\"address to send native to\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}},\"setLINKAndLINKNativeFeed(address,address)\":{\"params\":{\"link\":\"- address of link token\",\"linkNativeFeed\":\"address of the link native feed\"}}},\"stateVariables\":{\"LINK\":{\"details\":\"may not be provided upon construction on some chains due to lack of availability\"},\"LINK_NATIVE_FEED\":{\"details\":\"may not be provided upon construction on some chains due to lack of availability\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"ownerCancelSubscription(uint256)\":{\"notice\":\"Owner cancel subscription, sends remaining link directly to the subscription owner.\"},\"recoverFunds(address)\":{\"notice\":\"Recover link sent with transfer instead of transferAndCall.\"},\"recoverNativeFunds(address)\":{\"notice\":\"Recover native sent with transfer/call/send instead of fundSubscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"},\"setLINKAndLINKNativeFeed(address,address)\":{\"notice\":\"set the LINK token contract and link native feed to be used by this coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":\"SubscriptionAPI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport {EnumerableSet} from \\\"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport {LinkTokenInterface} from \\\"../../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\nimport {AggregatorV3Interface} from \\\"../../shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {IERC677Receiver} from \\\"../../shared/interfaces/IERC677Receiver.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./interfaces/IVRFSubscriptionV2Plus.sol\\\";\\n\\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\\n  using EnumerableSet for EnumerableSet.UintSet;\\n\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  LinkTokenInterface public LINK;\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  AggregatorV3Interface public LINK_NATIVE_FEED;\\n\\n  // We need to maintain a list of consuming addresses.\\n  // This bound ensures we are able to loop over them as needed.\\n  // Should a user require more consumers, they can use multiple subscriptions.\\n  uint16 public constant MAX_CONSUMERS = 100;\\n  error TooManyConsumers();\\n  error InsufficientBalance();\\n  error InvalidConsumer(uint256 subId, address consumer);\\n  error InvalidSubscription();\\n  error OnlyCallableFromLink();\\n  error InvalidCalldata();\\n  error MustBeSubOwner(address owner);\\n  error PendingRequestExists();\\n  error MustBeRequestedOwner(address proposedOwner);\\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\\n  event FundsRecovered(address to, uint256 amount);\\n  event NativeFundsRecovered(address to, uint256 amount);\\n  error LinkAlreadySet();\\n  error FailedToSendNative();\\n  error FailedToTransferLink();\\n  error IndexOutOfRange();\\n  error LinkNotSet();\\n\\n  // We use the subscription struct (1 word)\\n  // at fulfillment time.\\n  struct Subscription {\\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n    uint96 balance; // Common link balance used for all consumer requests.\\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\\n    // That should be enough to cover most (if not all) subscriptions.\\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\\n    uint64 reqCount;\\n  }\\n  // We use the config for the mgmt APIs\\n  struct SubscriptionConfig {\\n    address owner; // Owner can fund/withdraw/cancel the sub.\\n    address requestedOwner; // For safely transferring sub ownership.\\n    // Maintains the list of keys in s_consumers.\\n    // We do this for 2 reasons:\\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n    // 2. To be able to return the list of all consumers in getSubscription.\\n    // Note that we need the s_consumers map to be able to directly check if a\\n    // consumer is valid without reading all the consumers from storage.\\n    address[] consumers;\\n  }\\n  struct ConsumerConfig {\\n    bool active;\\n    uint64 nonce;\\n    uint64 pendingReqCount;\\n  }\\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\\n    internal s_consumers;\\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\\n  // subscription nonce used to construct subId. Rises monotonically\\n  uint64 public s_currentSubNonce;\\n  // track all subscription id's that were created by this contract\\n  // note: access should be through the getActiveSubscriptionIds() view function\\n  // which takes a starting index and a max number to fetch in order to allow\\n  // \\\"pagination\\\" of the subscription ids. in the event a very large number of\\n  // subscription id's are stored in this set, they cannot be retrieved in a\\n  // single RPC call without violating various size limits.\\n  EnumerableSet.UintSet internal s_subIds;\\n  // s_totalBalance tracks the total link sent to/from\\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n  // A discrepancy with this contract's link balance indicates someone\\n  // sent tokens using transfer and so we may need to use recoverFunds.\\n  uint96 public s_totalBalance;\\n  // s_totalNativeBalance tracks the total native sent to/from\\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\\n  // A discrepancy with this contract's native balance indicates someone\\n  // sent native using transfer and so we may need to use recoverNativeFunds.\\n  uint96 public s_totalNativeBalance;\\n  uint96 internal s_withdrawableTokens;\\n  uint96 internal s_withdrawableNative;\\n\\n  event SubscriptionCreated(uint256 indexed subId, address owner);\\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\\n\\n  struct Config {\\n    uint16 minimumRequestConfirmations;\\n    uint32 maxGasLimit;\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n    // stalenessSeconds is how long before we consider the feed price to be stale\\n    // and fallback to fallbackWeiPerUnitLink.\\n    uint32 stalenessSeconds;\\n    // Gas to cover oracle payment after we calculate the payment.\\n    // We make it configurable in case those operations are repriced.\\n    // The recommended number is below, though it may vary slightly\\n    // if certain chains do not implement certain EIP's.\\n    // 21000 + // base cost of the transaction\\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\\n    // Total: 37,185 gas.\\n    uint32 gasAfterPaymentCalculation;\\n    // Flat fee charged per fulfillment in millionths of native.\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeNativePPM;\\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\\n    // Should not exceed fulfillmentFlatFeeNativePPM\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 nativePremiumPercentage;\\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 linkPremiumPercentage;\\n  }\\n  Config public s_config;\\n\\n  error Reentrant();\\n  modifier nonReentrant() {\\n    _nonReentrant();\\n    _;\\n  }\\n\\n  function _nonReentrant() internal view {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n  }\\n\\n  constructor() ConfirmedOwner(msg.sender) {}\\n\\n  /**\\n   * @notice set the LINK token contract and link native feed to be\\n   * used by this coordinator\\n   * @param link - address of link token\\n   * @param linkNativeFeed address of the link native feed\\n   */\\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\\n    // Disallow re-setting link token because the logic wouldn't really make sense\\n    if (address(LINK) != address(0)) {\\n      revert LinkAlreadySet();\\n    }\\n    LINK = LinkTokenInterface(link);\\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\\n  }\\n\\n  /**\\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n   * @param subId subscription id\\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n   */\\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    _cancelSubscriptionHelper(subId, subOwner);\\n  }\\n\\n  /**\\n   * @notice Recover link sent with transfer instead of transferAndCall.\\n   * @param to address to send link to\\n   */\\n  function recoverFunds(address to) external onlyOwner {\\n    // If LINK is not set, we cannot recover funds.\\n    // It is possible that this coordinator address was funded with LINK\\n    // by accident by a user but the LINK token needs to be set first\\n    // before we can recover it.\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n\\n    uint256 externalBalance = LINK.balanceOf(address(this));\\n    uint256 internalBalance = uint256(s_totalBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      if (!LINK.transfer(to, amount)) {\\n        revert FailedToTransferLink();\\n      }\\n      emit FundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /**\\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\\n   * @param to address to send native to\\n   */\\n  function recoverNativeFunds(address payable to) external onlyOwner {\\n    uint256 externalBalance = address(this).balance;\\n    uint256 internalBalance = uint256(s_totalNativeBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      (bool sent, ) = to.call{value: amount}(\\\"\\\");\\n      if (!sent) {\\n        revert FailedToSendNative();\\n      }\\n      emit NativeFundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /*\\n   * @notice withdraw LINK earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdraw(address recipient) external nonReentrant onlyOwner {\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n    if (s_withdrawableTokens == 0) {\\n      revert InsufficientBalance();\\n    }\\n    uint96 amount = s_withdrawableTokens;\\n    s_withdrawableTokens -= amount;\\n    s_totalBalance -= amount;\\n    if (!LINK.transfer(recipient, amount)) {\\n      revert InsufficientBalance();\\n    }\\n  }\\n\\n  /*\\n   * @notice withdraw native earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\\n    if (s_withdrawableNative == 0) {\\n      revert InsufficientBalance();\\n    }\\n    // Prevent re-entrancy by updating state before transfer.\\n    uint96 amount = s_withdrawableNative;\\n    s_withdrawableNative -= amount;\\n    s_totalNativeBalance -= amount;\\n    (bool sent, ) = recipient.call{value: amount}(\\\"\\\");\\n    if (!sent) {\\n      revert FailedToSendNative();\\n    }\\n  }\\n\\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\\n    if (msg.sender != address(LINK)) {\\n      revert OnlyCallableFromLink();\\n    }\\n    if (data.length != 32) {\\n      revert InvalidCalldata();\\n    }\\n    uint256 subId = abi.decode(data, (uint256));\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    // We do not check that the sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    uint256 oldBalance = s_subscriptions[subId].balance;\\n    s_subscriptions[subId].balance += uint96(amount);\\n    s_totalBalance += uint96(amount);\\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    // We do not check that the msg.sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    // We also do not check that msg.value > 0, since that's just a no-op\\n    // and would be a waste of gas on the caller's part.\\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\\n    s_totalNativeBalance += uint96(msg.value);\\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    public\\n    view\\n    override\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\\n  {\\n    subOwner = s_subscriptionConfigs[subId].owner;\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (\\n      s_subscriptions[subId].balance,\\n      s_subscriptions[subId].nativeBalance,\\n      s_subscriptions[subId].reqCount,\\n      subOwner,\\n      s_subscriptionConfigs[subId].consumers\\n    );\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getActiveSubscriptionIds(\\n    uint256 startIndex,\\n    uint256 maxCount\\n  ) external view override returns (uint256[] memory ids) {\\n    uint256 numSubs = s_subIds.length();\\n    if (startIndex >= numSubs) revert IndexOutOfRange();\\n    uint256 endIndex = startIndex + maxCount;\\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\\n    uint256 idsLength = endIndex - startIndex;\\n    ids = new uint256[](idsLength);\\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\\n      ids[idx] = s_subIds.at(idx + startIndex);\\n    }\\n    return ids;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\\n    // Generate a subscription id that is globally unique.\\n    uint64 currentSubNonce = s_currentSubNonce;\\n    subId = uint256(\\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\\n    );\\n    // Increment the subscription nonce counter.\\n    s_currentSubNonce = currentSubNonce + 1;\\n    // Initialize storage variables.\\n    address[] memory consumers = new address[](0);\\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\\n      owner: msg.sender,\\n      requestedOwner: address(0),\\n      consumers: consumers\\n    });\\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\\n    s_subIds.add(subId);\\n\\n    emit SubscriptionCreated(subId, msg.sender);\\n    return subId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function requestSubscriptionOwnerTransfer(\\n    uint256 subId,\\n    address newOwner\\n  ) external override onlySubOwner(subId) nonReentrant {\\n    // Proposing to address(0) would never be claimable so don't need to check.\\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\\n    if (subscriptionConfig.requestedOwner != newOwner) {\\n      subscriptionConfig.requestedOwner = newOwner;\\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\\n    address oldOwner = s_subscriptionConfigs[subId].owner;\\n    if (oldOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\\n    }\\n    s_subscriptionConfigs[subId].owner = msg.sender;\\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\\n    if (consumerConfig.active) {\\n      // Idempotence - do nothing if already added.\\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\\n      return;\\n    }\\n    // Already maxed, cannot add any more consumers.\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    if (consumers.length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\\n    // otherwise, consumerConfig.nonce is non-zero\\n    // in both cases, use consumerConfig.nonce as is and set active status to true\\n    consumerConfig.active = true;\\n    consumers.push(consumer);\\n\\n    emit SubscriptionConsumerAdded(subId, consumer);\\n  }\\n\\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    balance = s_subscriptions[subId].balance;\\n    nativeBalance = s_subscriptions[subId].nativeBalance;\\n    // Note bounded by MAX_CONSUMERS;\\n    // If no consumers, does nothing.\\n    uint256 consumersLength = consumers.length;\\n    for (uint256 i = 0; i < consumersLength; ++i) {\\n      delete s_consumers[consumers[i]][subId];\\n    }\\n    delete s_subscriptionConfigs[subId];\\n    delete s_subscriptions[subId];\\n    s_subIds.remove(subId);\\n    if (balance != 0) {\\n      s_totalBalance -= balance;\\n    }\\n    if (nativeBalance != 0) {\\n      s_totalNativeBalance -= nativeBalance;\\n    }\\n    return (balance, nativeBalance);\\n  }\\n\\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\\n\\n    // Only withdraw LINK if the token is active and there is a balance.\\n    if (address(LINK) != address(0) && balance != 0) {\\n      if (!LINK.transfer(to, uint256(balance))) {\\n        revert InsufficientBalance();\\n      }\\n    }\\n\\n    // send native to the \\\"to\\\" address using call\\n    (bool success, ) = to.call{value: uint256(nativeBalance)}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\\n  }\\n\\n  modifier onlySubOwner(uint256 subId) {\\n    _onlySubOwner(subId);\\n    _;\\n  }\\n\\n  function _onlySubOwner(uint256 subId) internal view {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != subOwner) {\\n      revert MustBeSubOwner(subOwner);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x9607dc0b37c82e7cda56afb21096205bc975673df795a704c7d04a9f5dcf6bb2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":97,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":99,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1061,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"LINK","offset":0,"slot":"2","type":"t_contract(LinkTokenInterface)420"},{"astId":1065,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"LINK_NATIVE_FEED","offset":0,"slot":"3","type":"t_contract(AggregatorV3Interface)297"},{"astId":1151,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_consumers","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1144_storage))"},{"astId":1156,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_subscriptionConfigs","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(SubscriptionConfig)1137_storage)"},{"astId":1161,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_subscriptions","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(Subscription)1129_storage)"},{"astId":1163,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_currentSubNonce","offset":0,"slot":"7","type":"t_uint64"},{"astId":1166,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_subIds","offset":0,"slot":"8","type":"t_struct(UintSet)903_storage"},{"astId":1168,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_totalBalance","offset":0,"slot":"10","type":"t_uint96"},{"astId":1170,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_totalNativeBalance","offset":12,"slot":"10","type":"t_uint96"},{"astId":1172,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_withdrawableTokens","offset":0,"slot":"11","type":"t_uint96"},{"astId":1174,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_withdrawableNative","offset":12,"slot":"11","type":"t_uint96"},{"astId":1256,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_config","offset":0,"slot":"12","type":"t_struct(Config)1253_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)297":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)420":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1144_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(ConsumerConfig)1144_storage)"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(ConsumerConfig)1144_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig)","numberOfBytes":"32","value":"t_struct(ConsumerConfig)1144_storage"},"t_mapping(t_uint256,t_struct(Subscription)1129_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)1129_storage"},"t_mapping(t_uint256,t_struct(SubscriptionConfig)1137_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)","numberOfBytes":"32","value":"t_struct(SubscriptionConfig)1137_storage"},"t_struct(Config)1253_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Config","members":[{"astId":1236,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"minimumRequestConfirmations","offset":0,"slot":"0","type":"t_uint16"},{"astId":1238,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"maxGasLimit","offset":2,"slot":"0","type":"t_uint32"},{"astId":1240,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"reentrancyLock","offset":6,"slot":"0","type":"t_bool"},{"astId":1242,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"stalenessSeconds","offset":7,"slot":"0","type":"t_uint32"},{"astId":1244,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"gasAfterPaymentCalculation","offset":11,"slot":"0","type":"t_uint32"},{"astId":1246,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"fulfillmentFlatFeeNativePPM","offset":15,"slot":"0","type":"t_uint32"},{"astId":1248,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"fulfillmentFlatFeeLinkDiscountPPM","offset":19,"slot":"0","type":"t_uint32"},{"astId":1250,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"nativePremiumPercentage","offset":23,"slot":"0","type":"t_uint8"},{"astId":1252,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"linkPremiumPercentage","offset":24,"slot":"0","type":"t_uint8"}],"numberOfBytes":"32"},"t_struct(ConsumerConfig)1144_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.ConsumerConfig","members":[{"astId":1139,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"active","offset":0,"slot":"0","type":"t_bool"},{"astId":1141,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"nonce","offset":1,"slot":"0","type":"t_uint64"},{"astId":1143,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"pendingReqCount","offset":9,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(Set)431_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":426,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":430,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(Subscription)1129_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Subscription","members":[{"astId":1124,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"balance","offset":0,"slot":"0","type":"t_uint96"},{"astId":1126,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"nativeBalance","offset":12,"slot":"0","type":"t_uint96"},{"astId":1128,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"reqCount","offset":24,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(SubscriptionConfig)1137_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.SubscriptionConfig","members":[{"astId":1131,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":1133,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"requestedOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1136,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"consumers","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"96"},"t_struct(UintSet)903_storage":{"encoding":"inplace","label":"struct EnumerableSet.UintSet","members":[{"astId":902,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)431_storage"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"owner()":{"notice":"Get the current owner"},"ownerCancelSubscription(uint256)":{"notice":"Owner cancel subscription, sends remaining link directly to the subscription owner."},"recoverFunds(address)":{"notice":"Recover link sent with transfer instead of transferAndCall."},"recoverNativeFunds(address)":{"notice":"Recover native sent with transfer/call/send instead of fundSubscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."},"setLINKAndLINKNativeFeed(address,address)":{"notice":"set the LINK token contract and link native feed to be used by this coordinator"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"VRFConsumerBaseV2Plus":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_vrfCoordinator()":"9eccacf6","setCoordinator(address)":"8ea98117","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":\"VRFConsumerBaseV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n    // extraArgs will evolve to support new features\\n    bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n    struct ExtraArgsV1 {\\n        bool nativePayment;\\n    }\\n\\n    struct RandomWordsRequest {\\n        bytes32 keyHash;\\n        uint256 subId;\\n        uint16 requestConfirmations;\\n        uint32 callbackGasLimit;\\n        uint32 numWords;\\n        bytes extraArgs;\\n    }\\n\\n    function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n        return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n    }\\n}\\n\",\"keccak256\":\"0xf2694d53958860845918ffb3ef560851372f7fc8b108a574b28965a31b9cb05c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":97,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":99,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2400,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_vrfCoordinator","offset":0,"slot":"2","type":"t_contract(IVRFCoordinatorV2Plus)2549"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IVRFCoordinatorV2Plus)2549":{"encoding":"inplace","label":"contract IVRFCoordinatorV2Plus","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"IVRFCoordinatorV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct VRFV2PlusClient.RandomWordsRequest","name":"req","type":"tuple"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","owner":"- owner of the subscription.","reqCount":"- Requests count of subscription."}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":{"params":{"req":"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args"},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"9b1c385e","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"params\":{\"req\":\"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":\"IVRFCoordinatorV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n    // extraArgs will evolve to support new features\\n    bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n    struct ExtraArgsV1 {\\n        bool nativePayment;\\n    }\\n\\n    struct RandomWordsRequest {\\n        bytes32 keyHash;\\n        uint256 subId;\\n        uint16 requestConfirmations;\\n        uint32 callbackGasLimit;\\n        uint32 numWords;\\n        bytes extraArgs;\\n    }\\n\\n    function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n        return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n    }\\n}\\n\",\"keccak256\":\"0xf2694d53958860845918ffb3ef560851372f7fc8b108a574b28965a31b9cb05c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"IVRFMigratableConsumerV2Plus":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"inputs":[{"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This interface is designed to be used in VRFConsumerBaseV2Plus.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"setCoordinator(address)":"8ea98117"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface is designed to be used in VRFConsumerBaseV2Plus.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"}},\"notice\":\"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":\"IVRFMigratableConsumerV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"}},"notice":"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"IVRFSubscriptionV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","owner":"- owner of the subscription.","reqCount":"- Requests count of subscription."}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"notice\":\"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":\"IVRFSubscriptionV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."}},"notice":"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"VRFV2PlusClient":{"abi":[{"inputs":[],"name":"EXTRA_ARGS_V1_TAG","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60b1610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b605e7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b6040516001600160e01b0319909116815260200160405180910390f3fea2646970667358221220319391f0c44d2282ca4f67110508a9515f498a60506d480975422214db0ff70164736f6c63430008130033","opcodes":"PUSH1 0xB1 PUSH2 0x38 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5E PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SWAP4 SWAP2 CREATE 0xC4 0x4D 0x22 DUP3 0xCA 0x4F PUSH8 0x110508A9515F498A PUSH1 0x50 PUSH14 0x480975422214DB0FF70164736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"82:606:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;82:606:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@EXTRA_ARGS_V1_TAG_2662":{"entryPoint":null,"id":2662,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:226:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"121:103:19","statements":[{"nodeType":"YulAssignment","src":"131:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"143:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"139:3:19"},"nodeType":"YulFunctionCall","src":"139:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"131:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"188:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"200:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"205:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"196:3:19"},"nodeType":"YulFunctionCall","src":"196:20:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"184:3:19"},"nodeType":"YulFunctionCall","src":"184:33:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:19"},"nodeType":"YulFunctionCall","src":"166:52:19"},"nodeType":"YulExpressionStatement","src":"166:52:19"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"90:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"101:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"112:4:19","type":""}],"src":"14:210:19"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b605e7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b6040516001600160e01b0319909116815260200160405180910390f3fea2646970667358221220319391f0c44d2282ca4f67110508a9515f498a60506d480975422214db0ff70164736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5E PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SWAP4 SWAP2 CREATE 0xC4 0x4D 0x22 DUP3 0xCA 0x4F PUSH8 0x110508A9515F498A PUSH1 0x50 PUSH14 0x480975422214DB0FF70164736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"82:606:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;165:79;;215:28;165:79;;;;;-1:-1:-1;;;;;;184:33:19;;;166:52;;154:2;139:18;165:79:15;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"35400","executionCost":"118","totalCost":"35518"},"external":{"EXTRA_ARGS_V1_TAG()":"169"},"internal":{"_argsToBytes(struct VRFV2PlusClient.ExtraArgsV1 memory)":"infinite"}},"methodIdentifiers":{"EXTRA_ARGS_V1_TAG()":"f7514ab4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":\"VRFV2PlusClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n    // extraArgs will evolve to support new features\\n    bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n    struct ExtraArgsV1 {\\n        bool nativePayment;\\n    }\\n\\n    struct RandomWordsRequest {\\n        bytes32 keyHash;\\n        uint256 subId;\\n        uint16 requestConfirmations;\\n        uint32 callbackGasLimit;\\n        uint32 numWords;\\n        bytes extraArgs;\\n    }\\n\\n    function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n        return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n    }\\n}\\n\",\"keccak256\":\"0xf2694d53958860845918ffb3ef560851372f7fc8b108a574b28965a31b9cb05c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol":{"VRFCoordinatorV2_5Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPrice","type":"uint96"},{"internalType":"int256","name":"_weiPerUnitLink","type":"int256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"internalBalance","type":"uint256"},{"internalType":"uint256","name":"externalBalance","type":"uint256"}],"name":"BalanceInvariantViolated","type":"error"},{"inputs":[],"name":"FailedToSendNative","type":"error"},{"inputs":[],"name":"FailedToTransferLink","type":"error"},{"inputs":[],"name":"IndexOutOfRange","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidCalldata","type":"error"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"InvalidConsumer","type":"error"},{"inputs":[],"name":"InvalidExtraArgsTag","type":"error"},{"inputs":[],"name":"InvalidRandomWords","type":"error"},{"inputs":[],"name":"InvalidRequest","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[],"name":"LinkAlreadySet","type":"error"},{"inputs":[],"name":"LinkNotSet","type":"error"},{"inputs":[{"internalType":"address","name":"proposedOwner","type":"address"}],"name":"MustBeRequestedOwner","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"NotImplemented","type":"error"},{"inputs":[],"name":"OnlyCallableFromLink","type":"error"},{"inputs":[],"name":"PendingRequestExists","type":"error"},{"inputs":[],"name":"Reentrant","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[],"name":"ConfigSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NativeFundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"nativePayment","type":"bool"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"bool","name":"onlyPremium","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":false,"internalType":"bytes","name":"extraArgs","type":"bytes"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLink","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountNative","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldNativeBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newNativeBalance","type":"uint256"}],"name":"SubscriptionFundedWithNative","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferred","type":"event"},{"inputs":[],"name":"LINK","outputs":[{"internalType":"contract LinkTokenInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK_NATIVE_FEED","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"consumerIsAdded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"},{"internalType":"uint256[]","name":"_words","type":"uint256[]"}],"name":"fulfillRandomWordsWithOverride","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"subOwner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_base_fee","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_gas_price","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_wei_per_unit_link","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"ownerCancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"}],"name":"recoverNativeFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct VRFV2PlusClient.RandomWordsRequest","name":"_req","type":"tuple"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_config","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"bool","name":"reentrancyLock","type":"bool"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeNativePPM","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkDiscountPPM","type":"uint32"},{"internalType":"uint8","name":"nativePremiumPercentage","type":"uint8"},{"internalType":"uint8","name":"linkPremiumPercentage","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_currentSubNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalNativeBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"link","type":"address"},{"internalType":"address","name":"linkNativeFeed","type":"address"}],"name":"setLINKAndLINKNativeFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"}],"name":"withdrawNative","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill","_words":"user-provided random words"}},"fundSubscription(uint256,uint256)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","reqCount":"- Requests count of subscription.","subOwner":"- owner of the subscription."}},"ownerCancelSubscription(uint256)":{"details":"notably can be called even if there are pending requests, outstanding ones may fail onchain","params":{"subId":"subscription id"}},"recoverFunds(address)":{"params":{"to":"address to send link to"}},"recoverNativeFunds(address)":{"params":{"to":"address to send native to"}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}},"setLINKAndLINKNativeFeed(address,address)":{"params":{"link":"- address of link token","linkNativeFeed":"address of the link native feed"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1284":{"entryPoint":null,"id":1284,"parameterSlots":0,"returnSlots":0},"@_145":{"entryPoint":null,"id":145,"parameterSlots":2,"returnSlots":0},"@_2810":{"entryPoint":null,"id":2810,"parameterSlots":3,"returnSlots":0},"@_87":{"entryPoint":null,"id":87,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_229":{"entryPoint":246,"id":229,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_242":{"entryPoint":556,"id":242,"parameterSlots":0,"returnSlots":0},"@setConfig_2834":{"entryPoint":417,"id":2834,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_uint96t_uint96t_int256_fromMemory":{"entryPoint":679,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint96_fromMemory":{"entryPoint":650,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1601:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"73:116:19","statements":[{"nodeType":"YulAssignment","src":"83:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"98:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"92:5:19"},"nodeType":"YulFunctionCall","src":"92:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"83:5:19"}]},{"body":{"nodeType":"YulBlock","src":"167:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:19"},"nodeType":"YulFunctionCall","src":"169:12:19"},"nodeType":"YulExpressionStatement","src":"169:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"127:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"153:2:19","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"149:3:19"},"nodeType":"YulFunctionCall","src":"149:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"145:3:19"},"nodeType":"YulFunctionCall","src":"145:18:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"134:3:19"},"nodeType":"YulFunctionCall","src":"134:30:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"124:2:19"},"nodeType":"YulFunctionCall","src":"124:41:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"117:6:19"},"nodeType":"YulFunctionCall","src":"117:49:19"},"nodeType":"YulIf","src":"114:69:19"}]},"name":"abi_decode_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"63:5:19","type":""}],"src":"14:175:19"},{"body":{"nodeType":"YulBlock","src":"306:237:19","statements":[{"body":{"nodeType":"YulBlock","src":"352:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"361:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"364:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"354:6:19"},"nodeType":"YulFunctionCall","src":"354:12:19"},"nodeType":"YulExpressionStatement","src":"354:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"327:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"336:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"323:3:19"},"nodeType":"YulFunctionCall","src":"323:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"348:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"319:3:19"},"nodeType":"YulFunctionCall","src":"319:32:19"},"nodeType":"YulIf","src":"316:52:19"},{"nodeType":"YulAssignment","src":"377:49:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"416:9:19"}],"functionName":{"name":"abi_decode_uint96_fromMemory","nodeType":"YulIdentifier","src":"387:28:19"},"nodeType":"YulFunctionCall","src":"387:39:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"377:6:19"}]},{"nodeType":"YulAssignment","src":"435:58:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"478:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"489:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:19"},"nodeType":"YulFunctionCall","src":"474:18:19"}],"functionName":{"name":"abi_decode_uint96_fromMemory","nodeType":"YulIdentifier","src":"445:28:19"},"nodeType":"YulFunctionCall","src":"445:48:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"435:6:19"}]},{"nodeType":"YulAssignment","src":"502:35:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"522:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"533:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"518:3:19"},"nodeType":"YulFunctionCall","src":"518:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"512:5:19"},"nodeType":"YulFunctionCall","src":"512:25:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"502:6:19"}]}]},"name":"abi_decode_tuple_t_uint96t_uint96t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"256:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"267:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"279:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"287:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"295:6:19","type":""}],"src":"194:349:19"},{"body":{"nodeType":"YulBlock","src":"722:174:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"739:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"750:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"732:6:19"},"nodeType":"YulFunctionCall","src":"732:21:19"},"nodeType":"YulExpressionStatement","src":"732:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"773:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"784:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"769:3:19"},"nodeType":"YulFunctionCall","src":"769:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"789:2:19","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"762:6:19"},"nodeType":"YulFunctionCall","src":"762:30:19"},"nodeType":"YulExpressionStatement","src":"762:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"812:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"823:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"808:3:19"},"nodeType":"YulFunctionCall","src":"808:18:19"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"828:26:19","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"801:6:19"},"nodeType":"YulFunctionCall","src":"801:54:19"},"nodeType":"YulExpressionStatement","src":"801:54:19"},{"nodeType":"YulAssignment","src":"864:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"876:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"887:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"872:3:19"},"nodeType":"YulFunctionCall","src":"872:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"864:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"699:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"713:4:19","type":""}],"src":"548:348:19"},{"body":{"nodeType":"YulBlock","src":"1075:173:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1092:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1103:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1085:6:19"},"nodeType":"YulFunctionCall","src":"1085:21:19"},"nodeType":"YulExpressionStatement","src":"1085:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1126:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1137:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1122:3:19"},"nodeType":"YulFunctionCall","src":"1122:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"1142:2:19","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1115:6:19"},"nodeType":"YulFunctionCall","src":"1115:30:19"},"nodeType":"YulExpressionStatement","src":"1115:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1165:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1176:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1161:3:19"},"nodeType":"YulFunctionCall","src":"1161:18:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"1181:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1154:6:19"},"nodeType":"YulFunctionCall","src":"1154:53:19"},"nodeType":"YulExpressionStatement","src":"1154:53:19"},{"nodeType":"YulAssignment","src":"1216:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1228:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1239:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1224:3:19"},"nodeType":"YulFunctionCall","src":"1224:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1216:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1052:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1066:4:19","type":""}],"src":"901:347:19"},{"body":{"nodeType":"YulBlock","src":"1427:172:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1444:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1455:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1437:6:19"},"nodeType":"YulFunctionCall","src":"1437:21:19"},"nodeType":"YulExpressionStatement","src":"1437:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1478:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1489:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1474:3:19"},"nodeType":"YulFunctionCall","src":"1474:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"1494:2:19","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1467:6:19"},"nodeType":"YulFunctionCall","src":"1467:30:19"},"nodeType":"YulExpressionStatement","src":"1467:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1528:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:19"},"nodeType":"YulFunctionCall","src":"1513:18:19"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1533:24:19","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1506:6:19"},"nodeType":"YulFunctionCall","src":"1506:52:19"},"nodeType":"YulExpressionStatement","src":"1506:52:19"},{"nodeType":"YulAssignment","src":"1567:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1579:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1590:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1575:3:19"},"nodeType":"YulFunctionCall","src":"1575:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1567:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1404:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1418:4:19","type":""}],"src":"1253:346:19"}]},"contents":"{\n    { }\n    function abi_decode_uint96_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(96, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint96t_uint96t_int256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint96_fromMemory(headStart)\n        value1 := abi_decode_uint96_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xE SSTORE PUSH1 0x64 PUSH1 0xF SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x39AC CODESIZE SUB DUP1 PUSH3 0x39AC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3E SWAP2 PUSH3 0x2A7 JUMP JUMPDEST CALLER DUP1 PUSH1 0x0 DUP2 PUSH3 0x95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH3 0xC8 JUMPI PUSH3 0xC8 DUP2 PUSH3 0xF6 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP5 AND PUSH1 0x80 MSTORE DUP3 AND PUSH1 0xA0 MSTORE PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH3 0xED PUSH3 0x1A1 JUMP JUMPDEST POP POP POP PUSH3 0x2E8 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH3 0x150 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x8C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH3 0x1AB PUSH3 0x22C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC8 SHL SUB NOT AND SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x288 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x8C JUMP JUMPDEST JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2C8 DUP5 PUSH3 0x28A JUMP JUMPDEST SWAP3 POP PUSH3 0x2D8 PUSH1 0x20 DUP6 ADD PUSH3 0x28A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x367F PUSH3 0x32D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x35F ADD MSTORE PUSH2 0xB8F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x78A ADD MSTORE PUSH2 0xB16 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x418 ADD MSTORE PUSH2 0xB61 ADD MSTORE PUSH2 0x367F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B673E7A GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xAEFB212F GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDAC83D29 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDAC83D29 EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0xDC311DD3 EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xDCAB3DCF EQ PUSH2 0x778 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x7AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAEFB212F EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xB2A7CAC5 EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0xBEC4C08C EQ PUSH2 0x6E7 JUMPI DUP1 PUSH4 0xCB631797 EQ PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B1C385E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x9B1C385E EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x9D40A6FD EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0xAA433AFF EQ PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B673E7A EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0x953E9C75 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x95B55CFC EQ PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41AF6C87 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x72E9D565 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x72E9D565 EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x8402595E EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x86FE91C7 EQ PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41AF6C87 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x65982744 EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13478329 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x13478329 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x18E3DD27 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x1EEBC117 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x2F622E6B EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88070F5 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xAE09540 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x115E3C0D EQ PUSH2 0x32D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFFF DUP2 AND SWAP1 PUSH4 0xFFFFFFFF PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP3 DIV DUP2 AND SWAP3 PUSH8 0x100000000000000 DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x58 SHL DUP2 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x78 SHL DUP3 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x98 SHL DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP11 AND DUP11 MSTORE PUSH4 0xFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP12 ADD MSTORE SWAP7 ISZERO ISZERO SWAP7 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP4 DUP7 AND PUSH1 0x60 DUP9 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP8 ADD MSTORE DUP5 AND PUSH1 0xA0 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP3 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0xE0 DUP5 ADD MSTORE AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E94 JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0xC7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F87 JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x3B6 SWAP1 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x4A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BF PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2FDF JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x11E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x12B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x3B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x13CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x5D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x5E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0x1486 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x300D JUMP JUMPDEST PUSH2 0x15AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x62D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x180E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x675 CALLDATASIZE PUSH1 0x4 PUSH2 0x3047 JUMP JUMPDEST PUSH2 0x19E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0x1B55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BA PUSH2 0x6B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F87 JUMP JUMPDEST PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x310A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x6E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x702 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x1DA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x1E95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x2123 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x767 PUSH2 0x762 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x311D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x22AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x0 GAS PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SUB PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH4 0x41ABC801 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH5 0x100000000 SWAP1 DIV SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 PUSH2 0x877 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A3 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x9C9 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x926 JUMPI PUSH2 0x926 PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x94F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9A6 JUMPI PUSH2 0x9A6 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9BB DUP2 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x955 JUMP JUMPDEST POP PUSH2 0x9F4 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EFADB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA12 SWAP3 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 MSTORE PUSH1 0xC DUP1 SLOAD PUSH7 0xFF000000000000 NOT AND PUSH1 0x1 PUSH1 0x30 SHL OR SWAP1 SSTORE SWAP2 DUP6 ADD MLOAD SWAP2 MLOAD SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH2 0xA86 SWAP1 DUP6 SWAP1 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH7 0xFF000000000000 NOT AND SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD DUP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xAF4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3283 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xB04 JUMPI PUSH2 0xB04 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0x1 EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GAS PUSH2 0xB49 SWAP1 DUP10 PUSH2 0x3283 JUMP JUMPDEST PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH2 0xB86 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH32 0x0 AND PUSH2 0x32AD JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xBCD JUMPI PUSH32 0x0 PUSH2 0xBC0 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3296 JUMP JUMPDEST PUSH2 0xBCA SWAP2 SWAP1 PUSH2 0x32C0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 SWAP1 PUSH2 0xBDE SWAP1 DUP3 SWAP1 DUP6 SWAP1 PUSH2 0x2489 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE SWAP1 PUSH2 0xC10 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x2D6B JUMP JUMPDEST POP POP DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP14 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP6 ISZERO ISZERO DUP2 DUP4 ADD MSTORE DUP7 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD DUP14 SWAP2 PUSH32 0xAEB4B4786571E184246D39587F659ABF0E26F41F6A3358692250382C0CDB47B7 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0xC86 DUP2 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0xC8E PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9A DUP6 PUSH2 0x267D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH4 0x950B2479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP1 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xDD8 DUP4 DUP6 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0xE20 SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP5 DUP5 PUSH2 0xE73 SWAP2 SWAP1 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xE98 PUSH2 0x2650 JUMP JUMPDEST PUSH2 0xEA0 PUSH2 0x282F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x0 SUB PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH1 0xC PUSH2 0xEF6 DUP4 DUP1 PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFB8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xFDF JUMPI PUSH1 0x40 MLOAD PUSH4 0x950B2479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xD6234725 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1007 PUSH2 0x2650 JUMP JUMPDEST PUSH2 0x100F PUSH2 0x282F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1F0C0A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x0 SUB PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x1080 DUP4 DUP1 PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x10C8 SWAP2 SWAP1 PUSH2 0x3302 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x113C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1160 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1189 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1688C537 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x1298 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH2 0x117D SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x12BC PUSH2 0x282F JUMP JUMPDEST PUSH1 0xA SLOAD SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 DUP2 GT ISZERO PUSH2 0x12FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x54CED181 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 PUSH2 0x1310 DUP3 DUP5 PUSH2 0x3283 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x135F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH4 0x950B2479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x4AED7C8EED0496C8C19EA2681FCCA25741C1602342E38B045D9F1E8E905D2E9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC8 SHL SUB NOT AND SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x148E PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 CALLVALUE SWAP1 PUSH1 0xC PUSH2 0x14F2 DUP4 DUP6 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x7603B205D03651EE812F803FCCDE89F1012E545A9C99F0ABFEA9CEDD0FD8E902 DUP3 CALLVALUE DUP5 PUSH2 0x158D SWAP2 SWAP1 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B4 PUSH2 0x2650 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD CALLDATALOAD CALLER PUSH2 0x15C4 DUP3 DUP3 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79BFD401 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x162F JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x1640 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0xF DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 DUP3 PUSH2 0x1659 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x167E PUSH2 0x1679 PUSH2 0x1674 PUSH1 0xA0 DUP12 ADD DUP12 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x290A JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x16A8 SWAP2 SWAP1 PUSH2 0x339A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C3 PUSH1 0xA0 DUP12 ADD PUSH1 0x80 DUP13 ADD PUSH2 0x339A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16DB PUSH1 0xA0 DUP12 ADD DUP12 PUSH2 0x334D JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP1 SWAP5 MSTORE POP POP DUP6 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP4 DUP7 ADD MLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH5 0x100000000 MUL PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP6 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x1773 SWAP1 DUP3 PUSH2 0x340E JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x20 ADD CALLDATALOAD DUP10 PUSH1 0x0 ADD CALLDATALOAD PUSH32 0xEB0E3652E0F44F417695E6E90F2F42C99B65CD7169074C5A654B16B9748C3A4E DUP7 DUP7 DUP14 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17C1 SWAP2 SWAP1 PUSH2 0x34CD JUMP JUMPDEST DUP15 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17D4 SWAP2 SWAP1 PUSH2 0x339A JUMP JUMPDEST DUP16 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17E7 SWAP2 SWAP1 PUSH2 0x339A JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH2 0x17FA SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1818 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND CALLER PUSH2 0x1830 PUSH1 0x1 NUMBER PUSH2 0x3283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP4 DUP5 SHL DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP2 BLOCKHASH PUSH1 0x34 DUP3 ADD MSTORE ADDRESS SWAP1 SWAP3 SHL AND PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT PUSH1 0xC0 DUP4 SWAP1 SHL AND PUSH1 0x68 DUP3 ADD MSTORE PUSH1 0x70 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP2 POP PUSH2 0x189A DUP2 PUSH1 0x1 PUSH2 0x3555 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP1 DUP7 ADD DUP6 DUP2 MSTORE DUP11 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP8 DUP7 KECCAK256 SWAP4 MLOAD DUP5 SLOAD SWAP4 MLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x60 SHL SWAP2 SWAP1 SWAP3 AND MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 SWAP1 SWAP9 AND SWAP2 SWAP1 SWAP2 MUL SWAP7 SWAP1 SWAP7 OR SWAP1 SSTORE DUP4 MLOAD SWAP5 DUP6 ADD DUP5 MSTORE CALLER DUP6 MSTORE DUP5 DUP2 ADD DUP3 DUP2 MSTORE DUP6 DUP6 ADD DUP5 DUP2 MSTORE DUP9 DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE SWAP5 SWAP1 SWAP3 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP4 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP1 SWAP6 AND SWAP2 AND OR SWAP1 SWAP3 SSTORE SWAP3 MLOAD DUP1 MLOAD SWAP3 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x1999 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x2DA5 JUMP JUMPDEST POP PUSH2 0x19A9 SWAP2 POP PUSH1 0x8 SWAP1 POP DUP5 PUSH2 0x297B JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE DUP4 SWAP1 PUSH32 0x1D3015D7BA850FA198DC7B1A3F5D42779313A681035F77C8C03764C61005518D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x19EC PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x44B0E3C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 EQ PUSH2 0x1A38 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8129BBCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A46 DUP3 DUP5 ADD DUP5 PUSH2 0x2FC6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A7E JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1AA5 DUP4 DUP6 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1AED SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP8 DUP5 PUSH2 0x1B40 SWAP2 SWAP1 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD6C JUMP JUMPDEST PUSH2 0x1B5D PUSH2 0x282F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1B93 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x117D DUP3 DUP3 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1BAB PUSH1 0x8 PUSH2 0x2B2D JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT PUSH2 0x1BCD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1390F2A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BD9 DUP5 DUP7 PUSH2 0x32AD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT DUP1 PUSH2 0x1BE7 JUMPI POP DUP4 ISZERO JUMPDEST PUSH2 0x1BF1 JUMPI DUP1 PUSH2 0x1BF3 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C01 DUP7 DUP4 PUSH2 0x3283 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C1B JUMPI PUSH2 0x1C1B PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C44 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C94 JUMPI PUSH2 0x1C67 PUSH2 0x1C5F DUP9 DUP4 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x8 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C79 JUMPI PUSH2 0x1C79 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1C8D DUP2 PUSH2 0x3209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA6 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1CDC JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D35 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0xD084E975 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x1 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE SWAP2 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0xD4114AB6E9AF9F597C52041F32D62DC57C5C4E4C0D4427006069635E216C9386 SWAP2 ADD PUSH2 0x159E JUMP JUMPDEST DUP2 PUSH2 0x1DAC DUP2 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x1DB4 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DE7 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x63 NOT ADD PUSH2 0x1E1B JUMPI PUSH1 0x40 MLOAD PUSH4 0x5A48E0F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR DUP4 SSTORE DUP2 SLOAD SWAP1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP7 SWAP2 PUSH32 0x1E980D04AA7648E205713E5E8EA3808672AC163D10936D36F91B2C88AC1575E1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1E9F DUP2 PUSH2 0x25E6 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x1EAB DUP3 DUP3 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x1EDA JUMPI PUSH1 0x40 MLOAD PUSH4 0x79BFD401 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH2 0x1EE2 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79BFD401 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F9B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F7D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x1FB2 SWAP2 SWAP1 PUSH2 0x3283 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x20BB JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FDC JUMPI PUSH2 0x1FDC PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x20AB JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2006 JUMPI PUSH2 0x2006 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2038 JUMPI PUSH2 0x2038 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP11 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x2083 JUMPI PUSH2 0x2083 PUSH2 0x3575 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x20B4 DUP2 PUSH2 0x3209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE DUP9 SWAP2 PUSH32 0x32158C6058347C1601B2D12BC696AC6901D8A9A9AA3BA10C27AB0A983E8425A7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x212D DUP2 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x2135 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x21B7 JUMPI PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP6 SWAP2 PUSH32 0x21A4DAD170A6BF476C31BBCF4A16628295B0E450672EEC25D7C93308E05344A1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP2 PUSH2 0x21F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND SWAP6 PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP5 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP4 DUP9 SWAP4 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2291 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2273 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x22B3 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22DC JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1F0C0A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2349 SWAP2 SWAP1 PUSH2 0x358B JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 DUP2 GT ISZERO PUSH2 0x2383 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54CED181 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 PUSH2 0x2397 DUP3 DUP5 PUSH2 0x3283 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2410 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x242D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F01FF13 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x247D PUSH2 0x282F JUMP JUMPDEST PUSH2 0x2486 DUP2 PUSH2 0x2B43 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 ISZERO PUSH2 0x254D JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP6 AND DUP2 LT ISZERO PUSH2 0x24D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24DE DUP6 DUP3 PUSH2 0x3302 JUMP JUMPDEST DUP3 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 SHL NOT AND PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP5 SSTORE PUSH1 0xB DUP1 SLOAD DUP9 SWAP4 SWAP2 SWAP3 PUSH1 0xC SWAP3 PUSH2 0x2523 SWAP3 DUP7 SWAP3 SWAP1 DIV AND PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x21B7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND DUP2 LT ISZERO PUSH2 0x257D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2587 DUP6 DUP3 PUSH2 0x3302 JUMP JUMPDEST DUP3 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND OR DUP4 SSTORE PUSH1 0xB DUP1 SLOAD DUP8 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x25BB SWAP2 DUP6 SWAP2 AND PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x261C JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6C51FDA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x267B JUMPI PUSH1 0x40 MLOAD PUSH4 0x769DD353 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP5 AND SWAP5 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP5 DIV AND SWAP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2729 JUMPI PUSH1 0x4 PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x26D2 JUMPI PUSH2 0x26D2 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 DUP10 DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH2 0x2722 DUP2 PUSH2 0x3209 JUMP JUMPDEST SWAP1 POP PUSH2 0x26B4 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE SWAP1 PUSH2 0x2761 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x2E0A JUMP JUMPDEST POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x277D PUSH1 0x8 DUP7 PUSH2 0x2BEC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND ISZERO PUSH2 0x27D0 JUMPI PUSH1 0xA DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x27AB SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND ISZERO PUSH2 0x2828 JUMPI DUP3 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x2803 SWAP2 SWAP1 PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x267B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP3 SWAP1 SUB PUSH2 0x28AF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x1480 JUMP JUMPDEST PUSH4 0x125FA267 PUSH1 0xE3 SHL PUSH2 0x28C1 DUP4 DUP6 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x28E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2923FEE7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28F6 DUP3 PUSH1 0x4 DUP2 DUP7 PUSH2 0x35D4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2903 SWAP2 SWAP1 PUSH2 0x35FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2943 SWAP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2903 DUP4 DUP4 PUSH2 0x2BF8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2993 DUP5 PUSH2 0x267D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x29BA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2A5B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3E SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x2A5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2AB1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2AB6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2AD8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x950B2479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 SWAP1 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 SWAP1 PUSH1 0x60 ADD PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1480 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2903 DUP4 DUP4 PUSH2 0x2C47 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x2B9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2903 DUP4 DUP4 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2C3F JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1480 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C5E JUMPI PUSH2 0x2C5E PUSH2 0x31DD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2D5A JUMPI PUSH1 0x0 PUSH2 0x2C95 PUSH1 0x1 DUP4 PUSH2 0x3283 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2CA9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3283 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2D0E JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2CC9 JUMPI PUSH2 0x2CC9 PUSH2 0x31DD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2CEC JUMPI PUSH2 0x2CEC PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2D1F JUMPI PUSH2 0x2D1F PUSH2 0x3575 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1480 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2D77 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2D87 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2486 SWAP2 SWAP1 PUSH2 0x2E24 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2DFA JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2DFA JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2DC5 JUMP JUMPDEST POP PUSH2 0x2E06 SWAP3 SWAP2 POP PUSH2 0x2E24 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2486 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2E8C JUMPI PUSH2 0x2E8C PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD PUSH2 0x2EBC DUP2 PUSH2 0x2E39 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2ED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2EEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2EFE JUMPI PUSH2 0x2EFE PUSH2 0x2E4E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x2F0F DUP5 DUP4 ADD PUSH2 0x2E64 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x2F29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2F47 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x2F2E JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2F7C DUP2 PUSH2 0x2E39 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2903 DUP2 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2FFD DUP2 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2F7C DUP2 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0xC0 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x2903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x305D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x3068 DUP2 PUSH2 0x2E39 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x308B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x309F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x30AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x30C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30FF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30E3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2903 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x30CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE DUP5 MLOAD SWAP1 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP6 DUP2 ADD SWAP3 SWAP2 PUSH1 0xC0 DUP7 ADD SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3192 JUMPI DUP6 MLOAD DUP6 AND DUP4 MSTORE SWAP5 DUP4 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3174 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x31B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x321B JUMPI PUSH2 0x321B PUSH2 0x31F3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x323B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x325E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3246 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3279 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3243 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x31F3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x31F3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x31F3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x32DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2D64 JUMPI PUSH2 0x2D64 PUSH2 0x31F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2D64 JUMPI PUSH2 0x2D64 PUSH2 0x31F3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2903 DUP2 PUSH2 0x3322 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x337E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x3393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x33E7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3406 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33F3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3427 JUMPI PUSH2 0x3427 PUSH2 0x2E4E JUMP JUMPDEST PUSH2 0x343B DUP2 PUSH2 0x3435 DUP5 SLOAD PUSH2 0x31A3 JUMP JUMPDEST DUP5 PUSH2 0x33C0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3470 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3458 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3406 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x349F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3480 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x34BD JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xC0 PUSH1 0xA0 DUP4 ADD MSTORE DUP3 MLOAD DUP1 PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x353C DUP2 PUSH1 0xE0 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3243 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0xE0 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2D64 JUMPI PUSH2 0x2D64 PUSH2 0x31F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP2 PUSH1 0x4 DUP6 LT ISZERO PUSH2 0x35CC JUMPI DUP1 DUP2 DUP7 PUSH1 0x4 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x35E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x35F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x3632 JUMPI PUSH2 0x3632 PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD PUSH2 0x3640 DUP2 PUSH2 0x3322 JUMP JUMPDEST DUP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x215A99276330C7BD5E223A17F7321448C5051399 0xB3 DUP15 0xF6 SUB 0x22 0x24 SWAP7 SHL 0xE4 SHL COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"476:8658:16:-:0;;;1357:1;1322:36;;1395:3;1362:36;;1598:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8049:10:10;;373:1:3;8049:10:10;590:59:4;;;;-1:-1:-1;;;590:59:4;;750:2:19;590:59:4;;;732:21:19;789:2;769:18;;;762:30;828:26;808:18;;;801:54;872:18;;590:59:4;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:4;-1:-1:-1;;;;;656:18:4;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;-1:-1:-1;;;;;;;;1693:21:16;;::::1;;::::0;1720:23;::::1;;::::0;1749:37:::1;::::0;;;1792:11:::1;:9;:11::i;:::-;1598:210:::0;;;476:8658;;1536:239:4;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;1103:2:19;1641:52:4;;;1085:21:19;1142:2;1122:18;;;1115:30;1181:25;1161:18;;;1154:53;1224:18;;1641:52:4;901:347:19;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;1890:397:16:-;2075:20:4;:18;:20::i;:::-;1945:315:16::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1945:315:16;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:8:::1;:326:::0;;-1:-1:-1;;;;;;1934:326:16;;;2271:11;;::::1;::::0;-1:-1:-1;2271:11:16::1;1890:397::o:0;1809:162:4:-;1932:7;;-1:-1:-1;;;;;1932:7:4;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:4;;1455:2:19;1910:56:4;;;1437:21:19;1494:2;1474:18;;;1467:30;1533:24;1513:18;;;1506:52;1575:18;;1910:56:4;1253:346:19;1910:56:4;1809:162::o;14:175:19:-;92:13;;-1:-1:-1;;;;;134:30:19;;124:41;;114:69;;179:1;176;169:12;114:69;14:175;;;:::o;194:349::-;279:6;287;295;348:2;336:9;327:7;323:23;319:32;316:52;;;364:1;361;354:12;316:52;387:39;416:9;387:39;:::i;:::-;377:49;;445:48;489:2;478:9;474:18;445:48;:::i;:::-;435:58;;533:2;522:9;518:18;512:25;502:35;;194:349;;;;;:::o;1253:346::-;476:8658:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@LINK_1061":{"entryPoint":null,"id":1061,"parameterSlots":0,"returnSlots":0},"@LINK_NATIVE_FEED_1065":{"entryPoint":null,"id":1065,"parameterSlots":0,"returnSlots":0},"@MAX_CONSUMERS_1068":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":0},"@_add_473":{"entryPoint":11256,"id":473,"parameterSlots":2,"returnSlots":1},"@_argsToBytes_2693":{"entryPoint":10506,"id":2693,"parameterSlots":1,"returnSlots":1},"@_at_607":{"entryPoint":11335,"id":607,"parameterSlots":2,"returnSlots":1},"@_cancelSubscriptionHelper_2323":{"entryPoint":10631,"id":2323,"parameterSlots":2,"returnSlots":0},"@_chargePayment_3164":{"entryPoint":9353,"id":3164,"parameterSlots":3,"returnSlots":0},"@_contains_576":{"entryPoint":null,"id":576,"parameterSlots":2,"returnSlots":1},"@_deleteSubscription_2252":{"entryPoint":9853,"id":2252,"parameterSlots":1,"returnSlots":2},"@_fromBytes_3261":{"entryPoint":10370,"id":3261,"parameterSlots":2,"returnSlots":1},"@_length_590":{"entryPoint":null,"id":590,"parameterSlots":1,"returnSlots":1},"@_nonReentrant_1276":{"entryPoint":9808,"id":1276,"parameterSlots":0,"returnSlots":0},"@_onlySubOwner_2367":{"entryPoint":9702,"id":2367,"parameterSlots":1,"returnSlots":0},"@_remove_557":{"entryPoint":11377,"id":557,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_229":{"entryPoint":11075,"id":229,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_242":{"entryPoint":10287,"id":242,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_195":{"entryPoint":4577,"id":195,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_2089":{"entryPoint":7326,"id":2089,"parameterSlots":1,"returnSlots":0},"@addConsumer_2154":{"entryPoint":7586,"id":2154,"parameterSlots":2,"returnSlots":0},"@add_924":{"entryPoint":10619,"id":924,"parameterSlots":2,"returnSlots":1},"@at_1002":{"entryPoint":11063,"id":1002,"parameterSlots":2,"returnSlots":1},"@cancelSubscription_3509":{"entryPoint":3196,"id":3509,"parameterSlots":2,"returnSlots":0},"@consumerIsAdded_2851":{"entryPoint":5208,"id":2851,"parameterSlots":2,"returnSlots":1},"@createSubscription_1979":{"entryPoint":6158,"id":1979,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWordsWithOverride_3093":{"entryPoint":2028,"id":3093,"parameterSlots":3,"returnSlots":0},"@fulfillRandomWords_2892":{"entryPoint":4752,"id":2892,"parameterSlots":2,"returnSlots":0},"@fundSubscriptionWithNative_1746":{"entryPoint":5254,"id":1746,"parameterSlots":1,"returnSlots":0},"@fundSubscription_3219":{"entryPoint":3452,"id":3219,"parameterSlots":2,"returnSlots":0},"@getActiveSubscriptionIds_1886":{"entryPoint":7069,"id":1886,"parameterSlots":2,"returnSlots":1},"@getSubscription_1802":{"entryPoint":8637,"id":1802,"parameterSlots":1,"returnSlots":5},"@i_base_fee_2711":{"entryPoint":null,"id":2711,"parameterSlots":0,"returnSlots":0},"@i_gas_price_2713":{"entryPoint":null,"id":2713,"parameterSlots":0,"returnSlots":0},"@i_wei_per_unit_link_2715":{"entryPoint":null,"id":2715,"parameterSlots":0,"returnSlots":0},"@length_981":{"entryPoint":11053,"id":981,"parameterSlots":1,"returnSlots":1},"@onTokenTransfer_1687":{"entryPoint":6628,"id":1687,"parameterSlots":4,"returnSlots":0},"@ownerCancelSubscription_1353":{"entryPoint":6997,"id":1353,"parameterSlots":1,"returnSlots":0},"@owner_205":{"entryPoint":null,"id":205,"parameterSlots":0,"returnSlots":1},"@pendingRequestExists_3521":{"entryPoint":4068,"id":3521,"parameterSlots":1,"returnSlots":1},"@recoverFunds_1430":{"entryPoint":8875,"id":1430,"parameterSlots":1,"returnSlots":0},"@recoverNativeFunds_1496":{"entryPoint":4788,"id":1496,"parameterSlots":1,"returnSlots":0},"@removeConsumer_3460":{"entryPoint":7829,"id":3460,"parameterSlots":2,"returnSlots":0},"@remove_945":{"entryPoint":11244,"id":945,"parameterSlots":2,"returnSlots":1},"@requestRandomWords_3353":{"entryPoint":5546,"id":3353,"parameterSlots":1,"returnSlots":1},"@requestSubscriptionOwnerTransfer_2020":{"entryPoint":8483,"id":2020,"parameterSlots":2,"returnSlots":0},"@s_config_1256":{"entryPoint":null,"id":1256,"parameterSlots":0,"returnSlots":0},"@s_currentSubNonce_1163":{"entryPoint":null,"id":1163,"parameterSlots":0,"returnSlots":0},"@s_totalBalance_1168":{"entryPoint":null,"id":1168,"parameterSlots":0,"returnSlots":0},"@s_totalNativeBalance_1170":{"entryPoint":null,"id":1170,"parameterSlots":0,"returnSlots":0},"@setConfig_2834":{"entryPoint":5071,"id":2834,"parameterSlots":0,"returnSlots":0},"@setLINKAndLINKNativeFeed_1321":{"entryPoint":4481,"id":1321,"parameterSlots":2,"returnSlots":0},"@transferOwnership_159":{"entryPoint":9333,"id":159,"parameterSlots":1,"returnSlots":0},"@withdrawNative_1597":{"entryPoint":3728,"id":1597,"parameterSlots":1,"returnSlots":0},"@withdraw_1551":{"entryPoint":4095,"id":1551,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":12201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12255,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":12359,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":13104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_ExtraArgsV1_$2665_memory_ptr":{"entryPoint":13822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_RandomWordsRequest_$2678_calldata_ptr":{"entryPoint":12301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":13517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":12230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":12119,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11924,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":12167,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint32":{"entryPoint":13210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":12495,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_bytes32_t_address_t_uint64__to_t_address_t_bytes32_t_address_t_uint64__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96_t_uint96__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$297__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_LinkTokenInterface_$420__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExtraArgsV1_$2665_memory_ptr__to_t_struct$_ExtraArgsV1_$2665_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__to_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12834,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13553,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool_t_bool_t_bool__to_t_uint256_t_uint96_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12573,"id":null,"parameterSlots":6,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":13133,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":11876,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":13780,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":12973,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":13653,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":13026,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":12992,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":12950,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12931,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":13058,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":13248,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4":{"entryPoint":13732,"id":null,"parameterSlots":2,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":13326,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12867,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":12707,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":12809,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":12787,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":13685,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12765,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11854,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":11833,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":13090,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22612:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"313:551:19","statements":[{"nodeType":"YulAssignment","src":"323:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"335:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"346:3:19","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"331:3:19"},"nodeType":"YulFunctionCall","src":"331:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"323:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"366:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"381:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"389:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"377:3:19"},"nodeType":"YulFunctionCall","src":"377:19:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"359:6:19"},"nodeType":"YulFunctionCall","src":"359:38:19"},"nodeType":"YulExpressionStatement","src":"359:38:19"},{"nodeType":"YulVariableDeclaration","src":"406:20:19","value":{"kind":"number","nodeType":"YulLiteral","src":"416:10:19","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"410:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"446:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"457:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"442:3:19"},"nodeType":"YulFunctionCall","src":"442:18:19"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"466:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"474:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"462:3:19"},"nodeType":"YulFunctionCall","src":"462:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"435:6:19"},"nodeType":"YulFunctionCall","src":"435:43:19"},"nodeType":"YulExpressionStatement","src":"435:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"498:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"509:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"494:3:19"},"nodeType":"YulFunctionCall","src":"494:18:19"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"528:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"521:6:19"},"nodeType":"YulFunctionCall","src":"521:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"514:6:19"},"nodeType":"YulFunctionCall","src":"514:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"487:6:19"},"nodeType":"YulFunctionCall","src":"487:50:19"},"nodeType":"YulExpressionStatement","src":"487:50:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"557:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"568:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"553:3:19"},"nodeType":"YulFunctionCall","src":"553:18:19"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"577:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"585:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"573:3:19"},"nodeType":"YulFunctionCall","src":"573:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"546:6:19"},"nodeType":"YulFunctionCall","src":"546:43:19"},"nodeType":"YulExpressionStatement","src":"546:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"609:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"620:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"605:3:19"},"nodeType":"YulFunctionCall","src":"605:19:19"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"630:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"638:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"626:3:19"},"nodeType":"YulFunctionCall","src":"626:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"598:6:19"},"nodeType":"YulFunctionCall","src":"598:44:19"},"nodeType":"YulExpressionStatement","src":"598:44:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"662:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"673:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"658:3:19"},"nodeType":"YulFunctionCall","src":"658:19:19"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"683:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"691:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"679:3:19"},"nodeType":"YulFunctionCall","src":"679:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"651:6:19"},"nodeType":"YulFunctionCall","src":"651:44:19"},"nodeType":"YulExpressionStatement","src":"651:44:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"715:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"726:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"711:3:19"},"nodeType":"YulFunctionCall","src":"711:19:19"},{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"736:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"744:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"732:3:19"},"nodeType":"YulFunctionCall","src":"732:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"704:6:19"},"nodeType":"YulFunctionCall","src":"704:44:19"},"nodeType":"YulExpressionStatement","src":"704:44:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"768:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"779:3:19","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"764:3:19"},"nodeType":"YulFunctionCall","src":"764:19:19"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"789:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"797:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"785:3:19"},"nodeType":"YulFunctionCall","src":"785:17:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"757:6:19"},"nodeType":"YulFunctionCall","src":"757:46:19"},"nodeType":"YulExpressionStatement","src":"757:46:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"823:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"834:3:19","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"819:3:19"},"nodeType":"YulFunctionCall","src":"819:19:19"},{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"844:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"852:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"840:3:19"},"nodeType":"YulFunctionCall","src":"840:17:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"812:6:19"},"nodeType":"YulFunctionCall","src":"812:46:19"},"nodeType":"YulExpressionStatement","src":"812:46:19"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__to_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"218:9:19","type":""},{"name":"value8","nodeType":"YulTypedName","src":"229:6:19","type":""},{"name":"value7","nodeType":"YulTypedName","src":"237:6:19","type":""},{"name":"value6","nodeType":"YulTypedName","src":"245:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"253:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"261:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"269:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"277:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"285:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"293:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"304:4:19","type":""}],"src":"14:850:19"},{"body":{"nodeType":"YulBlock","src":"914:86:19","statements":[{"body":{"nodeType":"YulBlock","src":"978:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"987:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"990:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"980:6:19"},"nodeType":"YulFunctionCall","src":"980:12:19"},"nodeType":"YulExpressionStatement","src":"980:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"948:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"963:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"968:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"959:3:19"},"nodeType":"YulFunctionCall","src":"959:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"972:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"955:3:19"},"nodeType":"YulFunctionCall","src":"955:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"944:3:19"},"nodeType":"YulFunctionCall","src":"944:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"934:2:19"},"nodeType":"YulFunctionCall","src":"934:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"927:6:19"},"nodeType":"YulFunctionCall","src":"927:50:19"},"nodeType":"YulIf","src":"924:70:19"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"903:5:19","type":""}],"src":"869:131:19"},{"body":{"nodeType":"YulBlock","src":"1037:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1054:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1061:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1066:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1057:3:19"},"nodeType":"YulFunctionCall","src":"1057:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1047:6:19"},"nodeType":"YulFunctionCall","src":"1047:31:19"},"nodeType":"YulExpressionStatement","src":"1047:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1094:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1097:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1087:6:19"},"nodeType":"YulFunctionCall","src":"1087:15:19"},"nodeType":"YulExpressionStatement","src":"1087:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1118:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1121:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1111:6:19"},"nodeType":"YulFunctionCall","src":"1111:15:19"},"nodeType":"YulExpressionStatement","src":"1111:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1005:127:19"},{"body":{"nodeType":"YulBlock","src":"1182:230:19","statements":[{"nodeType":"YulAssignment","src":"1192:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1208:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1202:5:19"},"nodeType":"YulFunctionCall","src":"1202:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1192:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"1220:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1242:6:19"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1258:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"1264:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1254:3:19"},"nodeType":"YulFunctionCall","src":"1254:13:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1273:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1269:3:19"},"nodeType":"YulFunctionCall","src":"1269:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1250:3:19"},"nodeType":"YulFunctionCall","src":"1250:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:19"},"nodeType":"YulFunctionCall","src":"1238:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1224:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1353:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1355:16:19"},"nodeType":"YulFunctionCall","src":"1355:18:19"},"nodeType":"YulExpressionStatement","src":"1355:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1296:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"1308:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1293:2:19"},"nodeType":"YulFunctionCall","src":"1293:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1332:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1344:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1329:2:19"},"nodeType":"YulFunctionCall","src":"1329:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1290:2:19"},"nodeType":"YulFunctionCall","src":"1290:62:19"},"nodeType":"YulIf","src":"1287:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1391:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1395:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1384:6:19"},"nodeType":"YulFunctionCall","src":"1384:22:19"},"nodeType":"YulExpressionStatement","src":"1384:22:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1162:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1171:6:19","type":""}],"src":"1137:275:19"},{"body":{"nodeType":"YulBlock","src":"1546:1020:19","statements":[{"body":{"nodeType":"YulBlock","src":"1592:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1601:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1604:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1594:6:19"},"nodeType":"YulFunctionCall","src":"1594:12:19"},"nodeType":"YulExpressionStatement","src":"1594:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1567:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1576:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1563:3:19"},"nodeType":"YulFunctionCall","src":"1563:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1588:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1559:3:19"},"nodeType":"YulFunctionCall","src":"1559:32:19"},"nodeType":"YulIf","src":"1556:52:19"},{"nodeType":"YulAssignment","src":"1617:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1640:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1627:12:19"},"nodeType":"YulFunctionCall","src":"1627:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1617:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"1659:12:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1669:2:19","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1663:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1680:45:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1710:9:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1721:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1706:3:19"},"nodeType":"YulFunctionCall","src":"1706:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1693:12:19"},"nodeType":"YulFunctionCall","src":"1693:32:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1684:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1759:5:19"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1734:24:19"},"nodeType":"YulFunctionCall","src":"1734:31:19"},"nodeType":"YulExpressionStatement","src":"1734:31:19"},{"nodeType":"YulAssignment","src":"1774:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"1784:5:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1774:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"1798:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1829:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1840:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1825:3:19"},"nodeType":"YulFunctionCall","src":"1825:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1812:12:19"},"nodeType":"YulFunctionCall","src":"1812:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1802:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1853:28:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1863:18:19","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1857:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1908:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1917:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1920:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1910:6:19"},"nodeType":"YulFunctionCall","src":"1910:12:19"},"nodeType":"YulExpressionStatement","src":"1910:12:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1896:6:19"},{"name":"_2","nodeType":"YulIdentifier","src":"1904:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1893:2:19"},"nodeType":"YulFunctionCall","src":"1893:14:19"},"nodeType":"YulIf","src":"1890:34:19"},{"nodeType":"YulVariableDeclaration","src":"1933:32:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1958:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1943:3:19"},"nodeType":"YulFunctionCall","src":"1943:22:19"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1937:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2013:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2022:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2025:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2015:6:19"},"nodeType":"YulFunctionCall","src":"2015:12:19"},"nodeType":"YulExpressionStatement","src":"2015:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1992:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"1996:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1988:3:19"},"nodeType":"YulFunctionCall","src":"1988:13:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2003:7:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1984:3:19"},"nodeType":"YulFunctionCall","src":"1984:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1977:6:19"},"nodeType":"YulFunctionCall","src":"1977:35:19"},"nodeType":"YulIf","src":"1974:55:19"},{"nodeType":"YulVariableDeclaration","src":"2038:26:19","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2061:2:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2048:12:19"},"nodeType":"YulFunctionCall","src":"2048:16:19"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2042:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2087:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2089:16:19"},"nodeType":"YulFunctionCall","src":"2089:18:19"},"nodeType":"YulExpressionStatement","src":"2089:18:19"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"2079:2:19"},{"name":"_2","nodeType":"YulIdentifier","src":"2083:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2076:2:19"},"nodeType":"YulFunctionCall","src":"2076:10:19"},"nodeType":"YulIf","src":"2073:36:19"},{"nodeType":"YulVariableDeclaration","src":"2118:20:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2132:1:19","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"2135:2:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2128:3:19"},"nodeType":"YulFunctionCall","src":"2128:10:19"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"2122:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2147:39:19","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"2178:2:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2182:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2174:3:19"},"nodeType":"YulFunctionCall","src":"2174:11:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2158:15:19"},"nodeType":"YulFunctionCall","src":"2158:28:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2151:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2195:16:19","value":{"name":"dst","nodeType":"YulIdentifier","src":"2208:3:19"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"2199:5:19","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2227:3:19"},{"name":"_4","nodeType":"YulIdentifier","src":"2232:2:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2220:6:19"},"nodeType":"YulFunctionCall","src":"2220:15:19"},"nodeType":"YulExpressionStatement","src":"2220:15:19"},{"nodeType":"YulAssignment","src":"2244:19:19","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2255:3:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2260:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2251:3:19"},"nodeType":"YulFunctionCall","src":"2251:12:19"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2244:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"2272:34:19","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2294:2:19"},{"name":"_5","nodeType":"YulIdentifier","src":"2298:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2290:3:19"},"nodeType":"YulFunctionCall","src":"2290:11:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2303:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2286:3:19"},"nodeType":"YulFunctionCall","src":"2286:20:19"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2276:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2338:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2347:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2350:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2340:6:19"},"nodeType":"YulFunctionCall","src":"2340:12:19"},"nodeType":"YulExpressionStatement","src":"2340:12:19"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2321:6:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2329:7:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2318:2:19"},"nodeType":"YulFunctionCall","src":"2318:19:19"},"nodeType":"YulIf","src":"2315:39:19"},{"nodeType":"YulVariableDeclaration","src":"2363:22:19","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2378:2:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2382:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2374:3:19"},"nodeType":"YulFunctionCall","src":"2374:11:19"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2367:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2450:86:19","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2471:3:19"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2489:3:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2476:12:19"},"nodeType":"YulFunctionCall","src":"2476:17:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2464:6:19"},"nodeType":"YulFunctionCall","src":"2464:30:19"},"nodeType":"YulExpressionStatement","src":"2464:30:19"},{"nodeType":"YulAssignment","src":"2507:19:19","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2518:3:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2523:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2514:3:19"},"nodeType":"YulFunctionCall","src":"2514:12:19"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2507:3:19"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2405:3:19"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2410:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2402:2:19"},"nodeType":"YulFunctionCall","src":"2402:15:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2418:23:19","statements":[{"nodeType":"YulAssignment","src":"2420:19:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2431:3:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2436:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2427:3:19"},"nodeType":"YulFunctionCall","src":"2427:12:19"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2420:3:19"}]}]},"pre":{"nodeType":"YulBlock","src":"2398:3:19","statements":[]},"src":"2394:142:19"},{"nodeType":"YulAssignment","src":"2545:15:19","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"2555:5:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2545:6:19"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1496:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1507:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1519:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1527:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1535:6:19","type":""}],"src":"1417:1149:19"},{"body":{"nodeType":"YulBlock","src":"2658:228:19","statements":[{"body":{"nodeType":"YulBlock","src":"2704:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2713:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2716:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2706:6:19"},"nodeType":"YulFunctionCall","src":"2706:12:19"},"nodeType":"YulExpressionStatement","src":"2706:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2679:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2688:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2675:3:19"},"nodeType":"YulFunctionCall","src":"2675:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2700:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2671:3:19"},"nodeType":"YulFunctionCall","src":"2671:32:19"},"nodeType":"YulIf","src":"2668:52:19"},{"nodeType":"YulAssignment","src":"2729:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2752:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2739:12:19"},"nodeType":"YulFunctionCall","src":"2739:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2729:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"2771:45:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2801:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2812:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2797:3:19"},"nodeType":"YulFunctionCall","src":"2797:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2784:12:19"},"nodeType":"YulFunctionCall","src":"2784:32:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2775:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2850:5:19"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2825:24:19"},"nodeType":"YulFunctionCall","src":"2825:31:19"},"nodeType":"YulExpressionStatement","src":"2825:31:19"},{"nodeType":"YulAssignment","src":"2865:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"2875:5:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2865:6:19"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2616:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2627:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2639:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2647:6:19","type":""}],"src":"2571:315:19"},{"body":{"nodeType":"YulBlock","src":"2978:161:19","statements":[{"body":{"nodeType":"YulBlock","src":"3024:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3033:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3036:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3026:6:19"},"nodeType":"YulFunctionCall","src":"3026:12:19"},"nodeType":"YulExpressionStatement","src":"3026:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2999:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3008:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2995:3:19"},"nodeType":"YulFunctionCall","src":"2995:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3020:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2991:3:19"},"nodeType":"YulFunctionCall","src":"2991:32:19"},"nodeType":"YulIf","src":"2988:52:19"},{"nodeType":"YulAssignment","src":"3049:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3072:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3059:12:19"},"nodeType":"YulFunctionCall","src":"3059:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3049:6:19"}]},{"nodeType":"YulAssignment","src":"3091:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3118:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3129:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3114:3:19"},"nodeType":"YulFunctionCall","src":"3114:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3101:12:19"},"nodeType":"YulFunctionCall","src":"3101:32:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3091:6:19"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2936:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2947:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2959:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2967:6:19","type":""}],"src":"2891:248:19"},{"body":{"nodeType":"YulBlock","src":"3243:76:19","statements":[{"nodeType":"YulAssignment","src":"3253:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3265:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3276:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3261:3:19"},"nodeType":"YulFunctionCall","src":"3261:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3253:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3295:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"3306:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3288:6:19"},"nodeType":"YulFunctionCall","src":"3288:25:19"},"nodeType":"YulExpressionStatement","src":"3288:25:19"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3223:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3234:4:19","type":""}],"src":"3144:175:19"},{"body":{"nodeType":"YulBlock","src":"3423:109:19","statements":[{"nodeType":"YulAssignment","src":"3433:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3445:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3456:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3441:3:19"},"nodeType":"YulFunctionCall","src":"3441:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3433:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3475:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3490:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3498:26:19","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3486:3:19"},"nodeType":"YulFunctionCall","src":"3486:39:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3468:6:19"},"nodeType":"YulFunctionCall","src":"3468:58:19"},"nodeType":"YulExpressionStatement","src":"3468:58:19"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3392:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3403:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3414:4:19","type":""}],"src":"3324:208:19"},{"body":{"nodeType":"YulBlock","src":"3664:102:19","statements":[{"nodeType":"YulAssignment","src":"3674:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3686:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3697:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3682:3:19"},"nodeType":"YulFunctionCall","src":"3682:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3674:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3716:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3731:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3747:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3752:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3743:3:19"},"nodeType":"YulFunctionCall","src":"3743:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"3756:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3739:3:19"},"nodeType":"YulFunctionCall","src":"3739:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3727:3:19"},"nodeType":"YulFunctionCall","src":"3727:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3709:6:19"},"nodeType":"YulFunctionCall","src":"3709:51:19"},"nodeType":"YulExpressionStatement","src":"3709:51:19"}]},"name":"abi_encode_tuple_t_contract$_LinkTokenInterface_$420__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3633:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3644:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3655:4:19","type":""}],"src":"3537:229:19"},{"body":{"nodeType":"YulBlock","src":"3849:177:19","statements":[{"body":{"nodeType":"YulBlock","src":"3895:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3904:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3907:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3897:6:19"},"nodeType":"YulFunctionCall","src":"3897:12:19"},"nodeType":"YulExpressionStatement","src":"3897:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3870:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3879:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3866:3:19"},"nodeType":"YulFunctionCall","src":"3866:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3891:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3862:3:19"},"nodeType":"YulFunctionCall","src":"3862:32:19"},"nodeType":"YulIf","src":"3859:52:19"},{"nodeType":"YulVariableDeclaration","src":"3920:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3946:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3933:12:19"},"nodeType":"YulFunctionCall","src":"3933:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3924:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3990:5:19"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3965:24:19"},"nodeType":"YulFunctionCall","src":"3965:31:19"},"nodeType":"YulExpressionStatement","src":"3965:31:19"},{"nodeType":"YulAssignment","src":"4005:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"4015:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4005:6:19"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3815:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3826:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3838:6:19","type":""}],"src":"3771:255:19"},{"body":{"nodeType":"YulBlock","src":"4101:110:19","statements":[{"body":{"nodeType":"YulBlock","src":"4147:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4156:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4159:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4149:6:19"},"nodeType":"YulFunctionCall","src":"4149:12:19"},"nodeType":"YulExpressionStatement","src":"4149:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4122:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4131:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4118:3:19"},"nodeType":"YulFunctionCall","src":"4118:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4143:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4114:3:19"},"nodeType":"YulFunctionCall","src":"4114:32:19"},"nodeType":"YulIf","src":"4111:52:19"},{"nodeType":"YulAssignment","src":"4172:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4195:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4182:12:19"},"nodeType":"YulFunctionCall","src":"4182:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4172:6:19"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4067:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4078:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4090:6:19","type":""}],"src":"4031:180:19"},{"body":{"nodeType":"YulBlock","src":"4311:92:19","statements":[{"nodeType":"YulAssignment","src":"4321:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4333:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4344:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4329:3:19"},"nodeType":"YulFunctionCall","src":"4329:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4321:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4363:9:19"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4388:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4381:6:19"},"nodeType":"YulFunctionCall","src":"4381:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4374:6:19"},"nodeType":"YulFunctionCall","src":"4374:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4356:6:19"},"nodeType":"YulFunctionCall","src":"4356:41:19"},"nodeType":"YulExpressionStatement","src":"4356:41:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4280:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4291:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4302:4:19","type":""}],"src":"4216:187:19"},{"body":{"nodeType":"YulBlock","src":"4478:177:19","statements":[{"body":{"nodeType":"YulBlock","src":"4524:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4533:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4536:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4526:6:19"},"nodeType":"YulFunctionCall","src":"4526:12:19"},"nodeType":"YulExpressionStatement","src":"4526:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4499:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4508:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4495:3:19"},"nodeType":"YulFunctionCall","src":"4495:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4520:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4491:3:19"},"nodeType":"YulFunctionCall","src":"4491:32:19"},"nodeType":"YulIf","src":"4488:52:19"},{"nodeType":"YulVariableDeclaration","src":"4549:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4575:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4562:12:19"},"nodeType":"YulFunctionCall","src":"4562:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4553:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4619:5:19"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4594:24:19"},"nodeType":"YulFunctionCall","src":"4594:31:19"},"nodeType":"YulExpressionStatement","src":"4594:31:19"},{"nodeType":"YulAssignment","src":"4634:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"4644:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4634:6:19"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4444:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4455:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4467:6:19","type":""}],"src":"4408:247:19"},{"body":{"nodeType":"YulBlock","src":"4759:89:19","statements":[{"nodeType":"YulAssignment","src":"4769:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4781:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4792:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4777:3:19"},"nodeType":"YulFunctionCall","src":"4777:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4769:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4811:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4826:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4834:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4822:3:19"},"nodeType":"YulFunctionCall","src":"4822:19:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4804:6:19"},"nodeType":"YulFunctionCall","src":"4804:38:19"},"nodeType":"YulExpressionStatement","src":"4804:38:19"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4728:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4739:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4750:4:19","type":""}],"src":"4660:188:19"},{"body":{"nodeType":"YulBlock","src":"4940:301:19","statements":[{"body":{"nodeType":"YulBlock","src":"4986:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4995:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4998:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4988:6:19"},"nodeType":"YulFunctionCall","src":"4988:12:19"},"nodeType":"YulExpressionStatement","src":"4988:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4961:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4970:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4957:3:19"},"nodeType":"YulFunctionCall","src":"4957:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4982:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4953:3:19"},"nodeType":"YulFunctionCall","src":"4953:32:19"},"nodeType":"YulIf","src":"4950:52:19"},{"nodeType":"YulVariableDeclaration","src":"5011:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5037:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5024:12:19"},"nodeType":"YulFunctionCall","src":"5024:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5015:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5081:5:19"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5056:24:19"},"nodeType":"YulFunctionCall","src":"5056:31:19"},"nodeType":"YulExpressionStatement","src":"5056:31:19"},{"nodeType":"YulAssignment","src":"5096:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"5106:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5096:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"5120:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5152:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5163:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5148:3:19"},"nodeType":"YulFunctionCall","src":"5148:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5135:12:19"},"nodeType":"YulFunctionCall","src":"5135:32:19"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"5124:7:19","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5201:7:19"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5176:24:19"},"nodeType":"YulFunctionCall","src":"5176:33:19"},"nodeType":"YulExpressionStatement","src":"5176:33:19"},{"nodeType":"YulAssignment","src":"5218:17:19","value":{"name":"value_1","nodeType":"YulIdentifier","src":"5228:7:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5218:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4898:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4909:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4921:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4929:6:19","type":""}],"src":"4853:388:19"},{"body":{"nodeType":"YulBlock","src":"5376:102:19","statements":[{"nodeType":"YulAssignment","src":"5386:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5398:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5409:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5394:3:19"},"nodeType":"YulFunctionCall","src":"5394:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5386:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5428:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5443:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5459:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5464:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5455:3:19"},"nodeType":"YulFunctionCall","src":"5455:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"5468:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5451:3:19"},"nodeType":"YulFunctionCall","src":"5451:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5439:3:19"},"nodeType":"YulFunctionCall","src":"5439:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5421:6:19"},"nodeType":"YulFunctionCall","src":"5421:51:19"},"nodeType":"YulExpressionStatement","src":"5421:51:19"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$297__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5345:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5356:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5367:4:19","type":""}],"src":"5246:232:19"},{"body":{"nodeType":"YulBlock","src":"5584:102:19","statements":[{"nodeType":"YulAssignment","src":"5594:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5606:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5617:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5602:3:19"},"nodeType":"YulFunctionCall","src":"5602:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5594:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5636:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5651:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5667:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5672:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5663:3:19"},"nodeType":"YulFunctionCall","src":"5663:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"5676:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5659:3:19"},"nodeType":"YulFunctionCall","src":"5659:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5647:3:19"},"nodeType":"YulFunctionCall","src":"5647:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5629:6:19"},"nodeType":"YulFunctionCall","src":"5629:51:19"},"nodeType":"YulExpressionStatement","src":"5629:51:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5553:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5564:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5575:4:19","type":""}],"src":"5483:203:19"},{"body":{"nodeType":"YulBlock","src":"5799:290:19","statements":[{"body":{"nodeType":"YulBlock","src":"5845:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5854:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5857:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5847:6:19"},"nodeType":"YulFunctionCall","src":"5847:12:19"},"nodeType":"YulExpressionStatement","src":"5847:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5820:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5829:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5816:3:19"},"nodeType":"YulFunctionCall","src":"5816:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5841:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5812:3:19"},"nodeType":"YulFunctionCall","src":"5812:32:19"},"nodeType":"YulIf","src":"5809:52:19"},{"nodeType":"YulVariableDeclaration","src":"5870:37:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5897:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5884:12:19"},"nodeType":"YulFunctionCall","src":"5884:23:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5874:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"5950:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5959:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5962:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5952:6:19"},"nodeType":"YulFunctionCall","src":"5952:12:19"},"nodeType":"YulExpressionStatement","src":"5952:12:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5922:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5930:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5919:2:19"},"nodeType":"YulFunctionCall","src":"5919:30:19"},"nodeType":"YulIf","src":"5916:50:19"},{"nodeType":"YulVariableDeclaration","src":"5975:32:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5989:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6000:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5985:3:19"},"nodeType":"YulFunctionCall","src":"5985:22:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5979:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"6046:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6055:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6058:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6048:6:19"},"nodeType":"YulFunctionCall","src":"6048:12:19"},"nodeType":"YulExpressionStatement","src":"6048:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6027:7:19"},{"name":"_1","nodeType":"YulIdentifier","src":"6036:2:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6023:3:19"},"nodeType":"YulFunctionCall","src":"6023:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"6041:3:19","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6019:3:19"},"nodeType":"YulFunctionCall","src":"6019:26:19"},"nodeType":"YulIf","src":"6016:46:19"},{"nodeType":"YulAssignment","src":"6071:12:19","value":{"name":"_1","nodeType":"YulIdentifier","src":"6081:2:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6071:6:19"}]}]},"name":"abi_decode_tuple_t_struct$_RandomWordsRequest_$2678_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5765:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5776:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5788:6:19","type":""}],"src":"5691:398:19"},{"body":{"nodeType":"YulBlock","src":"6195:76:19","statements":[{"nodeType":"YulAssignment","src":"6205:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6217:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6228:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6213:3:19"},"nodeType":"YulFunctionCall","src":"6213:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6205:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6247:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"6258:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6240:6:19"},"nodeType":"YulFunctionCall","src":"6240:25:19"},"nodeType":"YulExpressionStatement","src":"6240:25:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6164:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6175:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6186:4:19","type":""}],"src":"6094:177:19"},{"body":{"nodeType":"YulBlock","src":"6375:101:19","statements":[{"nodeType":"YulAssignment","src":"6385:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6397:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6408:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6393:3:19"},"nodeType":"YulFunctionCall","src":"6393:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6385:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6427:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6442:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6450:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6438:3:19"},"nodeType":"YulFunctionCall","src":"6438:31:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6420:6:19"},"nodeType":"YulFunctionCall","src":"6420:50:19"},"nodeType":"YulExpressionStatement","src":"6420:50:19"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6344:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6355:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6366:4:19","type":""}],"src":"6276:200:19"},{"body":{"nodeType":"YulBlock","src":"6604:671:19","statements":[{"body":{"nodeType":"YulBlock","src":"6650:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6659:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6662:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6652:6:19"},"nodeType":"YulFunctionCall","src":"6652:12:19"},"nodeType":"YulExpressionStatement","src":"6652:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6625:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6634:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6621:3:19"},"nodeType":"YulFunctionCall","src":"6621:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"6646:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6617:3:19"},"nodeType":"YulFunctionCall","src":"6617:32:19"},"nodeType":"YulIf","src":"6614:52:19"},{"nodeType":"YulVariableDeclaration","src":"6675:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6701:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6688:12:19"},"nodeType":"YulFunctionCall","src":"6688:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6679:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6745:5:19"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6720:24:19"},"nodeType":"YulFunctionCall","src":"6720:31:19"},"nodeType":"YulExpressionStatement","src":"6720:31:19"},{"nodeType":"YulAssignment","src":"6760:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"6770:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6760:6:19"}]},{"nodeType":"YulAssignment","src":"6784:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6811:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6822:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6807:3:19"},"nodeType":"YulFunctionCall","src":"6807:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6794:12:19"},"nodeType":"YulFunctionCall","src":"6794:32:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6784:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"6835:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6866:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6877:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6862:3:19"},"nodeType":"YulFunctionCall","src":"6862:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6849:12:19"},"nodeType":"YulFunctionCall","src":"6849:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6839:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6890:28:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6900:18:19","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6894:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"6945:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6954:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6957:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6947:6:19"},"nodeType":"YulFunctionCall","src":"6947:12:19"},"nodeType":"YulExpressionStatement","src":"6947:12:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6933:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"6941:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6930:2:19"},"nodeType":"YulFunctionCall","src":"6930:14:19"},"nodeType":"YulIf","src":"6927:34:19"},{"nodeType":"YulVariableDeclaration","src":"6970:32:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6984:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6995:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6980:3:19"},"nodeType":"YulFunctionCall","src":"6980:22:19"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6974:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"7050:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7059:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7062:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7052:6:19"},"nodeType":"YulFunctionCall","src":"7052:12:19"},"nodeType":"YulExpressionStatement","src":"7052:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7029:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"7033:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:19"},"nodeType":"YulFunctionCall","src":"7025:13:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7040:7:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7021:3:19"},"nodeType":"YulFunctionCall","src":"7021:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7014:6:19"},"nodeType":"YulFunctionCall","src":"7014:35:19"},"nodeType":"YulIf","src":"7011:55:19"},{"nodeType":"YulVariableDeclaration","src":"7075:30:19","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7102:2:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7089:12:19"},"nodeType":"YulFunctionCall","src":"7089:16:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7079:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"7132:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7141:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7144:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7134:6:19"},"nodeType":"YulFunctionCall","src":"7134:12:19"},"nodeType":"YulExpressionStatement","src":"7134:12:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7120:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"7128:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7117:2:19"},"nodeType":"YulFunctionCall","src":"7117:14:19"},"nodeType":"YulIf","src":"7114:34:19"},{"body":{"nodeType":"YulBlock","src":"7198:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7207:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7210:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7200:6:19"},"nodeType":"YulFunctionCall","src":"7200:12:19"},"nodeType":"YulExpressionStatement","src":"7200:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7171:2:19"},{"name":"length","nodeType":"YulIdentifier","src":"7175:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7167:3:19"},"nodeType":"YulFunctionCall","src":"7167:15:19"},{"kind":"number","nodeType":"YulLiteral","src":"7184:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7163:3:19"},"nodeType":"YulFunctionCall","src":"7163:24:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7189:7:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7160:2:19"},"nodeType":"YulFunctionCall","src":"7160:37:19"},"nodeType":"YulIf","src":"7157:57:19"},{"nodeType":"YulAssignment","src":"7223:21:19","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7237:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"7241:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7233:3:19"},"nodeType":"YulFunctionCall","src":"7233:11:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7223:6:19"}]},{"nodeType":"YulAssignment","src":"7253:16:19","value":{"name":"length","nodeType":"YulIdentifier","src":"7263:6:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7253:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6546:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6557:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6569:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6577:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6585:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6593:6:19","type":""}],"src":"6481:794:19"},{"body":{"nodeType":"YulBlock","src":"7341:374:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7351:26:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7371:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7365:5:19"},"nodeType":"YulFunctionCall","src":"7365:12:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7355:6:19","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7393:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"7398:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7386:6:19"},"nodeType":"YulFunctionCall","src":"7386:19:19"},"nodeType":"YulExpressionStatement","src":"7386:19:19"},{"nodeType":"YulVariableDeclaration","src":"7414:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7424:4:19","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7418:2:19","type":""}]},{"nodeType":"YulAssignment","src":"7437:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7448:3:19"},{"name":"_1","nodeType":"YulIdentifier","src":"7453:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7444:3:19"},"nodeType":"YulFunctionCall","src":"7444:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7437:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"7465:28:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7483:5:19"},{"name":"_1","nodeType":"YulIdentifier","src":"7490:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7479:3:19"},"nodeType":"YulFunctionCall","src":"7479:14:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7469:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7502:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7511:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7506:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"7570:120:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7591:3:19"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7602:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7596:5:19"},"nodeType":"YulFunctionCall","src":"7596:13:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7584:6:19"},"nodeType":"YulFunctionCall","src":"7584:26:19"},"nodeType":"YulExpressionStatement","src":"7584:26:19"},{"nodeType":"YulAssignment","src":"7623:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7634:3:19"},{"name":"_1","nodeType":"YulIdentifier","src":"7639:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7630:3:19"},"nodeType":"YulFunctionCall","src":"7630:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7623:3:19"}]},{"nodeType":"YulAssignment","src":"7655:25:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7669:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"7677:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7665:3:19"},"nodeType":"YulFunctionCall","src":"7665:15:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7655:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7532:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"7535:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7529:2:19"},"nodeType":"YulFunctionCall","src":"7529:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7543:18:19","statements":[{"nodeType":"YulAssignment","src":"7545:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7554:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"7557:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7550:3:19"},"nodeType":"YulFunctionCall","src":"7550:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7545:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"7525:3:19","statements":[]},"src":"7521:169:19"},{"nodeType":"YulAssignment","src":"7699:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"7706:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7699:3:19"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7318:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7325:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7333:3:19","type":""}],"src":"7280:435:19"},{"body":{"nodeType":"YulBlock","src":"7871:110:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7888:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7899:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7881:6:19"},"nodeType":"YulFunctionCall","src":"7881:21:19"},"nodeType":"YulExpressionStatement","src":"7881:21:19"},{"nodeType":"YulAssignment","src":"7911:64:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7948:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7960:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7971:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7956:3:19"},"nodeType":"YulFunctionCall","src":"7956:18:19"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7919:28:19"},"nodeType":"YulFunctionCall","src":"7919:56:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7911:4:19"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7840:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7851:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7862:4:19","type":""}],"src":"7720:261:19"},{"body":{"nodeType":"YulBlock","src":"8243:801:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8253:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8271:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8282:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8267:3:19"},"nodeType":"YulFunctionCall","src":"8267:19:19"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"8257:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8295:36:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8305:26:19","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8299:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8347:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8362:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"8370:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8358:3:19"},"nodeType":"YulFunctionCall","src":"8358:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8340:6:19"},"nodeType":"YulFunctionCall","src":"8340:34:19"},"nodeType":"YulExpressionStatement","src":"8340:34:19"},{"nodeType":"YulVariableDeclaration","src":"8383:12:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8393:2:19","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8387:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8415:9:19"},{"name":"_2","nodeType":"YulIdentifier","src":"8426:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8411:3:19"},"nodeType":"YulFunctionCall","src":"8411:18:19"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8435:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"8443:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8431:3:19"},"nodeType":"YulFunctionCall","src":"8431:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8404:6:19"},"nodeType":"YulFunctionCall","src":"8404:43:19"},"nodeType":"YulExpressionStatement","src":"8404:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8467:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8478:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8463:3:19"},"nodeType":"YulFunctionCall","src":"8463:18:19"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8487:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8495:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8483:3:19"},"nodeType":"YulFunctionCall","src":"8483:31:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8456:6:19"},"nodeType":"YulFunctionCall","src":"8456:59:19"},"nodeType":"YulExpressionStatement","src":"8456:59:19"},{"nodeType":"YulVariableDeclaration","src":"8524:29:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8542:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8547:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8538:3:19"},"nodeType":"YulFunctionCall","src":"8538:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"8551:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8534:3:19"},"nodeType":"YulFunctionCall","src":"8534:19:19"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"8528:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8573:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8584:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8569:3:19"},"nodeType":"YulFunctionCall","src":"8569:18:19"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8593:6:19"},{"name":"_3","nodeType":"YulIdentifier","src":"8601:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8589:3:19"},"nodeType":"YulFunctionCall","src":"8589:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8562:6:19"},"nodeType":"YulFunctionCall","src":"8562:43:19"},"nodeType":"YulExpressionStatement","src":"8562:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8625:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8636:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8621:3:19"},"nodeType":"YulFunctionCall","src":"8621:19:19"},{"kind":"number","nodeType":"YulLiteral","src":"8642:3:19","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8614:6:19"},"nodeType":"YulFunctionCall","src":"8614:32:19"},"nodeType":"YulExpressionStatement","src":"8614:32:19"},{"nodeType":"YulVariableDeclaration","src":"8655:17:19","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"8666:6:19"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"8659:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8681:27:19","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8701:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8695:5:19"},"nodeType":"YulFunctionCall","src":"8695:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8685:6:19","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"8724:6:19"},{"name":"length","nodeType":"YulIdentifier","src":"8732:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8717:6:19"},"nodeType":"YulFunctionCall","src":"8717:22:19"},"nodeType":"YulExpressionStatement","src":"8717:22:19"},{"nodeType":"YulAssignment","src":"8748:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8759:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8770:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8755:3:19"},"nodeType":"YulFunctionCall","src":"8755:19:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8748:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"8783:29:19","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8801:6:19"},{"name":"_2","nodeType":"YulIdentifier","src":"8809:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8797:3:19"},"nodeType":"YulFunctionCall","src":"8797:15:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8787:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8821:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8830:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8825:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"8889:129:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8910:3:19"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8925:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8919:5:19"},"nodeType":"YulFunctionCall","src":"8919:13:19"},{"name":"_3","nodeType":"YulIdentifier","src":"8934:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8915:3:19"},"nodeType":"YulFunctionCall","src":"8915:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8903:6:19"},"nodeType":"YulFunctionCall","src":"8903:35:19"},"nodeType":"YulExpressionStatement","src":"8903:35:19"},{"nodeType":"YulAssignment","src":"8951:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8962:3:19"},{"name":"_2","nodeType":"YulIdentifier","src":"8967:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8958:3:19"},"nodeType":"YulFunctionCall","src":"8958:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8951:3:19"}]},{"nodeType":"YulAssignment","src":"8983:25:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8997:6:19"},{"name":"_2","nodeType":"YulIdentifier","src":"9005:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8993:3:19"},"nodeType":"YulFunctionCall","src":"8993:15:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8983:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8851:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"8854:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8848:2:19"},"nodeType":"YulFunctionCall","src":"8848:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8862:18:19","statements":[{"nodeType":"YulAssignment","src":"8864:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8873:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"8876:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8869:3:19"},"nodeType":"YulFunctionCall","src":"8869:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8864:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"8844:3:19","statements":[]},"src":"8840:178:19"},{"nodeType":"YulAssignment","src":"9027:11:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"9035:3:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9027:4:19"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8180:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8191:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8199:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8207:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8215:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8223:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8234:4:19","type":""}],"src":"7986:1058:19"},{"body":{"nodeType":"YulBlock","src":"9104:325:19","statements":[{"nodeType":"YulAssignment","src":"9114:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9128:1:19","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"9131:4:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9124:3:19"},"nodeType":"YulFunctionCall","src":"9124:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9114:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"9145:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9175:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"9181:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9171:3:19"},"nodeType":"YulFunctionCall","src":"9171:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"9149:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"9222:31:19","statements":[{"nodeType":"YulAssignment","src":"9224:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9238:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9246:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9234:3:19"},"nodeType":"YulFunctionCall","src":"9234:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9224:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9202:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9195:6:19"},"nodeType":"YulFunctionCall","src":"9195:26:19"},"nodeType":"YulIf","src":"9192:61:19"},{"body":{"nodeType":"YulBlock","src":"9312:111:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9333:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9340:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9345:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9336:3:19"},"nodeType":"YulFunctionCall","src":"9336:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9326:6:19"},"nodeType":"YulFunctionCall","src":"9326:31:19"},"nodeType":"YulExpressionStatement","src":"9326:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9377:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9380:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9370:6:19"},"nodeType":"YulFunctionCall","src":"9370:15:19"},"nodeType":"YulExpressionStatement","src":"9370:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9405:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9408:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9398:6:19"},"nodeType":"YulFunctionCall","src":"9398:15:19"},"nodeType":"YulExpressionStatement","src":"9398:15:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9268:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9291:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9299:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9288:2:19"},"nodeType":"YulFunctionCall","src":"9288:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9265:2:19"},"nodeType":"YulFunctionCall","src":"9265:38:19"},"nodeType":"YulIf","src":"9262:161:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9084:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9093:6:19","type":""}],"src":"9049:380:19"},{"body":{"nodeType":"YulBlock","src":"9563:119:19","statements":[{"nodeType":"YulAssignment","src":"9573:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9585:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9596:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9581:3:19"},"nodeType":"YulFunctionCall","src":"9581:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9573:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9615:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"9626:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9608:6:19"},"nodeType":"YulFunctionCall","src":"9608:25:19"},"nodeType":"YulExpressionStatement","src":"9608:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9653:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9664:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9649:3:19"},"nodeType":"YulFunctionCall","src":"9649:18:19"},{"name":"value1","nodeType":"YulIdentifier","src":"9669:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9642:6:19"},"nodeType":"YulFunctionCall","src":"9642:34:19"},"nodeType":"YulExpressionStatement","src":"9642:34:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9524:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9535:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9543:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9554:4:19","type":""}],"src":"9434:248:19"},{"body":{"nodeType":"YulBlock","src":"9719:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9736:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9743:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9748:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9739:3:19"},"nodeType":"YulFunctionCall","src":"9739:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9729:6:19"},"nodeType":"YulFunctionCall","src":"9729:31:19"},"nodeType":"YulExpressionStatement","src":"9729:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9776:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9779:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9769:6:19"},"nodeType":"YulFunctionCall","src":"9769:15:19"},"nodeType":"YulExpressionStatement","src":"9769:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9800:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9803:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9793:6:19"},"nodeType":"YulFunctionCall","src":"9793:15:19"},"nodeType":"YulExpressionStatement","src":"9793:15:19"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9687:127:19"},{"body":{"nodeType":"YulBlock","src":"9851:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9868:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9875:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9880:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9871:3:19"},"nodeType":"YulFunctionCall","src":"9871:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9861:6:19"},"nodeType":"YulFunctionCall","src":"9861:31:19"},"nodeType":"YulExpressionStatement","src":"9861:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9908:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9911:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9901:6:19"},"nodeType":"YulFunctionCall","src":"9901:15:19"},"nodeType":"YulExpressionStatement","src":"9901:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9932:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9935:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9925:6:19"},"nodeType":"YulFunctionCall","src":"9925:15:19"},"nodeType":"YulExpressionStatement","src":"9925:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9819:127:19"},{"body":{"nodeType":"YulBlock","src":"9998:88:19","statements":[{"body":{"nodeType":"YulBlock","src":"10029:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10031:16:19"},"nodeType":"YulFunctionCall","src":"10031:18:19"},"nodeType":"YulExpressionStatement","src":"10031:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10014:5:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10025:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10021:3:19"},"nodeType":"YulFunctionCall","src":"10021:6:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10011:2:19"},"nodeType":"YulFunctionCall","src":"10011:17:19"},"nodeType":"YulIf","src":"10008:43:19"},{"nodeType":"YulAssignment","src":"10060:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10071:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"10078:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10067:3:19"},"nodeType":"YulFunctionCall","src":"10067:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10060:3:19"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9980:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9990:3:19","type":""}],"src":"9951:135:19"},{"body":{"nodeType":"YulBlock","src":"10270:153:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10287:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"10298:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10280:6:19"},"nodeType":"YulFunctionCall","src":"10280:25:19"},"nodeType":"YulExpressionStatement","src":"10280:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10325:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10336:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10321:3:19"},"nodeType":"YulFunctionCall","src":"10321:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"10341:2:19","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10314:6:19"},"nodeType":"YulFunctionCall","src":"10314:30:19"},"nodeType":"YulExpressionStatement","src":"10314:30:19"},{"nodeType":"YulAssignment","src":"10353:64:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10390:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10402:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10413:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10398:3:19"},"nodeType":"YulFunctionCall","src":"10398:18:19"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"10361:28:19"},"nodeType":"YulFunctionCall","src":"10361:56:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10353:4:19"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10231:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10242:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10250:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10261:4:19","type":""}],"src":"10091:332:19"},{"body":{"nodeType":"YulBlock","src":"10494:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10504:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10513:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10508:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"10573:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10598:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"10603:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10594:3:19"},"nodeType":"YulFunctionCall","src":"10594:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10617:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"10622:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10613:3:19"},"nodeType":"YulFunctionCall","src":"10613:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10607:5:19"},"nodeType":"YulFunctionCall","src":"10607:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10587:6:19"},"nodeType":"YulFunctionCall","src":"10587:39:19"},"nodeType":"YulExpressionStatement","src":"10587:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10534:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"10537:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10531:2:19"},"nodeType":"YulFunctionCall","src":"10531:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10545:19:19","statements":[{"nodeType":"YulAssignment","src":"10547:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10556:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"10559:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10552:3:19"},"nodeType":"YulFunctionCall","src":"10552:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10547:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"10527:3:19","statements":[]},"src":"10523:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10656:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10661:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10652:3:19"},"nodeType":"YulFunctionCall","src":"10652:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"10670:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10645:6:19"},"nodeType":"YulFunctionCall","src":"10645:27:19"},"nodeType":"YulExpressionStatement","src":"10645:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10472:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10477:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"10482:6:19","type":""}],"src":"10428:250:19"},{"body":{"nodeType":"YulBlock","src":"10820:150:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10830:27:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10850:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10844:5:19"},"nodeType":"YulFunctionCall","src":"10844:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10834:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10905:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10913:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10901:3:19"},"nodeType":"YulFunctionCall","src":"10901:17:19"},{"name":"pos","nodeType":"YulIdentifier","src":"10920:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10925:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10866:34:19"},"nodeType":"YulFunctionCall","src":"10866:66:19"},"nodeType":"YulExpressionStatement","src":"10866:66:19"},{"nodeType":"YulAssignment","src":"10941:23:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10952:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10957:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10948:3:19"},"nodeType":"YulFunctionCall","src":"10948:16:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10941:3:19"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10796:3:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10801:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10812:3:19","type":""}],"src":"10683:287:19"},{"body":{"nodeType":"YulBlock","src":"11024:79:19","statements":[{"nodeType":"YulAssignment","src":"11034:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11046:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"11049:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11042:3:19"},"nodeType":"YulFunctionCall","src":"11042:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11034:4:19"}]},{"body":{"nodeType":"YulBlock","src":"11075:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11077:16:19"},"nodeType":"YulFunctionCall","src":"11077:18:19"},"nodeType":"YulExpressionStatement","src":"11077:18:19"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"11066:4:19"},{"name":"x","nodeType":"YulIdentifier","src":"11072:1:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11063:2:19"},"nodeType":"YulFunctionCall","src":"11063:11:19"},"nodeType":"YulIf","src":"11060:37:19"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11006:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"11009:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11015:4:19","type":""}],"src":"10975:128:19"},{"body":{"nodeType":"YulBlock","src":"11160:116:19","statements":[{"nodeType":"YulAssignment","src":"11170:20:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11185:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"11188:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11181:3:19"},"nodeType":"YulFunctionCall","src":"11181:9:19"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11170:7:19"}]},{"body":{"nodeType":"YulBlock","src":"11248:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11250:16:19"},"nodeType":"YulFunctionCall","src":"11250:18:19"},"nodeType":"YulExpressionStatement","src":"11250:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11219:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11212:6:19"},"nodeType":"YulFunctionCall","src":"11212:9:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11226:1:19"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11233:7:19"},{"name":"x","nodeType":"YulIdentifier","src":"11242:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11229:3:19"},"nodeType":"YulFunctionCall","src":"11229:15:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11223:2:19"},"nodeType":"YulFunctionCall","src":"11223:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11209:2:19"},"nodeType":"YulFunctionCall","src":"11209:37:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11202:6:19"},"nodeType":"YulFunctionCall","src":"11202:45:19"},"nodeType":"YulIf","src":"11199:71:19"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11139:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"11142:1:19","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11148:7:19","type":""}],"src":"11108:168:19"},{"body":{"nodeType":"YulBlock","src":"11329:77:19","statements":[{"nodeType":"YulAssignment","src":"11339:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11350:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"11353:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11346:3:19"},"nodeType":"YulFunctionCall","src":"11346:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11339:3:19"}]},{"body":{"nodeType":"YulBlock","src":"11378:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11380:16:19"},"nodeType":"YulFunctionCall","src":"11380:18:19"},"nodeType":"YulExpressionStatement","src":"11380:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11370:1:19"},{"name":"sum","nodeType":"YulIdentifier","src":"11373:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11367:2:19"},"nodeType":"YulFunctionCall","src":"11367:10:19"},"nodeType":"YulIf","src":"11364:36:19"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11312:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"11315:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11321:3:19","type":""}],"src":"11281:125:19"},{"body":{"nodeType":"YulBlock","src":"11457:171:19","statements":[{"body":{"nodeType":"YulBlock","src":"11488:111:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11509:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11516:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11521:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11512:3:19"},"nodeType":"YulFunctionCall","src":"11512:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11502:6:19"},"nodeType":"YulFunctionCall","src":"11502:31:19"},"nodeType":"YulExpressionStatement","src":"11502:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11553:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11556:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11546:6:19"},"nodeType":"YulFunctionCall","src":"11546:15:19"},"nodeType":"YulExpressionStatement","src":"11546:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11581:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11584:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11574:6:19"},"nodeType":"YulFunctionCall","src":"11574:15:19"},"nodeType":"YulExpressionStatement","src":"11574:15:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11477:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11470:6:19"},"nodeType":"YulFunctionCall","src":"11470:9:19"},"nodeType":"YulIf","src":"11467:132:19"},{"nodeType":"YulAssignment","src":"11608:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11617:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"11620:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11613:3:19"},"nodeType":"YulFunctionCall","src":"11613:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11608:1:19"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11442:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"11445:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11451:1:19","type":""}],"src":"11411:217:19"},{"body":{"nodeType":"YulBlock","src":"11826:331:19","statements":[{"nodeType":"YulAssignment","src":"11836:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11848:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11859:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11844:3:19"},"nodeType":"YulFunctionCall","src":"11844:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11836:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11879:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"11890:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11872:6:19"},"nodeType":"YulFunctionCall","src":"11872:25:19"},"nodeType":"YulExpressionStatement","src":"11872:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11917:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11928:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11913:3:19"},"nodeType":"YulFunctionCall","src":"11913:18:19"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11937:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11945:26:19","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11933:3:19"},"nodeType":"YulFunctionCall","src":"11933:39:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11906:6:19"},"nodeType":"YulFunctionCall","src":"11906:67:19"},"nodeType":"YulExpressionStatement","src":"11906:67:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11993:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12004:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11989:3:19"},"nodeType":"YulFunctionCall","src":"11989:18:19"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12023:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12016:6:19"},"nodeType":"YulFunctionCall","src":"12016:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12009:6:19"},"nodeType":"YulFunctionCall","src":"12009:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11982:6:19"},"nodeType":"YulFunctionCall","src":"11982:50:19"},"nodeType":"YulExpressionStatement","src":"11982:50:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12052:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12063:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12048:3:19"},"nodeType":"YulFunctionCall","src":"12048:18:19"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12082:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12075:6:19"},"nodeType":"YulFunctionCall","src":"12075:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12068:6:19"},"nodeType":"YulFunctionCall","src":"12068:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12041:6:19"},"nodeType":"YulFunctionCall","src":"12041:50:19"},"nodeType":"YulExpressionStatement","src":"12041:50:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12111:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12122:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12107:3:19"},"nodeType":"YulFunctionCall","src":"12107:19:19"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12142:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12135:6:19"},"nodeType":"YulFunctionCall","src":"12135:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12128:6:19"},"nodeType":"YulFunctionCall","src":"12128:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12100:6:19"},"nodeType":"YulFunctionCall","src":"12100:51:19"},"nodeType":"YulExpressionStatement","src":"12100:51:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool_t_bool_t_bool__to_t_uint256_t_uint96_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11763:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11774:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11782:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11790:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11798:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11806:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11817:4:19","type":""}],"src":"11633:524:19"},{"body":{"nodeType":"YulBlock","src":"12353:14:19","statements":[{"nodeType":"YulAssignment","src":"12355:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"12362:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12355:3:19"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12337:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12345:3:19","type":""}],"src":"12162:205:19"},{"body":{"nodeType":"YulBlock","src":"12527:251:19","statements":[{"nodeType":"YulAssignment","src":"12537:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12549:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12560:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12545:3:19"},"nodeType":"YulFunctionCall","src":"12545:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12537:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12579:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12594:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12610:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12615:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12606:3:19"},"nodeType":"YulFunctionCall","src":"12606:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"12619:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12602:3:19"},"nodeType":"YulFunctionCall","src":"12602:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12590:3:19"},"nodeType":"YulFunctionCall","src":"12590:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12572:6:19"},"nodeType":"YulFunctionCall","src":"12572:51:19"},"nodeType":"YulExpressionStatement","src":"12572:51:19"},{"nodeType":"YulVariableDeclaration","src":"12632:36:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12642:26:19","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12636:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12688:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12699:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12684:3:19"},"nodeType":"YulFunctionCall","src":"12684:18:19"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12708:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"12716:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12704:3:19"},"nodeType":"YulFunctionCall","src":"12704:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12677:6:19"},"nodeType":"YulFunctionCall","src":"12677:43:19"},"nodeType":"YulExpressionStatement","src":"12677:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12740:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12751:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12736:3:19"},"nodeType":"YulFunctionCall","src":"12736:18:19"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12760:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"12768:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12756:3:19"},"nodeType":"YulFunctionCall","src":"12756:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12729:6:19"},"nodeType":"YulFunctionCall","src":"12729:43:19"},"nodeType":"YulExpressionStatement","src":"12729:43:19"}]},"name":"abi_encode_tuple_t_address_t_uint96_t_uint96__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12480:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12491:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12499:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12507:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12518:4:19","type":""}],"src":"12372:406:19"},{"body":{"nodeType":"YulBlock","src":"12830:141:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12840:36:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12850:26:19","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12844:2:19","type":""}]},{"nodeType":"YulAssignment","src":"12885:34:19","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12900:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"12903:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12896:3:19"},"nodeType":"YulFunctionCall","src":"12896:10:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12912:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"12915:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12908:3:19"},"nodeType":"YulFunctionCall","src":"12908:10:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12892:3:19"},"nodeType":"YulFunctionCall","src":"12892:27:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12885:3:19"}]},{"body":{"nodeType":"YulBlock","src":"12943:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12945:16:19"},"nodeType":"YulFunctionCall","src":"12945:18:19"},"nodeType":"YulExpressionStatement","src":"12945:18:19"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"12934:3:19"},{"name":"_1","nodeType":"YulIdentifier","src":"12939:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12931:2:19"},"nodeType":"YulFunctionCall","src":"12931:11:19"},"nodeType":"YulIf","src":"12928:37:19"}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12813:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"12816:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12822:3:19","type":""}],"src":"12783:188:19"},{"body":{"nodeType":"YulBlock","src":"13024:143:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13034:36:19","value":{"kind":"number","nodeType":"YulLiteral","src":"13044:26:19","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13038:2:19","type":""}]},{"nodeType":"YulAssignment","src":"13079:35:19","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13095:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"13098:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13091:3:19"},"nodeType":"YulFunctionCall","src":"13091:10:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13107:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"13110:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13103:3:19"},"nodeType":"YulFunctionCall","src":"13103:10:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13087:3:19"},"nodeType":"YulFunctionCall","src":"13087:27:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"13079:4:19"}]},{"body":{"nodeType":"YulBlock","src":"13139:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13141:16:19"},"nodeType":"YulFunctionCall","src":"13141:18:19"},"nodeType":"YulExpressionStatement","src":"13141:18:19"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"13129:4:19"},{"name":"_1","nodeType":"YulIdentifier","src":"13135:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13126:2:19"},"nodeType":"YulFunctionCall","src":"13126:12:19"},"nodeType":"YulIf","src":"13123:38:19"}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13006:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"13009:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"13015:4:19","type":""}],"src":"12976:191:19"},{"body":{"nodeType":"YulBlock","src":"13300:178:19","statements":[{"nodeType":"YulAssignment","src":"13310:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13322:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13333:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13318:3:19"},"nodeType":"YulFunctionCall","src":"13318:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13310:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13352:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13367:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13383:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13388:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13379:3:19"},"nodeType":"YulFunctionCall","src":"13379:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"13392:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13375:3:19"},"nodeType":"YulFunctionCall","src":"13375:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13363:3:19"},"nodeType":"YulFunctionCall","src":"13363:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13345:6:19"},"nodeType":"YulFunctionCall","src":"13345:51:19"},"nodeType":"YulExpressionStatement","src":"13345:51:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13416:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13427:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13412:3:19"},"nodeType":"YulFunctionCall","src":"13412:18:19"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13436:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"13444:26:19","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13432:3:19"},"nodeType":"YulFunctionCall","src":"13432:39:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13405:6:19"},"nodeType":"YulFunctionCall","src":"13405:67:19"},"nodeType":"YulExpressionStatement","src":"13405:67:19"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13261:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13272:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13280:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13291:4:19","type":""}],"src":"13172:306:19"},{"body":{"nodeType":"YulBlock","src":"13525:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"13579:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13588:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13591:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13581:6:19"},"nodeType":"YulFunctionCall","src":"13581:12:19"},"nodeType":"YulExpressionStatement","src":"13581:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13548:5:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13569:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13562:6:19"},"nodeType":"YulFunctionCall","src":"13562:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13555:6:19"},"nodeType":"YulFunctionCall","src":"13555:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13545:2:19"},"nodeType":"YulFunctionCall","src":"13545:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13538:6:19"},"nodeType":"YulFunctionCall","src":"13538:40:19"},"nodeType":"YulIf","src":"13535:60:19"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13514:5:19","type":""}],"src":"13483:118:19"},{"body":{"nodeType":"YulBlock","src":"13684:167:19","statements":[{"body":{"nodeType":"YulBlock","src":"13730:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13739:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13742:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13732:6:19"},"nodeType":"YulFunctionCall","src":"13732:12:19"},"nodeType":"YulExpressionStatement","src":"13732:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13705:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"13714:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13701:3:19"},"nodeType":"YulFunctionCall","src":"13701:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"13726:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13697:3:19"},"nodeType":"YulFunctionCall","src":"13697:32:19"},"nodeType":"YulIf","src":"13694:52:19"},{"nodeType":"YulVariableDeclaration","src":"13755:29:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13774:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13768:5:19"},"nodeType":"YulFunctionCall","src":"13768:16:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13759:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13815:5:19"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"13793:21:19"},"nodeType":"YulFunctionCall","src":"13793:28:19"},"nodeType":"YulExpressionStatement","src":"13793:28:19"},{"nodeType":"YulAssignment","src":"13830:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"13840:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13830:6:19"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13650:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13661:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13673:6:19","type":""}],"src":"13606:245:19"},{"body":{"nodeType":"YulBlock","src":"14030:172:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14047:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14058:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14040:6:19"},"nodeType":"YulFunctionCall","src":"14040:21:19"},"nodeType":"YulExpressionStatement","src":"14040:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14081:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14092:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14077:3:19"},"nodeType":"YulFunctionCall","src":"14077:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"14097:2:19","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14070:6:19"},"nodeType":"YulFunctionCall","src":"14070:30:19"},"nodeType":"YulExpressionStatement","src":"14070:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14120:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14131:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14116:3:19"},"nodeType":"YulFunctionCall","src":"14116:18:19"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"14136:24:19","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14109:6:19"},"nodeType":"YulFunctionCall","src":"14109:52:19"},"nodeType":"YulExpressionStatement","src":"14109:52:19"},{"nodeType":"YulAssignment","src":"14170:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14182:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14193:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14178:3:19"},"nodeType":"YulFunctionCall","src":"14178:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14170:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14007:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14021:4:19","type":""}],"src":"13856:346:19"},{"body":{"nodeType":"YulBlock","src":"14344:145:19","statements":[{"nodeType":"YulAssignment","src":"14354:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14366:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14377:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14362:3:19"},"nodeType":"YulFunctionCall","src":"14362:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14354:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14396:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14411:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14427:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14432:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14423:3:19"},"nodeType":"YulFunctionCall","src":"14423:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"14436:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14419:3:19"},"nodeType":"YulFunctionCall","src":"14419:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14407:3:19"},"nodeType":"YulFunctionCall","src":"14407:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14389:6:19"},"nodeType":"YulFunctionCall","src":"14389:51:19"},"nodeType":"YulExpressionStatement","src":"14389:51:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14460:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14471:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14456:3:19"},"nodeType":"YulFunctionCall","src":"14456:18:19"},{"name":"value1","nodeType":"YulIdentifier","src":"14476:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14449:6:19"},"nodeType":"YulFunctionCall","src":"14449:34:19"},"nodeType":"YulExpressionStatement","src":"14449:34:19"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14305:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14316:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14324:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14335:4:19","type":""}],"src":"14207:282:19"},{"body":{"nodeType":"YulBlock","src":"14623:145:19","statements":[{"nodeType":"YulAssignment","src":"14633:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14645:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14656:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14641:3:19"},"nodeType":"YulFunctionCall","src":"14641:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14633:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14675:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"14686:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14668:6:19"},"nodeType":"YulFunctionCall","src":"14668:25:19"},"nodeType":"YulExpressionStatement","src":"14668:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14713:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14724:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14709:3:19"},"nodeType":"YulFunctionCall","src":"14709:18:19"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14733:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14749:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14754:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14745:3:19"},"nodeType":"YulFunctionCall","src":"14745:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"14758:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14741:3:19"},"nodeType":"YulFunctionCall","src":"14741:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14729:3:19"},"nodeType":"YulFunctionCall","src":"14729:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14702:6:19"},"nodeType":"YulFunctionCall","src":"14702:60:19"},"nodeType":"YulExpressionStatement","src":"14702:60:19"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14584:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14595:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14603:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14614:4:19","type":""}],"src":"14494:274:19"},{"body":{"nodeType":"YulBlock","src":"14867:427:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14877:51:19","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"14916:11:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14903:12:19"},"nodeType":"YulFunctionCall","src":"14903:25:19"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"14881:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"15017:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15026:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15029:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15019:6:19"},"nodeType":"YulFunctionCall","src":"15019:12:19"},"nodeType":"YulExpressionStatement","src":"15019:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"14951:18:19"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"14979:12:19"},"nodeType":"YulFunctionCall","src":"14979:14:19"},{"name":"base_ref","nodeType":"YulIdentifier","src":"14995:8:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14975:3:19"},"nodeType":"YulFunctionCall","src":"14975:29:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15010:2:19","type":"","value":"30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15006:3:19"},"nodeType":"YulFunctionCall","src":"15006:7:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14971:3:19"},"nodeType":"YulFunctionCall","src":"14971:43:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14947:3:19"},"nodeType":"YulFunctionCall","src":"14947:68:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14940:6:19"},"nodeType":"YulFunctionCall","src":"14940:76:19"},"nodeType":"YulIf","src":"14937:96:19"},{"nodeType":"YulVariableDeclaration","src":"15042:47:19","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"15060:8:19"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"15070:18:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15056:3:19"},"nodeType":"YulFunctionCall","src":"15056:33:19"},"variables":[{"name":"addr_1","nodeType":"YulTypedName","src":"15046:6:19","type":""}]},{"nodeType":"YulAssignment","src":"15098:30:19","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"15121:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15108:12:19"},"nodeType":"YulFunctionCall","src":"15108:20:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15098:6:19"}]},{"body":{"nodeType":"YulBlock","src":"15171:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15180:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15183:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15173:6:19"},"nodeType":"YulFunctionCall","src":"15173:12:19"},"nodeType":"YulExpressionStatement","src":"15173:12:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15143:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"15151:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15140:2:19"},"nodeType":"YulFunctionCall","src":"15140:30:19"},"nodeType":"YulIf","src":"15137:50:19"},{"nodeType":"YulAssignment","src":"15196:25:19","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"15208:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"15216:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15204:3:19"},"nodeType":"YulFunctionCall","src":"15204:17:19"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"15196:4:19"}]},{"body":{"nodeType":"YulBlock","src":"15272:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15281:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15284:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15274:6:19"},"nodeType":"YulFunctionCall","src":"15274:12:19"},"nodeType":"YulExpressionStatement","src":"15274:12:19"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"15237:4:19"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"15247:12:19"},"nodeType":"YulFunctionCall","src":"15247:14:19"},{"name":"length","nodeType":"YulIdentifier","src":"15263:6:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15243:3:19"},"nodeType":"YulFunctionCall","src":"15243:27:19"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"15233:3:19"},"nodeType":"YulFunctionCall","src":"15233:38:19"},"nodeType":"YulIf","src":"15230:58:19"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"14824:8:19","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"14834:11:19","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"14850:4:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"14856:6:19","type":""}],"src":"14773:521:19"},{"body":{"nodeType":"YulBlock","src":"15368:207:19","statements":[{"body":{"nodeType":"YulBlock","src":"15414:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15423:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15426:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15416:6:19"},"nodeType":"YulFunctionCall","src":"15416:12:19"},"nodeType":"YulExpressionStatement","src":"15416:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15389:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15398:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15385:3:19"},"nodeType":"YulFunctionCall","src":"15385:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"15410:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15381:3:19"},"nodeType":"YulFunctionCall","src":"15381:32:19"},"nodeType":"YulIf","src":"15378:52:19"},{"nodeType":"YulVariableDeclaration","src":"15439:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15465:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15452:12:19"},"nodeType":"YulFunctionCall","src":"15452:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15443:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"15529:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15538:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15541:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15531:6:19"},"nodeType":"YulFunctionCall","src":"15531:12:19"},"nodeType":"YulExpressionStatement","src":"15531:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15497:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15508:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"15515:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15504:3:19"},"nodeType":"YulFunctionCall","src":"15504:22:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15494:2:19"},"nodeType":"YulFunctionCall","src":"15494:33:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15487:6:19"},"nodeType":"YulFunctionCall","src":"15487:41:19"},"nodeType":"YulIf","src":"15484:61:19"},{"nodeType":"YulAssignment","src":"15554:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"15564:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15554:6:19"}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15334:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15345:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15357:6:19","type":""}],"src":"15299:276:19"},{"body":{"nodeType":"YulBlock","src":"15635:65:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15652:1:19","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"15655:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15645:6:19"},"nodeType":"YulFunctionCall","src":"15645:14:19"},"nodeType":"YulExpressionStatement","src":"15645:14:19"},{"nodeType":"YulAssignment","src":"15668:26:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15686:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15689:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15676:9:19"},"nodeType":"YulFunctionCall","src":"15676:18:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15668:4:19"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15618:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15626:4:19","type":""}],"src":"15580:120:19"},{"body":{"nodeType":"YulBlock","src":"15785:464:19","statements":[{"body":{"nodeType":"YulBlock","src":"15818:425:19","statements":[{"nodeType":"YulVariableDeclaration","src":"15832:11:19","value":{"kind":"number","nodeType":"YulLiteral","src":"15842:1:19","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15836:2:19","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15863:2:19"},{"name":"array","nodeType":"YulIdentifier","src":"15867:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15856:6:19"},"nodeType":"YulFunctionCall","src":"15856:17:19"},"nodeType":"YulExpressionStatement","src":"15856:17:19"},{"nodeType":"YulVariableDeclaration","src":"15886:31:19","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15908:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"15912:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15898:9:19"},"nodeType":"YulFunctionCall","src":"15898:19:19"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"15890:4:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15930:57:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15953:4:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15963:1:19","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15970:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"15982:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15966:3:19"},"nodeType":"YulFunctionCall","src":"15966:19:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15959:3:19"},"nodeType":"YulFunctionCall","src":"15959:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15949:3:19"},"nodeType":"YulFunctionCall","src":"15949:38:19"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"15934:11:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"16024:23:19","statements":[{"nodeType":"YulAssignment","src":"16026:19:19","value":{"name":"data","nodeType":"YulIdentifier","src":"16041:4:19"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"16026:11:19"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"16006:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"16018:4:19","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16003:2:19"},"nodeType":"YulFunctionCall","src":"16003:20:19"},"nodeType":"YulIf","src":"16000:47:19"},{"nodeType":"YulVariableDeclaration","src":"16060:41:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16074:4:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16084:1:19","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"16091:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16096:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16087:3:19"},"nodeType":"YulFunctionCall","src":"16087:12:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16080:3:19"},"nodeType":"YulFunctionCall","src":"16080:20:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16070:3:19"},"nodeType":"YulFunctionCall","src":"16070:31:19"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"16064:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16114:24:19","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"16127:11:19"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"16118:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"16212:21:19","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"16221:5:19"},{"name":"_1","nodeType":"YulIdentifier","src":"16228:2:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16214:6:19"},"nodeType":"YulFunctionCall","src":"16214:17:19"},"nodeType":"YulExpressionStatement","src":"16214:17:19"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"16162:5:19"},{"name":"_2","nodeType":"YulIdentifier","src":"16169:2:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16159:2:19"},"nodeType":"YulFunctionCall","src":"16159:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16173:26:19","statements":[{"nodeType":"YulAssignment","src":"16175:22:19","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"16188:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16195:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16184:3:19"},"nodeType":"YulFunctionCall","src":"16184:13:19"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"16175:5:19"}]}]},"pre":{"nodeType":"YulBlock","src":"16155:3:19","statements":[]},"src":"16151:82:19"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"15801:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15806:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15798:2:19"},"nodeType":"YulFunctionCall","src":"15798:11:19"},"nodeType":"YulIf","src":"15795:448:19"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"15757:5:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"15764:3:19","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"15769:10:19","type":""}],"src":"15705:544:19"},{"body":{"nodeType":"YulBlock","src":"16339:81:19","statements":[{"nodeType":"YulAssignment","src":"16349:65:19","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16364:4:19"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16382:1:19","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"16385:3:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16378:3:19"},"nodeType":"YulFunctionCall","src":"16378:11:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16395:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16391:3:19"},"nodeType":"YulFunctionCall","src":"16391:6:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16374:3:19"},"nodeType":"YulFunctionCall","src":"16374:24:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16370:3:19"},"nodeType":"YulFunctionCall","src":"16370:29:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16360:3:19"},"nodeType":"YulFunctionCall","src":"16360:40:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16406:1:19","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"16409:3:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16402:3:19"},"nodeType":"YulFunctionCall","src":"16402:11:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16357:2:19"},"nodeType":"YulFunctionCall","src":"16357:57:19"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"16349:4:19"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16316:4:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"16322:3:19","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"16330:4:19","type":""}],"src":"16254:166:19"},{"body":{"nodeType":"YulBlock","src":"16519:1254:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16529:24:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16549:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16543:5:19"},"nodeType":"YulFunctionCall","src":"16543:10:19"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"16533:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"16596:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16598:16:19"},"nodeType":"YulFunctionCall","src":"16598:18:19"},"nodeType":"YulExpressionStatement","src":"16598:18:19"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16568:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"16576:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16565:2:19"},"nodeType":"YulFunctionCall","src":"16565:30:19"},"nodeType":"YulIf","src":"16562:56:19"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16670:4:19"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16708:4:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16702:5:19"},"nodeType":"YulFunctionCall","src":"16702:11:19"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"16676:25:19"},"nodeType":"YulFunctionCall","src":"16676:38:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"16716:6:19"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"16627:42:19"},"nodeType":"YulFunctionCall","src":"16627:96:19"},"nodeType":"YulExpressionStatement","src":"16627:96:19"},{"nodeType":"YulVariableDeclaration","src":"16732:18:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16749:1:19","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"16736:9:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16759:23:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16778:4:19","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"16763:11:19","type":""}]},{"nodeType":"YulAssignment","src":"16791:24:19","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16804:11:19"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16791:9:19"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16861:655:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16875:35:19","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16894:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16906:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16902:3:19"},"nodeType":"YulFunctionCall","src":"16902:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16890:3:19"},"nodeType":"YulFunctionCall","src":"16890:20:19"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"16879:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16923:48:19","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16966:4:19"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"16937:28:19"},"nodeType":"YulFunctionCall","src":"16937:34:19"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"16927:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16984:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16993:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16988:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"17071:172:19","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17096:6:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17114:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17119:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17110:3:19"},"nodeType":"YulFunctionCall","src":"17110:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17104:5:19"},"nodeType":"YulFunctionCall","src":"17104:26:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17089:6:19"},"nodeType":"YulFunctionCall","src":"17089:42:19"},"nodeType":"YulExpressionStatement","src":"17089:42:19"},{"nodeType":"YulAssignment","src":"17148:24:19","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17162:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"17170:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17158:3:19"},"nodeType":"YulFunctionCall","src":"17158:14:19"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17148:6:19"}]},{"nodeType":"YulAssignment","src":"17189:40:19","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17206:9:19"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"17217:11:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17202:3:19"},"nodeType":"YulFunctionCall","src":"17202:27:19"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17189:9:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17018:1:19"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"17021:7:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17015:2:19"},"nodeType":"YulFunctionCall","src":"17015:14:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17030:28:19","statements":[{"nodeType":"YulAssignment","src":"17032:24:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17041:1:19"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"17044:11:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17037:3:19"},"nodeType":"YulFunctionCall","src":"17037:19:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17032:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"17011:3:19","statements":[]},"src":"17007:236:19"},{"body":{"nodeType":"YulBlock","src":"17291:166:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17309:43:19","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17336:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17341:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17332:3:19"},"nodeType":"YulFunctionCall","src":"17332:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17326:5:19"},"nodeType":"YulFunctionCall","src":"17326:26:19"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"17313:9:19","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17376:6:19"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"17388:9:19"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17415:1:19","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"17418:6:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17411:3:19"},"nodeType":"YulFunctionCall","src":"17411:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"17427:3:19","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17407:3:19"},"nodeType":"YulFunctionCall","src":"17407:24:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17437:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17433:3:19"},"nodeType":"YulFunctionCall","src":"17433:6:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17403:3:19"},"nodeType":"YulFunctionCall","src":"17403:37:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17399:3:19"},"nodeType":"YulFunctionCall","src":"17399:42:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17384:3:19"},"nodeType":"YulFunctionCall","src":"17384:58:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17369:6:19"},"nodeType":"YulFunctionCall","src":"17369:74:19"},"nodeType":"YulExpressionStatement","src":"17369:74:19"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"17262:7:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"17271:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17259:2:19"},"nodeType":"YulFunctionCall","src":"17259:19:19"},"nodeType":"YulIf","src":"17256:201:19"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17477:4:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17491:1:19","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"17494:6:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17487:3:19"},"nodeType":"YulFunctionCall","src":"17487:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"17503:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17483:3:19"},"nodeType":"YulFunctionCall","src":"17483:22:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17470:6:19"},"nodeType":"YulFunctionCall","src":"17470:36:19"},"nodeType":"YulExpressionStatement","src":"17470:36:19"}]},"nodeType":"YulCase","src":"16854:662:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16859:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17533:234:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17547:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17560:1:19","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17551:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"17596:67:19","statements":[{"nodeType":"YulAssignment","src":"17614:35:19","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17633:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17638:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17629:3:19"},"nodeType":"YulFunctionCall","src":"17629:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17623:5:19"},"nodeType":"YulFunctionCall","src":"17623:26:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17614:5:19"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"17577:6:19"},"nodeType":"YulIf","src":"17574:89:19"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17683:4:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17742:5:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"17749:6:19"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"17689:52:19"},"nodeType":"YulFunctionCall","src":"17689:67:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17676:6:19"},"nodeType":"YulFunctionCall","src":"17676:81:19"},"nodeType":"YulExpressionStatement","src":"17676:81:19"}]},"nodeType":"YulCase","src":"17525:242:19","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16834:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"16842:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16831:2:19"},"nodeType":"YulFunctionCall","src":"16831:14:19"},"nodeType":"YulSwitch","src":"16824:943:19"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"16504:4:19","type":""},{"name":"src","nodeType":"YulTypedName","src":"16510:3:19","type":""}],"src":"16425:1348:19"},{"body":{"nodeType":"YulBlock","src":"17847:203:19","statements":[{"body":{"nodeType":"YulBlock","src":"17893:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17902:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17905:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17895:6:19"},"nodeType":"YulFunctionCall","src":"17895:12:19"},"nodeType":"YulExpressionStatement","src":"17895:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17868:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"17877:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17864:3:19"},"nodeType":"YulFunctionCall","src":"17864:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"17889:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17860:3:19"},"nodeType":"YulFunctionCall","src":"17860:32:19"},"nodeType":"YulIf","src":"17857:52:19"},{"nodeType":"YulVariableDeclaration","src":"17918:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17944:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17931:12:19"},"nodeType":"YulFunctionCall","src":"17931:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17922:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"18004:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18013:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18016:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18006:6:19"},"nodeType":"YulFunctionCall","src":"18006:12:19"},"nodeType":"YulExpressionStatement","src":"18006:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17976:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17987:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17994:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17983:3:19"},"nodeType":"YulFunctionCall","src":"17983:18:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17973:2:19"},"nodeType":"YulFunctionCall","src":"17973:29:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17966:6:19"},"nodeType":"YulFunctionCall","src":"17966:37:19"},"nodeType":"YulIf","src":"17963:57:19"},{"nodeType":"YulAssignment","src":"18029:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"18039:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18029:6:19"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17813:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17824:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17836:6:19","type":""}],"src":"17778:272:19"},{"body":{"nodeType":"YulBlock","src":"18308:556:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18325:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"18336:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18318:6:19"},"nodeType":"YulFunctionCall","src":"18318:25:19"},"nodeType":"YulExpressionStatement","src":"18318:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18363:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18374:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18359:3:19"},"nodeType":"YulFunctionCall","src":"18359:18:19"},{"name":"value1","nodeType":"YulIdentifier","src":"18379:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18352:6:19"},"nodeType":"YulFunctionCall","src":"18352:34:19"},"nodeType":"YulExpressionStatement","src":"18352:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18406:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18417:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18402:3:19"},"nodeType":"YulFunctionCall","src":"18402:18:19"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18426:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"18434:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18422:3:19"},"nodeType":"YulFunctionCall","src":"18422:19:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18395:6:19"},"nodeType":"YulFunctionCall","src":"18395:47:19"},"nodeType":"YulExpressionStatement","src":"18395:47:19"},{"nodeType":"YulVariableDeclaration","src":"18451:20:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18461:10:19","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18455:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18491:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18502:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18487:3:19"},"nodeType":"YulFunctionCall","src":"18487:18:19"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18511:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"18519:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18507:3:19"},"nodeType":"YulFunctionCall","src":"18507:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18480:6:19"},"nodeType":"YulFunctionCall","src":"18480:43:19"},"nodeType":"YulExpressionStatement","src":"18480:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18543:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18554:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18539:3:19"},"nodeType":"YulFunctionCall","src":"18539:19:19"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18564:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"18572:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18560:3:19"},"nodeType":"YulFunctionCall","src":"18560:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18532:6:19"},"nodeType":"YulFunctionCall","src":"18532:44:19"},"nodeType":"YulExpressionStatement","src":"18532:44:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18596:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18607:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:19"},"nodeType":"YulFunctionCall","src":"18592:19:19"},{"kind":"number","nodeType":"YulLiteral","src":"18613:3:19","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18585:6:19"},"nodeType":"YulFunctionCall","src":"18585:32:19"},"nodeType":"YulExpressionStatement","src":"18585:32:19"},{"nodeType":"YulVariableDeclaration","src":"18626:27:19","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"18646:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18640:5:19"},"nodeType":"YulFunctionCall","src":"18640:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18630:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18673:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18684:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18669:3:19"},"nodeType":"YulFunctionCall","src":"18669:19:19"},{"name":"length","nodeType":"YulIdentifier","src":"18690:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18662:6:19"},"nodeType":"YulFunctionCall","src":"18662:35:19"},"nodeType":"YulExpressionStatement","src":"18662:35:19"},{"expression":{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"18745:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"18753:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18741:3:19"},"nodeType":"YulFunctionCall","src":"18741:15:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18762:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18773:3:19","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18758:3:19"},"nodeType":"YulFunctionCall","src":"18758:19:19"},{"name":"length","nodeType":"YulIdentifier","src":"18779:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"18706:34:19"},"nodeType":"YulFunctionCall","src":"18706:80:19"},"nodeType":"YulExpressionStatement","src":"18706:80:19"},{"nodeType":"YulAssignment","src":"18795:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18811:9:19"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18830:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"18838:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18826:3:19"},"nodeType":"YulFunctionCall","src":"18826:15:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18847:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18843:3:19"},"nodeType":"YulFunctionCall","src":"18843:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18822:3:19"},"nodeType":"YulFunctionCall","src":"18822:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18807:3:19"},"nodeType":"YulFunctionCall","src":"18807:45:19"},{"kind":"number","nodeType":"YulLiteral","src":"18854:3:19","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18803:3:19"},"nodeType":"YulFunctionCall","src":"18803:55:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18795:4:19"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18237:9:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18248:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18256:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18264:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18272:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18280:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18288:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18299:4:19","type":""}],"src":"18055:809:19"},{"body":{"nodeType":"YulBlock","src":"19070:305:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19080:41:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19094:26:19","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19090:3:19"},"nodeType":"YulFunctionCall","src":"19090:31:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19084:2:19","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19137:3:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19150:2:19","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"19154:6:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19146:3:19"},"nodeType":"YulFunctionCall","src":"19146:15:19"},{"name":"_1","nodeType":"YulIdentifier","src":"19163:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19142:3:19"},"nodeType":"YulFunctionCall","src":"19142:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19130:6:19"},"nodeType":"YulFunctionCall","src":"19130:37:19"},"nodeType":"YulExpressionStatement","src":"19130:37:19"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19187:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"19192:2:19","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19183:3:19"},"nodeType":"YulFunctionCall","src":"19183:12:19"},{"name":"value1","nodeType":"YulIdentifier","src":"19197:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19176:6:19"},"nodeType":"YulFunctionCall","src":"19176:28:19"},"nodeType":"YulExpressionStatement","src":"19176:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19224:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"19229:2:19","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19220:3:19"},"nodeType":"YulFunctionCall","src":"19220:12:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19242:2:19","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"19246:6:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19238:3:19"},"nodeType":"YulFunctionCall","src":"19238:15:19"},{"name":"_1","nodeType":"YulIdentifier","src":"19255:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19234:3:19"},"nodeType":"YulFunctionCall","src":"19234:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19213:6:19"},"nodeType":"YulFunctionCall","src":"19213:46:19"},"nodeType":"YulExpressionStatement","src":"19213:46:19"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19279:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"19284:2:19","type":"","value":"72"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19275:3:19"},"nodeType":"YulFunctionCall","src":"19275:12:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19297:3:19","type":"","value":"192"},{"name":"value3","nodeType":"YulIdentifier","src":"19302:6:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19293:3:19"},"nodeType":"YulFunctionCall","src":"19293:16:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19315:3:19","type":"","value":"192"},{"kind":"number","nodeType":"YulLiteral","src":"19320:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19311:3:19"},"nodeType":"YulFunctionCall","src":"19311:28:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19289:3:19"},"nodeType":"YulFunctionCall","src":"19289:51:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19268:6:19"},"nodeType":"YulFunctionCall","src":"19268:73:19"},"nodeType":"YulExpressionStatement","src":"19268:73:19"},{"nodeType":"YulAssignment","src":"19350:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19361:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"19366:2:19","type":"","value":"80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19357:3:19"},"nodeType":"YulFunctionCall","src":"19357:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19350:3:19"}]}]},"name":"abi_encode_tuple_packed_t_address_t_bytes32_t_address_t_uint64__to_t_address_t_bytes32_t_address_t_uint64__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19022:3:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19027:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19035:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19043:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19051:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19062:3:19","type":""}],"src":"18869:506:19"},{"body":{"nodeType":"YulBlock","src":"19427:133:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19437:28:19","value":{"kind":"number","nodeType":"YulLiteral","src":"19447:18:19","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19441:2:19","type":""}]},{"nodeType":"YulAssignment","src":"19474:34:19","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19489:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"19492:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19485:3:19"},"nodeType":"YulFunctionCall","src":"19485:10:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19501:1:19"},{"name":"_1","nodeType":"YulIdentifier","src":"19504:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19497:3:19"},"nodeType":"YulFunctionCall","src":"19497:10:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19481:3:19"},"nodeType":"YulFunctionCall","src":"19481:27:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19474:3:19"}]},{"body":{"nodeType":"YulBlock","src":"19532:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19534:16:19"},"nodeType":"YulFunctionCall","src":"19534:18:19"},"nodeType":"YulExpressionStatement","src":"19534:18:19"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"19523:3:19"},{"name":"_1","nodeType":"YulIdentifier","src":"19528:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19520:2:19"},"nodeType":"YulFunctionCall","src":"19520:11:19"},"nodeType":"YulIf","src":"19517:37:19"}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19410:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"19413:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19419:3:19","type":""}],"src":"19380:180:19"},{"body":{"nodeType":"YulBlock","src":"19694:175:19","statements":[{"nodeType":"YulAssignment","src":"19704:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19716:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19727:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19712:3:19"},"nodeType":"YulFunctionCall","src":"19712:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19704:4:19"}]},{"nodeType":"YulVariableDeclaration","src":"19739:29:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19757:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19762:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19753:3:19"},"nodeType":"YulFunctionCall","src":"19753:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"19766:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19749:3:19"},"nodeType":"YulFunctionCall","src":"19749:19:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19743:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19784:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19799:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"19807:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19795:3:19"},"nodeType":"YulFunctionCall","src":"19795:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19777:6:19"},"nodeType":"YulFunctionCall","src":"19777:34:19"},"nodeType":"YulExpressionStatement","src":"19777:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19831:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19842:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19827:3:19"},"nodeType":"YulFunctionCall","src":"19827:18:19"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19851:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"19859:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19847:3:19"},"nodeType":"YulFunctionCall","src":"19847:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19820:6:19"},"nodeType":"YulFunctionCall","src":"19820:43:19"},"nodeType":"YulExpressionStatement","src":"19820:43:19"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19655:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19666:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19674:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19685:4:19","type":""}],"src":"19565:304:19"},{"body":{"nodeType":"YulBlock","src":"19906:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19923:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19930:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19935:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19926:3:19"},"nodeType":"YulFunctionCall","src":"19926:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19916:6:19"},"nodeType":"YulFunctionCall","src":"19916:31:19"},"nodeType":"YulExpressionStatement","src":"19916:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19963:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19966:4:19","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19956:6:19"},"nodeType":"YulFunctionCall","src":"19956:15:19"},"nodeType":"YulExpressionStatement","src":"19956:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19987:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19990:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19980:6:19"},"nodeType":"YulFunctionCall","src":"19980:15:19"},"nodeType":"YulExpressionStatement","src":"19980:15:19"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"19874:127:19"},{"body":{"nodeType":"YulBlock","src":"20087:103:19","statements":[{"body":{"nodeType":"YulBlock","src":"20133:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20142:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20145:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20135:6:19"},"nodeType":"YulFunctionCall","src":"20135:12:19"},"nodeType":"YulExpressionStatement","src":"20135:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20108:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"20117:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20104:3:19"},"nodeType":"YulFunctionCall","src":"20104:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"20129:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20100:3:19"},"nodeType":"YulFunctionCall","src":"20100:32:19"},"nodeType":"YulIf","src":"20097:52:19"},{"nodeType":"YulAssignment","src":"20158:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20174:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20168:5:19"},"nodeType":"YulFunctionCall","src":"20168:16:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20158:6:19"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20053:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20064:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20076:6:19","type":""}],"src":"20006:184:19"},{"body":{"nodeType":"YulBlock","src":"20324:145:19","statements":[{"nodeType":"YulAssignment","src":"20334:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20346:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20357:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20342:3:19"},"nodeType":"YulFunctionCall","src":"20342:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20334:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20376:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20391:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20407:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"20412:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20403:3:19"},"nodeType":"YulFunctionCall","src":"20403:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"20416:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20399:3:19"},"nodeType":"YulFunctionCall","src":"20399:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20387:3:19"},"nodeType":"YulFunctionCall","src":"20387:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20369:6:19"},"nodeType":"YulFunctionCall","src":"20369:51:19"},"nodeType":"YulExpressionStatement","src":"20369:51:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20440:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20451:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20436:3:19"},"nodeType":"YulFunctionCall","src":"20436:18:19"},{"name":"value1","nodeType":"YulIdentifier","src":"20456:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20429:6:19"},"nodeType":"YulFunctionCall","src":"20429:34:19"},"nodeType":"YulExpressionStatement","src":"20429:34:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20285:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20296:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20304:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20315:4:19","type":""}],"src":"20195:274:19"},{"body":{"nodeType":"YulBlock","src":"20648:172:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20665:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20676:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20658:6:19"},"nodeType":"YulFunctionCall","src":"20658:21:19"},"nodeType":"YulExpressionStatement","src":"20658:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20699:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20710:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20695:3:19"},"nodeType":"YulFunctionCall","src":"20695:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"20715:2:19","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20688:6:19"},"nodeType":"YulFunctionCall","src":"20688:30:19"},"nodeType":"YulExpressionStatement","src":"20688:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20738:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20749:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20734:3:19"},"nodeType":"YulFunctionCall","src":"20734:18:19"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"20754:24:19","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20727:6:19"},"nodeType":"YulFunctionCall","src":"20727:52:19"},"nodeType":"YulExpressionStatement","src":"20727:52:19"},{"nodeType":"YulAssignment","src":"20788:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20800:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20811:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20796:3:19"},"nodeType":"YulFunctionCall","src":"20796:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20788:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20625:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20639:4:19","type":""}],"src":"20474:346:19"},{"body":{"nodeType":"YulBlock","src":"20925:223:19","statements":[{"nodeType":"YulVariableDeclaration","src":"20935:29:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"20958:5:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20945:12:19"},"nodeType":"YulFunctionCall","src":"20945:19:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20939:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20973:30:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20987:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"20992:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20983:3:19"},"nodeType":"YulFunctionCall","src":"20983:20:19"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"20977:2:19","type":""}]},{"nodeType":"YulAssignment","src":"21012:20:19","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21025:2:19"},{"name":"_2","nodeType":"YulIdentifier","src":"21029:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21021:3:19"},"nodeType":"YulFunctionCall","src":"21021:11:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21012:5:19"}]},{"body":{"nodeType":"YulBlock","src":"21063:79:19","statements":[{"nodeType":"YulAssignment","src":"21077:55:19","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21094:2:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21106:1:19","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21113:1:19","type":"","value":"4"},{"name":"len","nodeType":"YulIdentifier","src":"21116:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21109:3:19"},"nodeType":"YulFunctionCall","src":"21109:11:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21102:3:19"},"nodeType":"YulFunctionCall","src":"21102:19:19"},{"name":"_2","nodeType":"YulIdentifier","src":"21123:2:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21098:3:19"},"nodeType":"YulFunctionCall","src":"21098:28:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21090:3:19"},"nodeType":"YulFunctionCall","src":"21090:37:19"},{"name":"_2","nodeType":"YulIdentifier","src":"21129:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21086:3:19"},"nodeType":"YulFunctionCall","src":"21086:46:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21077:5:19"}]}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"21047:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"21052:1:19","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21044:2:19"},"nodeType":"YulFunctionCall","src":"21044:10:19"},"nodeType":"YulIf","src":"21041:101:19"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"20900:5:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"20907:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20915:5:19","type":""}],"src":"20825:323:19"},{"body":{"nodeType":"YulBlock","src":"21283:201:19","statements":[{"body":{"nodeType":"YulBlock","src":"21321:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21330:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21333:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21323:6:19"},"nodeType":"YulFunctionCall","src":"21323:12:19"},"nodeType":"YulExpressionStatement","src":"21323:12:19"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"21299:10:19"},{"name":"endIndex","nodeType":"YulIdentifier","src":"21311:8:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21296:2:19"},"nodeType":"YulFunctionCall","src":"21296:24:19"},"nodeType":"YulIf","src":"21293:44:19"},{"body":{"nodeType":"YulBlock","src":"21370:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21379:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21382:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21372:6:19"},"nodeType":"YulFunctionCall","src":"21372:12:19"},"nodeType":"YulExpressionStatement","src":"21372:12:19"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"21352:8:19"},{"name":"length","nodeType":"YulIdentifier","src":"21362:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21349:2:19"},"nodeType":"YulFunctionCall","src":"21349:20:19"},"nodeType":"YulIf","src":"21346:40:19"},{"nodeType":"YulAssignment","src":"21395:36:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21412:6:19"},{"name":"startIndex","nodeType":"YulIdentifier","src":"21420:10:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21408:3:19"},"nodeType":"YulFunctionCall","src":"21408:23:19"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"21395:9:19"}]},{"nodeType":"YulAssignment","src":"21440:38:19","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"21457:8:19"},{"name":"startIndex","nodeType":"YulIdentifier","src":"21467:10:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21453:3:19"},"nodeType":"YulFunctionCall","src":"21453:25:19"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"21440:9:19"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21217:6:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"21225:6:19","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"21233:10:19","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"21245:8:19","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"21258:9:19","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"21269:9:19","type":""}],"src":"21153:331:19"},{"body":{"nodeType":"YulBlock","src":"21588:407:19","statements":[{"body":{"nodeType":"YulBlock","src":"21634:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21643:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21646:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21636:6:19"},"nodeType":"YulFunctionCall","src":"21636:12:19"},"nodeType":"YulExpressionStatement","src":"21636:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21609:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21618:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21605:3:19"},"nodeType":"YulFunctionCall","src":"21605:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"21630:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21601:3:19"},"nodeType":"YulFunctionCall","src":"21601:32:19"},"nodeType":"YulIf","src":"21598:52:19"},{"nodeType":"YulVariableDeclaration","src":"21659:23:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21679:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21673:5:19"},"nodeType":"YulFunctionCall","src":"21673:9:19"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"21663:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21691:33:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21713:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21721:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21709:3:19"},"nodeType":"YulFunctionCall","src":"21709:15:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"21695:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"21799:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21801:16:19"},"nodeType":"YulFunctionCall","src":"21801:18:19"},"nodeType":"YulExpressionStatement","src":"21801:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21742:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"21754:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21739:2:19"},"nodeType":"YulFunctionCall","src":"21739:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21778:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"21790:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21775:2:19"},"nodeType":"YulFunctionCall","src":"21775:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21736:2:19"},"nodeType":"YulFunctionCall","src":"21736:62:19"},"nodeType":"YulIf","src":"21733:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21837:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21841:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21830:6:19"},"nodeType":"YulFunctionCall","src":"21830:22:19"},"nodeType":"YulExpressionStatement","src":"21830:22:19"},{"nodeType":"YulVariableDeclaration","src":"21861:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21887:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21874:12:19"},"nodeType":"YulFunctionCall","src":"21874:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21865:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21928:5:19"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"21906:21:19"},"nodeType":"YulFunctionCall","src":"21906:28:19"},"nodeType":"YulExpressionStatement","src":"21906:28:19"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21950:6:19"},{"name":"value","nodeType":"YulIdentifier","src":"21958:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21943:6:19"},"nodeType":"YulFunctionCall","src":"21943:21:19"},"nodeType":"YulExpressionStatement","src":"21943:21:19"},{"nodeType":"YulAssignment","src":"21973:16:19","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"21983:6:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21973:6:19"}]}]},"name":"abi_decode_tuple_t_struct$_ExtraArgsV1_$2665_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21554:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21565:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21577:6:19","type":""}],"src":"21489:506:19"},{"body":{"nodeType":"YulBlock","src":"22159:99:19","statements":[{"nodeType":"YulAssignment","src":"22169:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22181:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22192:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22177:3:19"},"nodeType":"YulFunctionCall","src":"22177:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22169:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22211:9:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22242:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22236:5:19"},"nodeType":"YulFunctionCall","src":"22236:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22229:6:19"},"nodeType":"YulFunctionCall","src":"22229:21:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22222:6:19"},"nodeType":"YulFunctionCall","src":"22222:29:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22204:6:19"},"nodeType":"YulFunctionCall","src":"22204:48:19"},"nodeType":"YulExpressionStatement","src":"22204:48:19"}]},"name":"abi_encode_tuple_t_struct$_ExtraArgsV1_$2665_memory_ptr__to_t_struct$_ExtraArgsV1_$2665_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22128:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22139:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22150:4:19","type":""}],"src":"22000:258:19"},{"body":{"nodeType":"YulBlock","src":"22437:173:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22454:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22465:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22447:6:19"},"nodeType":"YulFunctionCall","src":"22447:21:19"},"nodeType":"YulExpressionStatement","src":"22447:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22488:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22499:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22484:3:19"},"nodeType":"YulFunctionCall","src":"22484:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"22504:2:19","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22477:6:19"},"nodeType":"YulFunctionCall","src":"22477:30:19"},"nodeType":"YulExpressionStatement","src":"22477:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22527:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22538:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22523:3:19"},"nodeType":"YulFunctionCall","src":"22523:18:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"22543:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22516:6:19"},"nodeType":"YulFunctionCall","src":"22516:53:19"},"nodeType":"YulExpressionStatement","src":"22516:53:19"},{"nodeType":"YulAssignment","src":"22578:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22590:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22601:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22586:3:19"},"nodeType":"YulFunctionCall","src":"22586:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22578:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22414:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22428:4:19","type":""}],"src":"22263:347:19"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__to_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, and(value0, 0xffff))\n        let _1 := 0xffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n        mstore(add(headStart, 224), and(value7, 0xff))\n        mstore(add(headStart, 256), and(value8, 0xff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let _1 := 32\n        let value := calldataload(add(headStart, _1))\n        validator_revert_address(value)\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value2 := dst_1\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_LinkTokenInterface_$420__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$297__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_struct$_RandomWordsRequest_$2678_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 192) { revert(0, 0) }\n        value0 := _1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffff))\n        let _3 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 96), and(value3, _3))\n        mstore(add(headStart, 128), 160)\n        let pos := tail_1\n        let length := mload(value4)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value4, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), _3))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        tail := pos\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_uint256_dyn(value1, add(headStart, 64))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool_t_bool_t_bool__to_t_uint256_t_uint96_t_bool_t_bool_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address_t_uint96_t_uint96__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 0xffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint96(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffffffffffff\n        diff := sub(and(x, _1), and(y, _1))\n        if gt(diff, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffff))\n        let _1 := 0xffffffff\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), 192)\n        let length := mload(value5)\n        mstore(add(headStart, 192), length)\n        copy_memory_to_memory_with_cleanup(add(value5, 32), add(headStart, 224), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 224)\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes32_t_address_t_uint64__to_t_address_t_bytes32_t_address_t_uint64__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), and(shl(96, value2), _1))\n        mstore(add(pos, 72), and(shl(192, value3), shl(192, 0xffffffffffffffff)))\n        end := add(pos, 80)\n    }\n    function checked_add_t_uint64(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        let _2 := shl(224, 0xffffffff)\n        value := and(_1, _2)\n        if lt(len, 4)\n        {\n            value := and(and(_1, shl(shl(3, sub(4, len)), _2)), _2)\n        }\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function abi_decode_tuple_t_struct$_ExtraArgsV1_$2665_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 32)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        mstore(memPtr, value)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_struct$_ExtraArgsV1_$2665_memory_ptr__to_t_struct$_ExtraArgsV1_$2665_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(mload(value0))))\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2711":[{"length":32,"start":1048},{"length":32,"start":2913}],"2713":[{"length":32,"start":1930},{"length":32,"start":2838}],"2715":[{"length":32,"start":863},{"length":32,"start":2959}]},"linkReferences":{},"object":"60806040526004361061020f5760003560e01c80638b673e7a11610118578063aefb212f116100a0578063dac83d291161006f578063dac83d2914610727578063dc311dd314610747578063dcab3dcf14610778578063e72f6e30146107ac578063f2fde38b146107cc57600080fd5b8063aefb212f1461069a578063b2a7cac5146106c7578063bec4c08c146106e7578063cb6317971461070757600080fd5b80639b1c385e116100e75780639b1c385e146105ed5780639d40a6fd1461060d578063a21a23e414610645578063a4c0ed361461065a578063aa433aff1461067a57600080fd5b80638b673e7a146105875780638da5cb5b1461059c578063953e9c75146105ba57806395b55cfc146105da57600080fd5b806341af6c871161019b57806372e9d5651161016a57806372e9d565146104f257806379ba509714610512578063808974ff146105275780638402595e1461054757806386fe91c71461056757600080fd5b806341af6c871461045a57806351cff8d91461048a57806364d51a2a146104aa57806365982744146104d257600080fd5b806313478329116101e2578063134783291461034d57806318e3dd271461038f5780631b6b6d23146103ce5780631eebc117146104065780632f622e6b1461043a57600080fd5b8063088070f51461021457806308e3898e146102eb5780630ae095401461030d578063115e3c0d1461032d575b600080fd5b34801561022057600080fd5b50600c546102899061ffff81169063ffffffff62010000820481169160ff600160301b82048116926701000000000000008304811692600160581b8104821692600160781b8204831692600160981b83041691600160b81b8104821691600160c01b9091041689565b6040805161ffff909a168a5263ffffffff98891660208b01529615159689019690965293861660608801529185166080870152841660a08601529290921660c084015260ff91821660e084015216610100820152610120015b60405180910390f35b3480156102f757600080fd5b5061030b610306366004612e94565b6107ec565b005b34801561031957600080fd5b5061030b610328366004612f57565b610c7c565b34801561033957600080fd5b5061030b610348366004612f87565b610d7c565b34801561035957600080fd5b506103817f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102e2565b34801561039b57600080fd5b50600a546103b690600160601b90046001600160601b031681565b6040516001600160601b0390911681526020016102e2565b3480156103da57600080fd5b506002546103ee906001600160a01b031681565b6040516001600160a01b0390911681526020016102e2565b34801561041257600080fd5b506103b67f000000000000000000000000000000000000000000000000000000000000000081565b34801561044657600080fd5b5061030b610455366004612fa9565b610e90565b34801561046657600080fd5b5061047a610475366004612fc6565b610fe4565b60405190151581526020016102e2565b34801561049657600080fd5b5061030b6104a5366004612fa9565b610fff565b3480156104b657600080fd5b506104bf606481565b60405161ffff90911681526020016102e2565b3480156104de57600080fd5b5061030b6104ed366004612fdf565b611181565b3480156104fe57600080fd5b506003546103ee906001600160a01b031681565b34801561051e57600080fd5b5061030b6111e1565b34801561053357600080fd5b5061030b610542366004612f57565b611290565b34801561055357600080fd5b5061030b610562366004612fa9565b6112b4565b34801561057357600080fd5b50600a546103b6906001600160601b031681565b34801561059357600080fd5b5061030b6113cf565b3480156105a857600080fd5b506000546001600160a01b03166103ee565b3480156105c657600080fd5b5061047a6105d5366004612f57565b611458565b61030b6105e8366004612fc6565b611486565b3480156105f957600080fd5b5061038161060836600461300d565b6115aa565b34801561061957600080fd5b5060075461062d906001600160401b031681565b6040516001600160401b0390911681526020016102e2565b34801561065157600080fd5b5061038161180e565b34801561066657600080fd5b5061030b610675366004613047565b6119e4565b34801561068657600080fd5b5061030b610695366004612fc6565b611b55565b3480156106a657600080fd5b506106ba6106b5366004612f87565b611b9d565b6040516102e2919061310a565b3480156106d357600080fd5b5061030b6106e2366004612fc6565b611c9e565b3480156106f357600080fd5b5061030b610702366004612f57565b611da2565b34801561071357600080fd5b5061030b610722366004612f57565b611e95565b34801561073357600080fd5b5061030b610742366004612f57565b612123565b34801561075357600080fd5b50610767610762366004612fc6565b6121bd565b6040516102e295949392919061311d565b34801561078457600080fd5b506103b67f000000000000000000000000000000000000000000000000000000000000000081565b3480156107b857600080fd5b5061030b6107c7366004612fa9565b6122ab565b3480156107d857600080fd5b5061030b6107e7366004612fa9565b612475565b60005a6000858152601060205260408120549192500361081f576040516341abc80160e01b815260040160405180910390fd5b6000848152601060209081526040808320815160808101835281548152600182015463ffffffff80821695830195909552640100000000900490931691830191909152600281018054606084019190610877906131a3565b80601f01602080910402602001604051908101604052809291908181526020018280546108a3906131a3565b80156108f05780601f106108c5576101008083540402835291602001916108f0565b820191906000526020600020905b8154815290600101906020018083116108d357829003601f168201915b505050505081525050905082516000036109c957806040015163ffffffff166001600160401b0381111561092657610926612e4e565b60405190808252806020026020018201604052801561094f578160200160208202803683370190505b50925060005b816040015163ffffffff168110156109c35760408051602081018890529081018290526060016040516020818303038152906040528051906020012060001c8482815181106109a6576109a66131dd565b6020908102919091010152806109bb81613209565b915050610955565b506109f4565b806040015163ffffffff168351146109f457604051631f9efadb60e11b815260040160405180910390fd5b600080631fe543e360e01b8786604051602401610a12929190613222565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352600c805466ff0000000000001916600160301b1790559185015191519092506000916001600160a01b0389169163ffffffff90911690610a86908590613267565b60006040518083038160008787f1925050503d8060008114610ac4576040519150601f19603f3d011682016040523d82523d6000602084013e610ac9565b606091505b5050600c805466ff0000000000001916905560608501518051919250600091610af490600190613283565b81518110610b0457610b046131dd565b60209101015160f81c600114905060007f00000000000000000000000000000000000000000000000000000000000000006001600160601b03165a610b499089613283565b610b539190613296565b610b86906001600160601b037f0000000000000000000000000000000000000000000000000000000000000000166132ad565b905081610bcd577f0000000000000000000000000000000000000000000000000000000000000000610bc082670de0b6b3a7640000613296565b610bca91906132c0565b90505b85518190610bde9082908590612489565b60008b815260106020526040812081815560018101805467ffffffffffffffff1916905590610c106002830182612d6b565b50508651604080518d81526001600160601b03841660208201528515158183015286151560608201526000608082015290518d917faeb4b4786571e184246d39587f659abf0e26f41f6a3358692250382c0cdb47b7919081900360a00190a35050505050505050505050565b81610c86816125e6565b610c8e612650565b600080610c9a8561267d565b915091506000846001600160a01b0316826001600160601b031660405160006040518083038185875af1925050503d8060008114610cf4576040519150601f19603f3d011682016040523d82523d6000602084013e610cf9565b606091505b5050905080610d1b5760405163950b247960e01b815260040160405180910390fd5b604080516001600160a01b03871681526001600160601b03808616602083015284169181019190915286907f8c74ce8b8cf87f5eb001275c8be27eb34ea2b62bfab6814fcc62192bb63e81c4906060015b60405180910390a2505050505050565b6000828152600560205260409020546001600160a01b0316610db157604051630fb532db60e11b815260040160405180910390fd5b600082815260066020526040812080546001600160601b031691839190610dd883856132e2565b92506101000a8154816001600160601b0302191690836001600160601b0316021790555081600a60008282829054906101000a90046001600160601b0316610e2091906132e2565b92506101000a8154816001600160601b0302191690836001600160601b03160217905550827f1ced9348ff549fceab2ac57cd3a9de38edaaab274b725ee82c23e8fc8c4eec7a828484610e7391906132ad565b6040805192835260208301919091520160405180910390a2505050565b610e98612650565b610ea061282f565b600b54600160601b90046001600160601b0316600003610ed357604051631e9acf1760e31b815260040160405180910390fd5b600b8054600160601b90046001600160601b0316908190600c610ef68380613302565b92506101000a8154816001600160601b0302191690836001600160601b0316021790555080600a600c8282829054906101000a90046001600160601b0316610f3e9190613302565b92506101000a8154816001600160601b0302191690836001600160601b031602179055506000826001600160a01b0316826001600160601b031660405160006040518083038185875af1925050503d8060008114610fb8576040519150601f19603f3d011682016040523d82523d6000602084013e610fbd565b606091505b5050905080610fdf5760405163950b247960e01b815260040160405180910390fd5b505050565b600060405163d623472560e01b815260040160405180910390fd5b611007612650565b61100f61282f565b6002546001600160a01b03166110385760405163c1f0c0a160e01b815260040160405180910390fd5b600b546001600160601b031660000361106457604051631e9acf1760e31b815260040160405180910390fd5b600b80546001600160601b031690819060006110808380613302565b92506101000a8154816001600160601b0302191690836001600160601b0316021790555080600a60008282829054906101000a90046001600160601b03166110c89190613302565b82546101009290920a6001600160601b0381810219909316918316021790915560025460405163a9059cbb60e01b81526001600160a01b03868116600483015292851660248201529116915063a9059cbb906044016020604051808303816000875af115801561113c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111609190613330565b61117d57604051631e9acf1760e31b815260040160405180910390fd5b5050565b61118961282f565b6002546001600160a01b0316156111b357604051631688c53760e11b815260040160405180910390fd5b600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055565b6001546001600160a01b031633146112395760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b611298612650565b60408051600081526020810190915261117d90839083906107ec565b6112bc61282f565b600a544790600160601b90046001600160601b0316818111156112fc576040516354ced18160e11b81526004810182905260248101839052604401611230565b81811015610fdf5760006113108284613283565b90506000846001600160a01b03168260405160006040518083038185875af1925050503d806000811461135f576040519150601f19603f3d011682016040523d82523d6000602084013e611364565b606091505b50509050806113865760405163950b247960e01b815260040160405180910390fd5b604080516001600160a01b0387168152602081018490527f4aed7c8eed0496c8c19ea2681fcca25741c1602342e38b045d9f1e8e905d2e9c910160405180910390a15050505050565b6113d761282f565b6040805161012081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100909101819052600c80546001600160c81b031916905590517f4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be9190a1565b6001600160a01b038116600090815260046020908152604080832085845290915290205460ff165b92915050565b61148e612650565b6000818152600560205260409020546001600160a01b03166114c357604051630fb532db60e11b815260040160405180910390fd5b60008181526006602052604090208054600160601b90046001600160601b0316903490600c6114f283856132e2565b92506101000a8154816001600160601b0302191690836001600160601b0316021790555034600a600c8282829054906101000a90046001600160601b031661153a91906132e2565b92506101000a8154816001600160601b0302191690836001600160601b03160217905550817f7603b205d03651ee812f803fccde89f1012e545a9c99f0abfea9cedd0fd8e90282348461158d91906132ad565b604080519283526020830191909152015b60405180910390a25050565b60006115b4612650565b8160200135336115c48282611458565b6115f3576040516379bfd40160e01b8152600481018390526001600160a01b0382166024820152604401611230565b602080850135600081815260059092526040909120546001600160a01b031661162f57604051630fb532db60e11b815260040160405180910390fd5b600e80546000918261164083613209565b90915550600f8054919250600091908261165983613209565b909155509050600061167e61167961167460a08b018b61334d565b612882565b61290a565b90506040518060800160405280896020013581526020018960600160208101906116a8919061339a565b63ffffffff1681526020016116c360a08b0160808c0161339a565b63ffffffff1681526020016116db60a08b018b61334d565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508581526010602090815260409182902084518155908401516001820180549386015163ffffffff9081166401000000000267ffffffffffffffff199095169216919091179290921790915560608301519091506002820190611773908261340e565b50905050336001600160a01b0316886020013589600001357feb0e3652e0f44f417695e6e90f2f42c99b65cd7169074c5a654b16b9748c3a4e86868d60400160208101906117c191906134cd565b8e60600160208101906117d4919061339a565b8f60800160208101906117e7919061339a565b896040516117fa969594939291906134f1565b60405180910390a450909695505050505050565b6000611818612650565b6007546001600160401b031633611830600143613283565b6040516bffffffffffffffffffffffff19606093841b81166020830152914060348201523090921b1660548201526001600160c01b031960c083901b16606882015260700160408051601f198184030181529190528051602090910120915061189a816001613555565b6007805467ffffffffffffffff19166001600160401b03928316179055604080516000808252608082018352602080830182815283850183815260608086018581528a86526006855287862093518454935191516001600160601b039182166001600160c01b031990951694909417600160601b9190921602176001600160c01b0316600160c01b9290981691909102969096179055835194850184523385528481018281528585018481528884526005835294909220855181546001600160a01b03199081166001600160a01b0392831617835593516001830180549095169116179092559251805192949391926119999260028501920190612da5565b506119a99150600890508461297b565b5060405133815283907f1d3015d7ba850fa198dc7b1a3f5d42779313a681035f77c8c03764c61005518d9060200160405180910390a2505090565b6119ec612650565b6002546001600160a01b03163314611a17576040516344b0e3c360e01b815260040160405180910390fd5b60208114611a3857604051638129bbcd60e01b815260040160405180910390fd5b6000611a4682840184612fc6565b6000818152600560205260409020549091506001600160a01b0316611a7e57604051630fb532db60e11b815260040160405180910390fd5b600081815260066020526040812080546001600160601b031691869190611aa583856132e2565b92506101000a8154816001600160601b0302191690836001600160601b0316021790555084600a60008282829054906101000a90046001600160601b0316611aed91906132e2565b92506101000a8154816001600160601b0302191690836001600160601b03160217905550817f1ced9348ff549fceab2ac57cd3a9de38edaaab274b725ee82c23e8fc8c4eec7a828784611b4091906132ad565b60408051928352602083019190915201610d6c565b611b5d61282f565b6000818152600560205260409020546001600160a01b031680611b9357604051630fb532db60e11b815260040160405180910390fd5b61117d8282612987565b60606000611bab6008612b2d565b9050808410611bcd57604051631390f2a160e01b815260040160405180910390fd5b6000611bd984866132ad565b905081811180611be7575083155b611bf15780611bf3565b815b90506000611c018683613283565b9050806001600160401b03811115611c1b57611c1b612e4e565b604051908082528060200260200182016040528015611c44578160200160208202803683370190505b50935060005b81811015611c9457611c67611c5f88836132ad565b600890612b37565b858281518110611c7957611c796131dd565b6020908102919091010152611c8d81613209565b9050611c4a565b5050505092915050565b611ca6612650565b6000818152600560205260409020546001600160a01b031680611cdc57604051630fb532db60e11b815260040160405180910390fd5b6000828152600560205260409020600101546001600160a01b03163314611d35576000828152600560205260409081902060010154905163d084e97560e01b81526001600160a01b039091166004820152602401611230565b6000828152600560209081526040918290208054336001600160a01b03199182168117835560019092018054909116905582516001600160a01b03851681529182015283917fd4114ab6e9af9f597c52041f32d62dc57c5c4e4c0d4427006069635e216c9386910161159e565b81611dac816125e6565b611db4612650565b6001600160a01b03821660009081526004602090815260408083208684529091529020805460ff1615611de75750505050565b6000848152600560205260409020600201805460631901611e1b576040516305a48e0f60e01b815260040160405180910390fd5b8154600160ff199091168117835581549081018255600082815260209081902090910180546001600160a01b0319166001600160a01b03871690811790915560405190815286917f1e980d04aa7648e205713e5e8ea3808672ac163d10936d36f91b2c88ac1575e191015b60405180910390a25050505050565b81611e9f816125e6565b8282611eab8282611458565b611eda576040516379bfd40160e01b8152600481018390526001600160a01b0382166024820152604401611230565b611ee2612650565b6001600160a01b038416600090815260046020908152604080832088845290915290205460ff16611f38576040516379bfd40160e01b8152600481018690526001600160a01b0385166024820152604401611230565b600085815260056020908152604080832060020180548251818502810185019093528083529192909190830182828015611f9b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f7d575b50505050509050600060018251611fb29190613283565b905060005b82518110156120bb57866001600160a01b0316838281518110611fdc57611fdc6131dd565b60200260200101516001600160a01b0316036120ab576000838381518110612006576120066131dd565b6020026020010151905080600560008b81526020019081526020016000206002018381548110612038576120386131dd565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394909416939093179092558a815260059091526040902060020180548061208357612083613575565b600082815260209020810160001990810180546001600160a01b0319169055019055506120bb565b6120b481613209565b9050611fb7565b506001600160a01b03861660008181526004602090815260408083208b8452825291829020805460ff19169055905191825288917f32158c6058347c1601b2d12bc696ac6901d8a9a9aa3ba10c27ab0a983e8425a7910160405180910390a250505050505050565b8161212d816125e6565b612135612650565b600083815260056020526040902060018101546001600160a01b038481169116146121b7576001810180546001600160a01b0319166001600160a01b03851690811790915560408051338152602081019290925285917f21a4dad170a6bf476c31bbcf4a16628295b0e450672eec25d7c93308e05344a1910160405180910390a25b50505050565b600081815260056020526040812054819081906001600160a01b03166060816121f957604051630fb532db60e11b815260040160405180910390fd5b600086815260066020908152604080832054600583529281902060020180548251818502810185019093528083526001600160601b0380861695600160601b810490911694600160c01b9091046001600160401b031693889392909183919083018282801561229157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612273575b505050505090509450945094509450945091939590929450565b6122b361282f565b6002546001600160a01b03166122dc5760405163c1f0c0a160e01b815260040160405180910390fd5b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015612325573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612349919061358b565b600a549091506001600160601b031681811115612383576040516354ced18160e11b81526004810182905260248101839052604401611230565b81811015610fdf5760006123978284613283565b60025460405163a9059cbb60e01b81526001600160a01b0387811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156123ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124109190613330565b61242d57604051631f01ff1360e21b815260040160405180910390fd5b604080516001600160a01b0386168152602081018390527f59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b436600910160405180910390a150505050565b61247d61282f565b61248681612b43565b50565b6000818152600660205260409020821561254d5780546001600160601b03600160601b90910481169085168110156124d457604051631e9acf1760e31b815260040160405180910390fd5b6124de8582613302565b82546bffffffffffffffffffffffff60601b1916600160601b6001600160601b039283168102919091178455600b805488939192600c926125239286929004166132e2565b92506101000a8154816001600160601b0302191690836001600160601b03160217905550506121b7565b80546001600160601b0390811690851681101561257d57604051631e9acf1760e31b815260040160405180910390fd5b6125878582613302565b82546bffffffffffffffffffffffff19166001600160601b03918216178355600b805487926000916125bb918591166132e2565b92506101000a8154816001600160601b0302191690836001600160601b031602179055505050505050565b6000818152600560205260409020546001600160a01b03168061261c57604051630fb532db60e11b815260040160405180910390fd5b336001600160a01b0382161461117d57604051636c51fda960e11b81526001600160a01b0382166004820152602401611230565b600c54600160301b900460ff161561267b5760405163769dd35360e11b815260040160405180910390fd5b565b60008181526005602090815260408083206006909252822054600290910180546001600160601b0380841694600160601b90940416925b8181101561272957600460008483815481106126d2576126d26131dd565b60009182526020808320909101546001600160a01b0316835282810193909352604091820181208982529092529020805470ffffffffffffffffffffffffffffffffff1916905561272281613209565b90506126b4565b50600085815260056020526040812080546001600160a01b031990811682556001820180549091169055906127616002830182612e0a565b505060008581526006602052604081205561277d600886612bec565b506001600160601b038416156127d057600a80548591906000906127ab9084906001600160601b0316613302565b92506101000a8154816001600160601b0302191690836001600160601b031602179055505b6001600160601b038316156128285782600a600c8282829054906101000a90046001600160601b03166128039190613302565b92506101000a8154816001600160601b0302191690836001600160601b031602179055505b5050915091565b6000546001600160a01b0316331461267b5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401611230565b60408051602081019091526000815260008290036128af5750604080516020810190915260008152611480565b63125fa26760e31b6128c183856135a4565b6001600160e01b031916146128e957604051632923fee760e11b815260040160405180910390fd5b6128f682600481866135d4565b81019061290391906135fe565b9392505050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa8260405160240161294391511515815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915292915050565b60006129038383612bf8565b6000806129938461267d565b60025491935091506001600160a01b0316158015906129ba57506001600160601b03821615155b15612a5b5760025460405163a9059cbb60e01b81526001600160a01b0385811660048301526001600160601b03851660248301529091169063a9059cbb906044016020604051808303816000875af1158015612a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a3e9190613330565b612a5b57604051631e9acf1760e31b815260040160405180910390fd5b6000836001600160a01b0316826001600160601b031660405160006040518083038185875af1925050503d8060008114612ab1576040519150601f19603f3d011682016040523d82523d6000602084013e612ab6565b606091505b5050905080612ad85760405163950b247960e01b815260040160405180910390fd5b604080516001600160a01b03861681526001600160601b03808616602083015284169181019190915285907f8c74ce8b8cf87f5eb001275c8be27eb34ea2b62bfab6814fcc62192bb63e81c490606001611e86565b6000611480825490565b60006129038383612c47565b336001600160a01b03821603612b9b5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401611230565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006129038383612c71565b6000818152600183016020526040812054612c3f57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611480565b506000611480565b6000826000018281548110612c5e57612c5e6131dd565b9060005260206000200154905092915050565b60008181526001830160205260408120548015612d5a576000612c95600183613283565b8554909150600090612ca990600190613283565b9050818114612d0e576000866000018281548110612cc957612cc96131dd565b9060005260206000200154905080876000018481548110612cec57612cec6131dd565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612d1f57612d1f613575565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611480565b6000915050611480565b5092915050565b508054612d77906131a3565b6000825580601f10612d87575050565b601f0160209004906000526020600020908101906124869190612e24565b828054828255906000526020600020908101928215612dfa579160200282015b82811115612dfa57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612dc5565b50612e06929150612e24565b5090565b508054600082559060005260206000209081019061248691905b5b80821115612e065760008155600101612e25565b6001600160a01b038116811461248657600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612e8c57612e8c612e4e565b604052919050565b600080600060608486031215612ea957600080fd5b83359250602080850135612ebc81612e39565b925060408501356001600160401b0380821115612ed857600080fd5b818701915087601f830112612eec57600080fd5b813581811115612efe57612efe612e4e565b8060051b9150612f0f848301612e64565b818152918301840191848101908a841115612f2957600080fd5b938501935b83851015612f4757843582529385019390850190612f2e565b8096505050505050509250925092565b60008060408385031215612f6a57600080fd5b823591506020830135612f7c81612e39565b809150509250929050565b60008060408385031215612f9a57600080fd5b50508035926020909101359150565b600060208284031215612fbb57600080fd5b813561290381612e39565b600060208284031215612fd857600080fd5b5035919050565b60008060408385031215612ff257600080fd5b8235612ffd81612e39565b91506020830135612f7c81612e39565b60006020828403121561301f57600080fd5b81356001600160401b0381111561303557600080fd5b820160c0818503121561290357600080fd5b6000806000806060858703121561305d57600080fd5b843561306881612e39565b93506020850135925060408501356001600160401b038082111561308b57600080fd5b818701915087601f83011261309f57600080fd5b8135818111156130ae57600080fd5b8860208285010111156130c057600080fd5b95989497505060200194505050565b600081518084526020808501945080840160005b838110156130ff578151875295820195908201906001016130e3565b509495945050505050565b60208152600061290360208301846130cf565b6001600160601b03868116825285166020808301919091526001600160401b03851660408301526001600160a01b03848116606084015260a0608084018190528451908401819052600092858101929160c0860190855b81811015613192578551851683529483019491830191600101613174565b50909b9a5050505050505050505050565b600181811c908216806131b757607f821691505b6020821081036131d757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161321b5761321b6131f3565b5060010190565b82815260406020820152600061323b60408301846130cf565b949350505050565b60005b8381101561325e578181015183820152602001613246565b50506000910152565b60008251613279818460208701613243565b9190910192915050565b81810381811115611480576114806131f3565b8082028115828204841417611480576114806131f3565b80820180821115611480576114806131f3565b6000826132dd57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160601b03818116838216019080821115612d6457612d646131f3565b6001600160601b03828116828216039080821115612d6457612d646131f3565b801515811461248657600080fd5b60006020828403121561334257600080fd5b815161290381613322565b6000808335601e1984360301811261336457600080fd5b8301803591506001600160401b0382111561337e57600080fd5b60200191503681900382131561339357600080fd5b9250929050565b6000602082840312156133ac57600080fd5b813563ffffffff8116811461290357600080fd5b601f821115610fdf57600081815260208120601f850160051c810160208610156133e75750805b601f850160051c820191505b81811015613406578281556001016133f3565b505050505050565b81516001600160401b0381111561342757613427612e4e565b61343b8161343584546131a3565b846133c0565b602080601f83116001811461347057600084156134585750858301515b600019600386901b1c1916600185901b178555613406565b600085815260208120601f198616915b8281101561349f57888601518255948401946001909101908401613480565b50858210156134bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156134df57600080fd5b813561ffff8116811461290357600080fd5b86815285602082015261ffff85166040820152600063ffffffff808616606084015280851660808401525060c060a083015282518060c084015261353c8160e0850160208701613243565b601f01601f19169190910160e001979650505050505050565b6001600160401b03818116838216019080821115612d6457612d646131f3565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561359d57600080fd5b5051919050565b6001600160e01b031981358181169160048510156135cc5780818660040360031b1b83161692505b505092915050565b600080858511156135e457600080fd5b838611156135f157600080fd5b5050820193919092039150565b60006020828403121561361057600080fd5b604051602081018181106001600160401b038211171561363257613632612e4e565b604052823561364081613322565b8152939250505056fea264697066735822122073215a99276330c7bd5e223a17f7321448c5051399b38ef6032224961be41b4164736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B673E7A GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xAEFB212F GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDAC83D29 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDAC83D29 EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0xDC311DD3 EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xDCAB3DCF EQ PUSH2 0x778 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x7AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAEFB212F EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xB2A7CAC5 EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0xBEC4C08C EQ PUSH2 0x6E7 JUMPI DUP1 PUSH4 0xCB631797 EQ PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B1C385E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x9B1C385E EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x9D40A6FD EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0xAA433AFF EQ PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B673E7A EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0x953E9C75 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x95B55CFC EQ PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41AF6C87 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x72E9D565 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x72E9D565 EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x8402595E EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x86FE91C7 EQ PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41AF6C87 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x65982744 EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13478329 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x13478329 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x18E3DD27 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x1EEBC117 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x2F622E6B EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88070F5 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xAE09540 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x115E3C0D EQ PUSH2 0x32D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFFF DUP2 AND SWAP1 PUSH4 0xFFFFFFFF PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP3 DIV DUP2 AND SWAP3 PUSH8 0x100000000000000 DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x58 SHL DUP2 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x78 SHL DUP3 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x98 SHL DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP11 AND DUP11 MSTORE PUSH4 0xFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP12 ADD MSTORE SWAP7 ISZERO ISZERO SWAP7 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP4 DUP7 AND PUSH1 0x60 DUP9 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP8 ADD MSTORE DUP5 AND PUSH1 0xA0 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP3 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0xE0 DUP5 ADD MSTORE AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E94 JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0xC7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F87 JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x3B6 SWAP1 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x4A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BF PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2FDF JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x11E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x12B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x3B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x13CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x5D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x5E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0x1486 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x300D JUMP JUMPDEST PUSH2 0x15AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x62D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x180E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x675 CALLDATASIZE PUSH1 0x4 PUSH2 0x3047 JUMP JUMPDEST PUSH2 0x19E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0x1B55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BA PUSH2 0x6B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F87 JUMP JUMPDEST PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x310A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x6E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x702 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x1DA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x1E95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x2123 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x767 PUSH2 0x762 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC6 JUMP JUMPDEST PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x311D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x22AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x0 GAS PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SUB PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH4 0x41ABC801 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH5 0x100000000 SWAP1 DIV SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 PUSH2 0x877 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A3 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x9C9 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x926 JUMPI PUSH2 0x926 PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x94F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9A6 JUMPI PUSH2 0x9A6 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9BB DUP2 PUSH2 0x3209 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x955 JUMP JUMPDEST POP PUSH2 0x9F4 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F9EFADB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA12 SWAP3 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 MSTORE PUSH1 0xC DUP1 SLOAD PUSH7 0xFF000000000000 NOT AND PUSH1 0x1 PUSH1 0x30 SHL OR SWAP1 SSTORE SWAP2 DUP6 ADD MLOAD SWAP2 MLOAD SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH2 0xA86 SWAP1 DUP6 SWAP1 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH7 0xFF000000000000 NOT AND SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD DUP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xAF4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3283 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xB04 JUMPI PUSH2 0xB04 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0x1 EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GAS PUSH2 0xB49 SWAP1 DUP10 PUSH2 0x3283 JUMP JUMPDEST PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH2 0xB86 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH32 0x0 AND PUSH2 0x32AD JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xBCD JUMPI PUSH32 0x0 PUSH2 0xBC0 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3296 JUMP JUMPDEST PUSH2 0xBCA SWAP2 SWAP1 PUSH2 0x32C0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 SWAP1 PUSH2 0xBDE SWAP1 DUP3 SWAP1 DUP6 SWAP1 PUSH2 0x2489 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE SWAP1 PUSH2 0xC10 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x2D6B JUMP JUMPDEST POP POP DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP14 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP6 ISZERO ISZERO DUP2 DUP4 ADD MSTORE DUP7 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD DUP14 SWAP2 PUSH32 0xAEB4B4786571E184246D39587F659ABF0E26F41F6A3358692250382C0CDB47B7 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0xC86 DUP2 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0xC8E PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9A DUP6 PUSH2 0x267D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH4 0x950B2479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 SWAP1 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xDD8 DUP4 DUP6 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0xE20 SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP5 DUP5 PUSH2 0xE73 SWAP2 SWAP1 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xE98 PUSH2 0x2650 JUMP JUMPDEST PUSH2 0xEA0 PUSH2 0x282F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x0 SUB PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH1 0xC PUSH2 0xEF6 DUP4 DUP1 PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFB8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xFDF JUMPI PUSH1 0x40 MLOAD PUSH4 0x950B2479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xD6234725 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1007 PUSH2 0x2650 JUMP JUMPDEST PUSH2 0x100F PUSH2 0x282F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1F0C0A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x0 SUB PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x1080 DUP4 DUP1 PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x10C8 SWAP2 SWAP1 PUSH2 0x3302 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x113C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1160 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1189 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1688C537 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x1298 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH2 0x117D SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x12BC PUSH2 0x282F JUMP JUMPDEST PUSH1 0xA SLOAD SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 DUP2 GT ISZERO PUSH2 0x12FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x54CED181 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 PUSH2 0x1310 DUP3 DUP5 PUSH2 0x3283 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x135F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH4 0x950B2479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x4AED7C8EED0496C8C19EA2681FCCA25741C1602342E38B045D9F1E8E905D2E9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC8 SHL SUB NOT AND SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x148E PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 CALLVALUE SWAP1 PUSH1 0xC PUSH2 0x14F2 DUP4 DUP6 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x7603B205D03651EE812F803FCCDE89F1012E545A9C99F0ABFEA9CEDD0FD8E902 DUP3 CALLVALUE DUP5 PUSH2 0x158D SWAP2 SWAP1 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B4 PUSH2 0x2650 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD CALLDATALOAD CALLER PUSH2 0x15C4 DUP3 DUP3 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79BFD401 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x162F JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x1640 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0xF DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 DUP3 PUSH2 0x1659 DUP4 PUSH2 0x3209 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x167E PUSH2 0x1679 PUSH2 0x1674 PUSH1 0xA0 DUP12 ADD DUP12 PUSH2 0x334D JUMP JUMPDEST PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x290A JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x16A8 SWAP2 SWAP1 PUSH2 0x339A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C3 PUSH1 0xA0 DUP12 ADD PUSH1 0x80 DUP13 ADD PUSH2 0x339A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16DB PUSH1 0xA0 DUP12 ADD DUP12 PUSH2 0x334D JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP1 SWAP5 MSTORE POP POP DUP6 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP4 DUP7 ADD MLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH5 0x100000000 MUL PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP6 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x1773 SWAP1 DUP3 PUSH2 0x340E JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x20 ADD CALLDATALOAD DUP10 PUSH1 0x0 ADD CALLDATALOAD PUSH32 0xEB0E3652E0F44F417695E6E90F2F42C99B65CD7169074C5A654B16B9748C3A4E DUP7 DUP7 DUP14 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17C1 SWAP2 SWAP1 PUSH2 0x34CD JUMP JUMPDEST DUP15 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17D4 SWAP2 SWAP1 PUSH2 0x339A JUMP JUMPDEST DUP16 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17E7 SWAP2 SWAP1 PUSH2 0x339A JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH2 0x17FA SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1818 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND CALLER PUSH2 0x1830 PUSH1 0x1 NUMBER PUSH2 0x3283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP4 DUP5 SHL DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP2 BLOCKHASH PUSH1 0x34 DUP3 ADD MSTORE ADDRESS SWAP1 SWAP3 SHL AND PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT PUSH1 0xC0 DUP4 SWAP1 SHL AND PUSH1 0x68 DUP3 ADD MSTORE PUSH1 0x70 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP2 POP PUSH2 0x189A DUP2 PUSH1 0x1 PUSH2 0x3555 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP1 DUP7 ADD DUP6 DUP2 MSTORE DUP11 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP8 DUP7 KECCAK256 SWAP4 MLOAD DUP5 SLOAD SWAP4 MLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x60 SHL SWAP2 SWAP1 SWAP3 AND MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 SWAP1 SWAP9 AND SWAP2 SWAP1 SWAP2 MUL SWAP7 SWAP1 SWAP7 OR SWAP1 SSTORE DUP4 MLOAD SWAP5 DUP6 ADD DUP5 MSTORE CALLER DUP6 MSTORE DUP5 DUP2 ADD DUP3 DUP2 MSTORE DUP6 DUP6 ADD DUP5 DUP2 MSTORE DUP9 DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE SWAP5 SWAP1 SWAP3 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP4 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP1 SWAP6 AND SWAP2 AND OR SWAP1 SWAP3 SSTORE SWAP3 MLOAD DUP1 MLOAD SWAP3 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x1999 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x2DA5 JUMP JUMPDEST POP PUSH2 0x19A9 SWAP2 POP PUSH1 0x8 SWAP1 POP DUP5 PUSH2 0x297B JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE DUP4 SWAP1 PUSH32 0x1D3015D7BA850FA198DC7B1A3F5D42779313A681035F77C8C03764C61005518D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x19EC PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x44B0E3C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 EQ PUSH2 0x1A38 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8129BBCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A46 DUP3 DUP5 ADD DUP5 PUSH2 0x2FC6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A7E JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1AA5 DUP4 DUP6 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1AED SWAP2 SWAP1 PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP8 DUP5 PUSH2 0x1B40 SWAP2 SWAP1 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD6C JUMP JUMPDEST PUSH2 0x1B5D PUSH2 0x282F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1B93 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x117D DUP3 DUP3 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1BAB PUSH1 0x8 PUSH2 0x2B2D JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT PUSH2 0x1BCD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1390F2A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BD9 DUP5 DUP7 PUSH2 0x32AD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT DUP1 PUSH2 0x1BE7 JUMPI POP DUP4 ISZERO JUMPDEST PUSH2 0x1BF1 JUMPI DUP1 PUSH2 0x1BF3 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C01 DUP7 DUP4 PUSH2 0x3283 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C1B JUMPI PUSH2 0x1C1B PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C44 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C94 JUMPI PUSH2 0x1C67 PUSH2 0x1C5F DUP9 DUP4 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x8 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C79 JUMPI PUSH2 0x1C79 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1C8D DUP2 PUSH2 0x3209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA6 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1CDC JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D35 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0xD084E975 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x1 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE SWAP2 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0xD4114AB6E9AF9F597C52041F32D62DC57C5C4E4C0D4427006069635E216C9386 SWAP2 ADD PUSH2 0x159E JUMP JUMPDEST DUP2 PUSH2 0x1DAC DUP2 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x1DB4 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DE7 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x63 NOT ADD PUSH2 0x1E1B JUMPI PUSH1 0x40 MLOAD PUSH4 0x5A48E0F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR DUP4 SSTORE DUP2 SLOAD SWAP1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP7 SWAP2 PUSH32 0x1E980D04AA7648E205713E5E8EA3808672AC163D10936D36F91B2C88AC1575E1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1E9F DUP2 PUSH2 0x25E6 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x1EAB DUP3 DUP3 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x1EDA JUMPI PUSH1 0x40 MLOAD PUSH4 0x79BFD401 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH2 0x1EE2 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79BFD401 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F9B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F7D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x1FB2 SWAP2 SWAP1 PUSH2 0x3283 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x20BB JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FDC JUMPI PUSH2 0x1FDC PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x20AB JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2006 JUMPI PUSH2 0x2006 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2038 JUMPI PUSH2 0x2038 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP11 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x2083 JUMPI PUSH2 0x2083 PUSH2 0x3575 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x20B4 DUP2 PUSH2 0x3209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE DUP9 SWAP2 PUSH32 0x32158C6058347C1601B2D12BC696AC6901D8A9A9AA3BA10C27AB0A983E8425A7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x212D DUP2 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x2135 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x21B7 JUMPI PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP6 SWAP2 PUSH32 0x21A4DAD170A6BF476C31BBCF4A16628295B0E450672EEC25D7C93308E05344A1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP2 PUSH2 0x21F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND SWAP6 PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP5 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP4 DUP9 SWAP4 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2291 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2273 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x22B3 PUSH2 0x282F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22DC JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1F0C0A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2349 SWAP2 SWAP1 PUSH2 0x358B JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 DUP2 GT ISZERO PUSH2 0x2383 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54CED181 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x1230 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 PUSH2 0x2397 DUP3 DUP5 PUSH2 0x3283 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2410 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x242D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F01FF13 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x247D PUSH2 0x282F JUMP JUMPDEST PUSH2 0x2486 DUP2 PUSH2 0x2B43 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 ISZERO PUSH2 0x254D JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP6 AND DUP2 LT ISZERO PUSH2 0x24D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24DE DUP6 DUP3 PUSH2 0x3302 JUMP JUMPDEST DUP3 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 SHL NOT AND PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP5 SSTORE PUSH1 0xB DUP1 SLOAD DUP9 SWAP4 SWAP2 SWAP3 PUSH1 0xC SWAP3 PUSH2 0x2523 SWAP3 DUP7 SWAP3 SWAP1 DIV AND PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x21B7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND DUP2 LT ISZERO PUSH2 0x257D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2587 DUP6 DUP3 PUSH2 0x3302 JUMP JUMPDEST DUP3 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND OR DUP4 SSTORE PUSH1 0xB DUP1 SLOAD DUP8 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x25BB SWAP2 DUP6 SWAP2 AND PUSH2 0x32E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x261C JUMPI PUSH1 0x40 MLOAD PUSH4 0xFB532DB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6C51FDA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x267B JUMPI PUSH1 0x40 MLOAD PUSH4 0x769DD353 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP5 AND SWAP5 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP5 DIV AND SWAP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2729 JUMPI PUSH1 0x4 PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x26D2 JUMPI PUSH2 0x26D2 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 DUP10 DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH2 0x2722 DUP2 PUSH2 0x3209 JUMP JUMPDEST SWAP1 POP PUSH2 0x26B4 JUMP JUMPDEST POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE SWAP1 PUSH2 0x2761 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x2E0A JUMP JUMPDEST POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x277D PUSH1 0x8 DUP7 PUSH2 0x2BEC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND ISZERO PUSH2 0x27D0 JUMPI PUSH1 0xA DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x27AB SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND ISZERO PUSH2 0x2828 JUMPI DUP3 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x2803 SWAP2 SWAP1 PUSH2 0x3302 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x267B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP3 SWAP1 SUB PUSH2 0x28AF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x1480 JUMP JUMPDEST PUSH4 0x125FA267 PUSH1 0xE3 SHL PUSH2 0x28C1 DUP4 DUP6 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x28E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2923FEE7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28F6 DUP3 PUSH1 0x4 DUP2 DUP7 PUSH2 0x35D4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2903 SWAP2 SWAP1 PUSH2 0x35FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2943 SWAP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2903 DUP4 DUP4 PUSH2 0x2BF8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2993 DUP5 PUSH2 0x267D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x29BA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2A5B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3E SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x2A5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2AB1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2AB6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2AD8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x950B2479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 SWAP1 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 SWAP1 PUSH1 0x60 ADD PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1480 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2903 DUP4 DUP4 PUSH2 0x2C47 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x2B9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2903 DUP4 DUP4 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2C3F JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1480 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C5E JUMPI PUSH2 0x2C5E PUSH2 0x31DD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2D5A JUMPI PUSH1 0x0 PUSH2 0x2C95 PUSH1 0x1 DUP4 PUSH2 0x3283 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2CA9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3283 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2D0E JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2CC9 JUMPI PUSH2 0x2CC9 PUSH2 0x31DD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2CEC JUMPI PUSH2 0x2CEC PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2D1F JUMPI PUSH2 0x2D1F PUSH2 0x3575 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1480 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2D77 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2D87 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2486 SWAP2 SWAP1 PUSH2 0x2E24 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2DFA JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2DFA JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2DC5 JUMP JUMPDEST POP PUSH2 0x2E06 SWAP3 SWAP2 POP PUSH2 0x2E24 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2486 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2E8C JUMPI PUSH2 0x2E8C PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP1 DUP6 ADD CALLDATALOAD PUSH2 0x2EBC DUP2 PUSH2 0x2E39 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2ED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2EEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2EFE JUMPI PUSH2 0x2EFE PUSH2 0x2E4E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x2F0F DUP5 DUP4 ADD PUSH2 0x2E64 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x2F29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2F47 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x2F2E JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2F7C DUP2 PUSH2 0x2E39 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2903 DUP2 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2FFD DUP2 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2F7C DUP2 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0xC0 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x2903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x305D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x3068 DUP2 PUSH2 0x2E39 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x308B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x309F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x30AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x30C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30FF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30E3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2903 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x30CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE DUP5 MLOAD SWAP1 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP6 DUP2 ADD SWAP3 SWAP2 PUSH1 0xC0 DUP7 ADD SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3192 JUMPI DUP6 MLOAD DUP6 AND DUP4 MSTORE SWAP5 DUP4 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3174 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x31B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x321B JUMPI PUSH2 0x321B PUSH2 0x31F3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x323B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x325E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3246 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3279 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3243 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x31F3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x31F3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x31F3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x32DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2D64 JUMPI PUSH2 0x2D64 PUSH2 0x31F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2D64 JUMPI PUSH2 0x2D64 PUSH2 0x31F3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2903 DUP2 PUSH2 0x3322 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x337E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x3393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x33E7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3406 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33F3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3427 JUMPI PUSH2 0x3427 PUSH2 0x2E4E JUMP JUMPDEST PUSH2 0x343B DUP2 PUSH2 0x3435 DUP5 SLOAD PUSH2 0x31A3 JUMP JUMPDEST DUP5 PUSH2 0x33C0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3470 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3458 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3406 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x349F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3480 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x34BD JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xC0 PUSH1 0xA0 DUP4 ADD MSTORE DUP3 MLOAD DUP1 PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x353C DUP2 PUSH1 0xE0 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3243 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0xE0 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2D64 JUMPI PUSH2 0x2D64 PUSH2 0x31F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP2 PUSH1 0x4 DUP6 LT ISZERO PUSH2 0x35CC JUMPI DUP1 DUP2 DUP7 PUSH1 0x4 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x35E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x35F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x3632 JUMPI PUSH2 0x3632 PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD PUSH2 0x3640 DUP2 PUSH2 0x3322 JUMP JUMPDEST DUP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x215A99276330C7BD5E223A17F7321448C5051399 0xB3 DUP15 0xF6 SUB 0x22 0x24 SWAP7 SHL 0xE4 SHL COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"476:8658:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7796:22:10;;;;;;;;;;-1:-1:-1;7796:22:10;;;;;;;;;;;;;;;;-1:-1:-1;;;7796:22:10;;;;;;;;;;;-1:-1:-1;;;7796:22:10;;;;;-1:-1:-1;;;7796:22:10;;;;;-1:-1:-1;;;7796:22:10;;;;-1:-1:-1;;;7796:22:10;;;;;-1:-1:-1;;;7796:22:10;;;;;;;;;;389:6:19;377:19;;;359:38;;416:10;462:15;;;457:2;442:18;;435:43;521:14;;514:22;494:18;;;487:50;;;;573:15;;;568:2;553:18;;546:43;626:15;;;620:3;605:19;;598:44;679:15;;673:3;658:19;;651:44;732:15;;;;726:3;711:19;;704:44;797:4;785:17;;;779:3;764:19;;757:46;840:17;834:3;819:19;;812:46;346:3;331:19;7796:22:10;;;;;;;;3618:1427:16;;;;;;;;;;-1:-1:-1;3618:1427:16;;;;;:::i;:::-;;:::i;:::-;;8623:386;;;;;;;;;;-1:-1:-1;8623:386:16;;;;;:::i;:::-;;:::i;5873:398::-;;;;;;;;;;-1:-1:-1;5873:398:16;;;;;:::i;:::-;;:::i;631:43::-;;;;;;;;;;;;;;;;;;3288:25:19;;;3276:2;3261:18;631:43:16;3144:175:19;4812:34:10;;;;;;;;;;-1:-1:-1;4812:34:10;;;;-1:-1:-1;;;4812:34:10;;-1:-1:-1;;;;;4812:34:10;;;;;;-1:-1:-1;;;;;3486:39:19;;;3468:58;;3456:2;3441:18;4812:34:10;3324:208:19;812:30:10;;;;;;;;;;-1:-1:-1;812:30:10;;;;-1:-1:-1;;;;;812:30:10;;;;;;-1:-1:-1;;;;;3727:32:19;;;3709:51;;3697:2;3682:18;812:30:10;3537:229:19;554:34:16;;;;;;;;;;;;;;;11670:456:10;;;;;;;;;;-1:-1:-1;11670:456:10;;;;;:::i;:::-;;:::i;9013:119:16:-;;;;;;;;;;-1:-1:-1;9013:119:16;;;;;:::i;:::-;;:::i;:::-;;;4381:14:19;;4374:22;4356:41;;4344:2;4329:18;9013:119:16;4216:187:19;11087:420:10;;;;;;;;;;-1:-1:-1;11087:420:10;;;;;:::i;:::-;;:::i;1189:42::-;;;;;;;;;;;;1228:3;1189:42;;;;;4834:6:19;4822:19;;;4804:38;;4792:2;4777:18;1189:42:10;4660:188:19;8277:354:10;;;;;;;;;;-1:-1:-1;8277:354:10;;;;;:::i;:::-;;:::i;938:45::-;;;;;;;;;;-1:-1:-1;938:45:10;;;;-1:-1:-1;;;;;938:45:10;;;1026:316:4;;;;;;;;;;;;;:::i;3167:171:16:-;;;;;;;;;;-1:-1:-1;3167:171:16;;;;;:::i;:::-;;:::i;10294:632:10:-;;;;;;;;;;-1:-1:-1;10294:632:10;;;;;:::i;:::-;;:::i;4476:28::-;;;;;;;;;;-1:-1:-1;4476:28:10;;;;-1:-1:-1;;;;;4476:28:10;;;1890:397:16;;;;;;;;;;;;;:::i;1382:81:4:-;;;;;;;;;;-1:-1:-1;1429:7:4;1451;-1:-1:-1;;;;;1451:7:4;1382:81;;2291:142:16;;;;;;;;;;-1:-1:-1;2291:142:16;;;;;:::i;:::-;;:::i;12929:710:10:-;;;;;;:::i;:::-;;:::i;6791:926:16:-;;;;;;;;;;-1:-1:-1;6791:926:16;;;;;:::i;:::-;;:::i;3674:31:10:-;;;;;;;;;;-1:-1:-1;3674:31:10;;;;-1:-1:-1;;;;;3674:31:10;;;;;;-1:-1:-1;;;;;6438:31:19;;;6420:50;;6408:2;6393:18;3674:31:10;6276:200:19;14903:937:10;;;;;;;;;;;;;:::i;12130:743::-;;;;;;;;;;-1:-1:-1;12130:743:10;;;;;:::i;:::-;;:::i;8880:255::-;;;;;;;;;;-1:-1:-1;8880:255:10;;;;;:::i;:::-;;:::i;14282:565::-;;;;;;;;;;-1:-1:-1;14282:565:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16448:::-;;;;;;;;;;-1:-1:-1;16448:565:10;;;;;:::i;:::-;;:::i;17069:912::-;;;;;;;;;;-1:-1:-1;17069:912:10;;;;;:::i;:::-;;:::i;7773:794:16:-;;;;;;;;;;-1:-1:-1;7773:794:16;;;;;:::i;:::-;;:::i;15896:496:10:-;;;;;;;;;;-1:-1:-1;15896:496:10;;;;;:::i;:::-;;:::i;13695:531::-;;;;;;;;;;-1:-1:-1;13695:531:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;592:35:16:-;;;;;;;;;;;;;;;9263:888:10;;;;;;;;;;-1:-1:-1;9263:888:10;;;;;:::i;:::-;;:::i;847:98:4:-;;;;;;;;;;-1:-1:-1;847:98:4;;;;;:::i;:::-;;:::i;3618:1427:16:-;3735:16;3754:9;3773:22;;;;:10;:22;;;;;:28;3735;;-1:-1:-1;3773:33:16;3769:77;;3823:16;;-1:-1:-1;;;3823:16:16;;;;;;;;;;;3769:77;3851:18;3872:22;;;:10;:22;;;;;;;;3851:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3905:6;:13;3922:1;3905:18;3901:284;;3956:3;:12;;;3942:27;;-1:-1:-1;;;;;3942:27:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3942:27:16;;3933:36;;3982:9;3977:119;4001:3;:12;;;3997:16;;:1;:16;3977:119;;;4060:25;;;;;;9608::19;;;9649:18;;;9642:34;;;9581:18;;4060:25:16;;;;;;;;;;;;4050:36;;;;;;4042:45;;4030:6;4037:1;4030:9;;;;;;;;:::i;:::-;;;;;;;;;;:57;4015:3;;;;:::i;:::-;;;;3977:119;;;;3901:284;;;4129:3;:12;;;4112:29;;:6;:13;:29;4108:77;;4158:20;;-1:-1:-1;;;4158:20:16;;;;;;;;;;;4108:77;4191:23;4220:20;4266:32;;;4300:10;4312:6;4243:76;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4243:76:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;4243:76:16;-1:-1:-1;;;;;;4243:76:16;;;;;;;;;;4325:8;:30;;-1:-1:-1;;4325:30:16;-1:-1:-1;;;4325:30:16;;;4471:20;;;;4451:50;;4243:76;;-1:-1:-1;;;;;;;;4451:14:16;;;:50;;;;;;;4243:76;;4451:50;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4507:8:16;:31;;-1:-1:-1;;4507:31:16;;;4572:13;;;;4586:20;;4432:69;;-1:-1:-1;4533:5:16;;4586:24;;4507:31;;4586:24;:::i;:::-;4572:39;;;;;;;;:::i;:::-;;;;;;;;4616:1;4566:51;;-1:-1:-1;4624:18:16;4684:11;-1:-1:-1;;;;;4659:36:16;4671:9;4660:20;;:8;:20;:::i;:::-;4659:36;;;;:::i;:::-;4645:51;;-1:-1:-1;;;;;4645:10:16;:51;;:::i;:::-;4624:72;;4707:13;4702:98;;4773:19;4744:17;4751:10;4744:4;:17;:::i;:::-;4743:50;;;;:::i;:::-;4730:63;;4702:98;4886:9;;4829:10;;4847:49;;4829:10;;4871:13;;4847:14;:49::i;:::-;4911:22;;;;:10;:22;;;;;4903:31;;;;;;;;-1:-1:-1;;4903:31:16;;;4911:22;4903:31;;;;4911:22;4903:31;:::i;:::-;-1:-1:-1;;4990:9:16;;4945:95;;;11872:25:19;;;-1:-1:-1;;;;;11933:39:19;;11928:2;11913:18;;11906:67;12016:14;;12009:22;11989:18;;;11982:50;12075:14;;12068:22;12063:2;12048:18;;12041:50;-1:-1:-1;12122:3:19;12107:19;;12100:51;4945:95:16;;11872:25:19;;4945:95:16;;;;;;11859:3:19;4945:95:16;;;3729:1316;;;;;;;;3618:1427;;;:::o;8623:386::-;8711:6;19458:20:10;19472:5;19458:13;:20::i;:::-;7874:15:::1;:13;:15::i;:::-;8739:14:16::2;8755:20:::0;8779:27:::2;8799:6;8779:19;:27::i;:::-;8738:68;;;;8814:12;8832:3;-1:-1:-1::0;;;;;8832:8:16::2;8856:13;-1:-1:-1::0;;;;;8848:22:16::2;8832:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8813:62;;;8886:7;8881:56;;8910:20;;-1:-1:-1::0;;;8910:20:16::2;;;;;;;;;;;8881:56;8947:57;::::0;;-1:-1:-1;;;;;12590:32:19;;12572:51;;-1:-1:-1;;;;;12704:15:19;;;12699:2;12684:18;;12677:43;12756:15;;12736:18;;;12729:43;;;;8968:6:16;;8947:57:::2;::::0;12560:2:19;12545:18;8947:57:16::2;;;;;;;;8732:277;;;8623:386:::0;;;:::o;5873:398::-;5996:1;5949:29;;;:21;:29;;;;;:35;-1:-1:-1;;;;;5949:35:16;5945:98;;6015:21;;-1:-1:-1;;;6015:21:16;;;;;;;;;;;5945:98;6048:18;6069:23;;;:15;:23;;;;;:31;;-1:-1:-1;;;;;6069:31:16;;6148:7;;6069:23;6106:50;6148:7;6069:31;6106:50;:::i;:::-;;;;;;;;-1:-1:-1;;;;;6106:50:16;;;;;-1:-1:-1;;;;;6106:50:16;;;;;;6187:7;6162:14;;:33;;;;;;;;;;-1:-1:-1;;;;;6162:33:16;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;6162:33:16;;;;;-1:-1:-1;;;;;6162:33:16;;;;;;6225:6;6206:60;6233:10;6258:7;6245:10;:20;;;;:::i;:::-;6206:60;;;9608:25:19;;;9664:2;9649:18;;9642:34;;;;9581:18;6206:60:16;;;;;;;5939:332;5873:398;;:::o;11670:456:10:-;7874:15;:13;:15::i;:::-;2075:20:4::1;:18;:20::i;:::-;11763::10::2;::::0;-1:-1:-1;;;11763:20:10;::::2;-1:-1:-1::0;;;;;11763:20:10::2;11787:1;11763:25:::0;11759:74:::2;;11805:21;;-1:-1:-1::0;;;11805:21:10::2;;;;;;;;;;;11759:74;11916:20;::::0;;-1:-1:-1;;;11916:20:10;::::2;-1:-1:-1::0;;;;;11916:20:10::2;::::0;;;::::2;11942:30;11916:20:::0;;11942:30:::2;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;11942:30:10::2;;;;;-1:-1:-1::0;;;;;11942:30:10::2;;;;;;12002:6;11978:20;;:30;;;;;;;;;;-1:-1:-1::0;;;;;11978:30:10::2;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;11978:30:10::2;;;;;-1:-1:-1::0;;;;;11978:30:10::2;;;;;;12015:9;12030;-1:-1:-1::0;;;;;12030:14:10::2;12052:6;-1:-1:-1::0;;;;;12030:33:10::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12014:49;;;12074:4;12069:53;;12095:20;;-1:-1:-1::0;;;12095:20:10::2;;;;;;;;;;;12069:53;11753:373;;11670:456:::0;:::o;9013:119:16:-;9092:4;9111:16;;-1:-1:-1;;;9111:16:16;;;;;;;;;;;11087:420:10;7874:15;:13;:15::i;:::-;2075:20:4::1;:18;:20::i;:::-;11174:4:10::2;::::0;-1:-1:-1;;;;;11174:4:10::2;11162:67;;11210:12;;-1:-1:-1::0;;;11210:12:10::2;;;;;;;;;;;11162:67;11238:20;::::0;-1:-1:-1;;;;;11238:20:10::2;;:25:::0;11234:74:::2;;11280:21;;-1:-1:-1::0;;;11280:21:10::2;;;;;;;;;;;11234:74;11329:20;::::0;;-1:-1:-1;;;;;11329:20:10::2;::::0;;;11313:13:::2;11355:30;11329:20:::0;;11355:30:::2;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;11355:30:10::2;;;;;-1:-1:-1::0;;;;;11355:30:10::2;;;;;;11409:6;11391:14;;:24;;;;;;;;;;-1:-1:-1::0;;;;;11391:24:10::2;;;;;:::i;:::-;::::0;;::::2;::::0;;;::::2;-1:-1:-1::0;;;;;11391:24:10;;::::2;;::::0;;::::2;::::0;;::::2;;;::::0;;;11426:4:::2;::::0;:32:::2;::::0;-1:-1:-1;;;11426:32:10;;-1:-1:-1;;;;;13363:32:19;;;11426::10::2;::::0;::::2;13345:51:19::0;13432:39;;;13412:18;;;13405:67;11426:4:10;::::2;::::0;-1:-1:-1;11426:13:10::2;::::0;13318:18:19;;11426:32:10::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11421:82;;11475:21;;-1:-1:-1::0;;;11475:21:10::2;;;;;;;;;;;11421:82;11156:351;11087:420:::0;:::o;8277:354::-;2075:20:4;:18;:20::i;:::-;8469:4:10::1;::::0;-1:-1:-1;;;;;8469:4:10::1;8461:27:::0;8457:71:::1;;8505:16;;-1:-1:-1::0;;;8505:16:10::1;;;;;;;;;;;8457:71;8533:4;:31:::0;;-1:-1:-1;;;;;8533:31:10;;::::1;-1:-1:-1::0;;;;;;8533:31:10;;::::1;;::::0;;;8570:16:::1;:56:::0;;;;;::::1;::::0;::::1;;::::0;;8277:354::o;1026:316:4:-;1150:14;;-1:-1:-1;;;;;1150:14:4;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:4;;14058:2:19;1128:63:4;;;14040:21:19;14097:2;14077:18;;;14070:30;-1:-1:-1;;;14116:18:19;;;14109:52;14178:18;;1128:63:4;;;;;;;;;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:4;;;;;;;-1:-1:-1;1256:27:4;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:4;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;3167:171:16:-;7874:15:10;:13;:15::i;:::-;3316:16:16::1;::::0;;3330:1:::1;3316:16:::0;;::::1;::::0;::::1;::::0;;;3262:71:::1;::::0;3293:10;;3305:9;;3262:30:::1;:71::i;10294:632:10:-:0;2075:20:4;:18;:20::i;:::-;10454::10::1;::::0;10393:21:::1;::::0;-1:-1:-1;;;10454:20:10;::::1;-1:-1:-1::0;;;;;10454:20:10::1;10485:33:::0;;::::1;10481:119;;;10535:58;::::0;-1:-1:-1;;;10535:58:10;;::::1;::::0;::::1;9608:25:19::0;;;9649:18;;;9642:34;;;9581:18;;10535:58:10::1;9434:248:19::0;10481:119:10::1;10627:15;10609;:33;10605:263;;;10652:14;10669:33;10687:15:::0;10669;:33:::1;:::i;:::-;10652:50;;10711:9;10726:2;-1:-1:-1::0;;;;;10726:7:10::1;10741:6;10726:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10710:42;;;10765:4;10760:57;;10788:20;;-1:-1:-1::0;;;10788:20:10::1;;;;;;;;;;;10760:57;10829:32;::::0;;-1:-1:-1;;;;;14407:32:19;;14389:51;;14471:2;14456:18;;14449:34;;;10829:32:10::1;::::0;14362:18:19;10829:32:10::1;;;;;;;10644:224;;10361:565;;10294:632:::0;:::o;1890:397:16:-;2075:20:4;:18;:20::i;:::-;1945:315:16::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1945:315:16;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:8:::1;:326:::0;;-1:-1:-1;;;;;;1934:326:16;;;2271:11;;::::1;::::0;-1:-1:-1;2271:11:16::1;1890:397::o:0;2291:142::-;-1:-1:-1;;;;;2391:22:16;;2372:4;2391:22;;;:11;:22;;;;;;;;:30;;;;;;;;:37;;;2291:142;;;;;:::o;12929:710:10:-;7874:15;:13;:15::i;:::-;13075:1:::1;13029:28:::0;;;:21:::1;:28;::::0;;;;:34;-1:-1:-1;;;;;13029:34:10::1;13025:97;;13094:21;;-1:-1:-1::0;;;13094:21:10::1;;;;;;;;;;;13025:97;13367:24;13394:22:::0;;;:15:::1;:22;::::0;;;;:36;;-1:-1:-1;;;13394:36:10;::::1;-1:-1:-1::0;;;;;13394:36:10::1;::::0;13483:9:::1;::::0;13394:36:::1;13436:57;13483:9:::0;13394:36;13436:57:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;13436:57:10::1;;;;;-1:-1:-1::0;;;;;13436:57:10::1;;;;;;13530:9;13499:20;;:41;;;;;;;;;;-1:-1:-1::0;;;;;13499:41:10::1;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;13499:41:10::1;;;;;-1:-1:-1::0;;;;;13499:41:10::1;;;;;;13580:5;13551:83;13587:16;13624:9;13605:16;:28;;;;:::i;:::-;13551:83;::::0;;9608:25:19;;;9664:2;9649:18;;9642:34;;;;9581:18;13551:83:10::1;;;;;;;;13019:620;12929:710:::0;:::o;6791:926:16:-;6959:7;7874:15:10;:13;:15::i;:::-;6926:4:16::1;:10;;;6938;2510:34;2526:6;2534:9;2510:15;:34::i;:::-;2505:97;;2561:34;::::0;-1:-1:-1;;;2561:34:16;;::::1;::::0;::::1;14668:25:19::0;;;-1:-1:-1;;;;;14729:32:19;;14709:18;;;14702:60;14641:18;;2561:34:16::1;14494:274:19::0;2505:97:16::1;6990:10:::2;::::0;;::::2;;6974:13;7010:28:::0;;;:21:::2;:28:::0;;;;;;;:34;-1:-1:-1;;;;;7010:34:16::2;7006:97;;7075:21;;-1:-1:-1::0;;;7075:21:16::2;;;;;;;;;;;7006:97;7129:15;:17:::0;;7109::::2;::::0;;7129::::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;7170:13:16::2;:15:::0;;7109:37;;-1:-1:-1;7152:15:16::2;::::0;7170;7152;7170::::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;7152:33:16;-1:-1:-1;7192:27:16::2;7222:56;7251:26;7262:14;;::::0;::::2;:4:::0;:14:::2;:::i;:::-;7251:10;:26::i;:::-;7222:28;:56::i;:::-;7192:86;;7308:151;;;;;;;;7331:4;:10;;;7308:151;;;;7367:4;:21;;;;;;;;;;:::i;:::-;7308:151;;::::0;;::::2;;7406:13;::::0;;;::::2;::::0;::::2;;:::i;:::-;7308:151;;::::0;;::::2;;7438:14;;::::0;::::2;:4:::0;:14:::2;:::i;:::-;7308:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;-1:-1:-1;7308:151:16;;;;-1:-1:-1;;7284:21:16;;;:10:::2;:21;::::0;;;;;;;;:175;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;-1:-1:-1::0;;7284:175:16;;;;::::2;::::0;;;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;:21;;-1:-1:-1;7284:175:16::2;::::0;::::2;::::0;::::2;::::0;;::::2;:::i;:::-;;;;;7674:10;-1:-1:-1::0;;;;;7471:219:16::2;7551:4;:10;;;7499:4;:12;;;7471:219;7519:9;7536:7;7569:4;:25;;;;;;;;;;:::i;:::-;7602:4;:21;;;;;;;;;;:::i;:::-;7631:4;:13;;;;;;;;;;:::i;:::-;7652:14;7471:219;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;7703:9:16;;6791:926;-1:-1:-1;;;;;;6791:926:16:o;14903:937:10:-;14973:13;7874:15;:13;:15::i;:::-;15078:17:::1;::::0;-1:-1:-1;;;;;15078:17:10::1;15151:10;15173:16;15078:17:::0;15173:12:::1;:16;:::i;:::-;15134:89;::::0;-1:-1:-1;;19150:2:19;19146:15;;;19142:24;;15134:89:10::1;::::0;::::1;19130:37:19::0;15163:27:10;::::1;19183:12:19::0;;;19176:28;15200:4:10::1;19238:15:19::0;;;19234:24;19220:12;;;19213:46;-1:-1:-1;;;;;;19315:3:19;19293:16;;;19289:51;19275:12;;;19268:73;19357:12;;15134:89:10::1;::::0;;-1:-1:-1;;15134:89:10;;::::1;::::0;;;;;;15124:100;;15134:89:::1;15124:100:::0;;::::1;::::0;;-1:-1:-1;15305:19:10::1;:15:::0;15323:1:::1;15305:19;:::i;:::-;15285:17;:39:::0;;-1:-1:-1;;15285:39:10::1;-1:-1:-1::0;;;;;15285:39:10;;::::1;;::::0;;15396:16:::1;::::0;;-1:-1:-1;15396:16:10;;;15443:57;;;;;15396:16:::1;::::0;;::::1;15443:57:::0;;;;;;;;;::::1;::::0;;;;;;15418:22;;;:15:::1;:22:::0;;;;;:82;;;;;;;;-1:-1:-1;;;;;15418:82:10;;::::1;-1:-1:-1::0;;;;;;15418:82:10;;;;;;;-1:-1:-1;;;15418:82:10;;;::::1;;;-1:-1:-1::0;;;;;15418:82:10::1;-1:-1:-1::0;;;15418:82:10;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;15537:113;;;;::::1;::::0;;15571:10:::1;15537:113:::0;;;;::::1;::::0;;;;;;;;;15506:28;;;:21:::1;:28:::0;;;;;;:144;;;;-1:-1:-1;;;;;;15506:144:10;;::::1;-1:-1:-1::0;;;;;15506:144:10;;::::1;;::::0;;;;-1:-1:-1;15506:144:10;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;;;;;;15396:16;;15537:113;15506:28;;:144:::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;15748:19:10::1;::::0;-1:-1:-1;15748:8:10::1;::::0;-1:-1:-1;15761:5:10;15748:12:::1;:19::i;:::-;-1:-1:-1::0;15779:38:10::1;::::0;15806:10:::1;3709:51:19::0;;15799:5:10;;15779:38:::1;::::0;3697:2:19;3682:18;15779:38:10::1;;;;;;;15823:12;;14903:937:::0;:::o;12130:743::-;7874:15;:13;:15::i;:::-;12277:4:::1;::::0;-1:-1:-1;;;;;12277:4:10::1;12255:10;:27;12251:77;;12299:22;;-1:-1:-1::0;;;12299:22:10::1;;;;;;;;;;;12251:77;12352:2;12337:17:::0;::::1;12333:62;;12371:17;;-1:-1:-1::0;;;12371:17:10::1;;;;;;;;;;;12333:62;12400:13;12416:27;::::0;;::::1;12427:4:::0;12416:27:::1;:::i;:::-;12499:1;12453:28:::0;;;:21:::1;:28;::::0;;;;:34;12400:43;;-1:-1:-1;;;;;;12453:34:10::1;12449:97;;12518:21;;-1:-1:-1::0;;;12518:21:10::1;;;;;;;;;;;12449:97;12656:18;12677:22:::0;;;:15:::1;:22;::::0;;;;:30;;-1:-1:-1;;;;;12677:30:10::1;::::0;12754:6;;12677:22;12713:48:::1;12754:6:::0;12677:30;12713:48:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;12713:48:10::1;;;;;-1:-1:-1::0;;;;;12713:48:10::1;;;;;;12792:6;12767:14;;:32;;;;;;;;;;-1:-1:-1::0;;;;;12767:32:10::1;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;12767:32:10::1;;;;;-1:-1:-1::0;;;;;12767:32:10::1;;;;;;12829:5;12810:58;12836:10;12861:6;12848:10;:19;;;;:::i;:::-;12810:58;::::0;;9608:25:19;;;9664:2;9649:18;;9642:34;;;;9581:18;12810:58:10::1;9434:248:19::0;8880:255:10;2075:20:4;:18;:20::i;:::-;8953:16:10::1;8972:28:::0;;;:21:::1;:28;::::0;;;;:34;-1:-1:-1;;;;;8972:34:10::1;::::0;9012:71:::1;;9055:21;;-1:-1:-1::0;;;9055:21:10::1;;;;;;;;;;;9012:71;9088:42;9114:5;9121:8;9088:25;:42::i;14282:565::-:0;14398:20;14426:15;14444:17;:8;:15;:17::i;:::-;14426:35;;14485:7;14471:10;:21;14467:51;;14501:17;;-1:-1:-1;;;14501:17:10;;;;;;;;;;;14467:51;14524:16;14543:21;14556:8;14543:10;:21;:::i;:::-;14524:40;;14592:7;14581:8;:18;:35;;;-1:-1:-1;14603:13:10;;14581:35;:56;;14629:8;14581:56;;;14619:7;14581:56;14570:67;-1:-1:-1;14643:17:10;14663:21;14674:10;14570:67;14663:21;:::i;:::-;14643:41;;14710:9;-1:-1:-1;;;;;14696:24:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14696:24:10;;14690:30;;14731:11;14726:101;14754:9;14748:3;:15;14726:101;;;14791:29;14803:16;14809:10;14803:3;:16;:::i;:::-;14791:8;;:11;:29::i;:::-;14780:3;14784;14780:8;;;;;;;;:::i;:::-;;;;;;;;;;:40;14765:5;;;:::i;:::-;;;14726:101;;;;14832:10;;;14282:565;;;;:::o;16448:::-;7874:15;:13;:15::i;:::-;16541:16:::1;16560:28:::0;;;:21:::1;:28;::::0;;;;:34;-1:-1:-1;;;;;16560:34:10::1;::::0;16600:71:::1;;16643:21;;-1:-1:-1::0;;;16643:21:10::1;;;;;;;;;;;16600:71;16680:28;::::0;;;:21:::1;:28;::::0;;;;:43:::1;;::::0;-1:-1:-1;;;;;16680:43:10::1;16727:10;16680:57;16676:150;;16775:28;::::0;;;:21:::1;:28;::::0;;;;;;:43:::1;;::::0;16754:65;;-1:-1:-1;;;16754:65:10;;-1:-1:-1;;;;;16775:43:10;;::::1;16754:65;::::0;::::1;3709:51:19::0;3682:18;;16754:65:10::1;3537:229:19::0;16676:150:10::1;16831:28;::::0;;;:21:::1;:28;::::0;;;;;;;;:47;;16868:10:::1;-1:-1:-1::0;;;;;;16831:47:10;;::::1;::::0;::::1;::::0;;-1:-1:-1;16884:43:10;;::::1;:56:::0;;;;::::1;::::0;;16951:57;;-1:-1:-1;;;;;19795:15:19;;19777:34;;19827:18;;;19820:43;16831:28:10;;16951:57:::1;::::0;19712:18:19;16951:57:10::1;19565:304:19::0;17069:912:10;17154:5;19458:20;19472:5;19458:13;:20::i;:::-;7874:15:::1;:13;:15::i;:::-;-1:-1:-1::0;;;;;17220:21:10;::::2;17180:37;17220:21:::0;;;:11:::2;:21;::::0;;;;;;;:28;;;;;;;;17258:21;;::::2;;17254:165;;;17406:7;11753:373;;11670:456:::0;:::o;17254:165::-:2;17477:27;17507:28:::0;;;:21:::2;:28;::::0;;;;:38:::2;;17555:16:::0;;-1:-1:-1;;17555:33:10;17551:79:::2;;17605:18;;-1:-1:-1::0;;;17605:18:10::2;;;;;;;;;;;17551:79;17864:28:::0;;17888:4:::2;-1:-1:-1::0;;17864:28:10;;::::2;::::0;::::2;::::0;;17898:24;;;;::::2;::::0;;-1:-1:-1;17898:24:10;;;::::2;::::0;;;;;;::::2;::::0;;-1:-1:-1;;;;;;17898:24:10::2;-1:-1:-1::0;;;;;17898:24:10;::::2;::::0;;::::2;::::0;;;17934:42:::2;::::0;3709:51:19;;;17960:5:10;;17934:42:::2;::::0;3682:18:19;17934:42:10::2;;;;;;;;17174:807;;17069:912:::0;;;:::o;7773:794:16:-;7875:6;19458:20:10;19472:5;19458:13;:20::i;:::-;7901:6:16::1;7909:9;2510:34;2526:6;2534:9;2510:15;:34::i;:::-;2505:97;;2561:34;::::0;-1:-1:-1;;;2561:34:16;;::::1;::::0;::::1;14668:25:19::0;;;-1:-1:-1;;;;;14729:32:19;;14709:18;;;14702:60;14641:18;;2561:34:16::1;14494:274:19::0;2505:97:16::1;7874:15:10::2;:13;:15::i;:::-;-1:-1:-1::0;;;;;7944:22:16;::::3;;::::0;;;:11:::3;:22;::::0;;;;;;;:30;;;;;;;;:37;::::3;;7939:100;;7998:34;::::0;-1:-1:-1;;;7998:34:16;;::::3;::::0;::::3;14668:25:19::0;;;-1:-1:-1;;;;;14729:32:19;;14709:18;;;14702:60;14641:18;;7998:34:16::3;14494:274:19::0;7939:100:16::3;8044:26;8073:29:::0;;;:21:::3;:29;::::0;;;;;;;:39:::3;;8044:68:::0;;;;;;::::3;::::0;;;;;;;;;;;;8073:39;;8044:68;;::::3;8073:39:::0;8044:68;;::::3;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;8044:68:16::3;::::0;;;;;::::3;::::0;::::3;;::::0;;::::3;;;;;;;;;;;8118:25;8165:1;8146:9;:16;:20;;;;:::i;:::-;8118:48;;8177:9;8172:283;8196:9;:16;8192:1;:20;8172:283;;;8247:9;-1:-1:-1::0;;;;;8231:25:16::3;:9;8241:1;8231:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8231:25:16::3;::::0;8227:222:::3;;8268:12;8283:9;8293:17;8283:28;;;;;;;;:::i;:::-;;;;;;;8268:43;;8366:4;8321:21;:29;8343:6;8321:29;;;;;;;;;;;:39;;8361:1;8321:42;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;;;;::::3;:49:::0;;-1:-1:-1;;;;;;8321:49:16::3;-1:-1:-1::0;;;;;8321:49:16;;;::::3;::::0;;;::::3;::::0;;;8380:29;;;:21:::3;:29:::0;;;;;;:39:::3;;:45:::0;;;::::3;;;;:::i;:::-;;::::0;;;::::3;::::0;;;;-1:-1:-1;;8380:45:16;;;;;-1:-1:-1;;;;;;8380:45:16::3;::::0;;;;;-1:-1:-1;8435:5:16::3;;8227:222;8214:3;::::0;::::3;:::i;:::-;;;8172:283;;;-1:-1:-1::0;;;;;;8460:22:16;::::3;8500:5;8460:22:::0;;;:11:::3;:22;::::0;;;;;;;:30;;;;;;;;;:45;;-1:-1:-1;;8460:45:16::3;::::0;;8516:46;;3709:51:19;;;8460:30:16;;8516:46:::3;::::0;3682:18:19;8516:46:16::3;;;;;;;7933:634;;19484:1:10::1;;7773:794:16::0;;;:::o;15896:496:10:-;16014:5;19458:20;19472:5;19458:13;:20::i;:::-;7874:15:::1;:13;:15::i;:::-;16120:45:::2;16168:28:::0;;;:21:::2;:28;::::0;;;;16206:33:::2;::::0;::::2;::::0;-1:-1:-1;;;;;16206:45:10;;::::2;:33:::0;::::2;:45;16202:186;;16261:33;::::0;::::2;:44:::0;;-1:-1:-1;;;;;;16261:44:10::2;-1:-1:-1::0;;;;;16261:44:10;::::2;::::0;;::::2;::::0;;;16318:63:::2;::::0;;16360:10:::2;19777:34:19::0;;19842:2;19827:18;;19820:43;;;;16353:5:10;;16318:63:::2;::::0;19712:18:19;16318:63:10::2;;;;;;;16202:186;16034:358;15896:496:::0;;;:::o;13695:531::-;13789:14;13909:28;;;:21;:28;;;;;:34;13789:14;;;;-1:-1:-1;;;;;13909:34:10;13862:26;13909:34;13949:71;;13992:21;;-1:-1:-1;;;13992:21:10;;;;;;;;;;;13949:71;14040:22;;;;:15;:22;;;;;;;;:30;14177:21;:28;;;;;;:38;;14025:196;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14040:30:10;;;;-1:-1:-1;;;14078:36:10;;;;;;-1:-1:-1;;;14122:31:10;;;-1:-1:-1;;;;;14122:31:10;;14161:8;;14177:38;14025:196;;14177:38;;14025:196;;;14177:38;14025:196;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14025:196:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13695:531;;;;;;;:::o;9263:888::-;2075:20:4;:18;:20::i;:::-;9562:4:10::1;::::0;-1:-1:-1;;;;;9562:4:10::1;9550:67;;9598:12;;-1:-1:-1::0;;;9598:12:10::1;;;;;;;;;;;9550:67;9649:4;::::0;:29:::1;::::0;-1:-1:-1;;;9649:29:10;;9672:4:::1;9649:29;::::0;::::1;3709:51:19::0;9623:23:10::1;::::0;-1:-1:-1;;;;;9649:4:10::1;::::0;:14:::1;::::0;3682:18:19;;9649:29:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9718:14;::::0;9623:55;;-1:-1:-1;;;;;;9718:14:10::1;9743:33:::0;;::::1;9739:119;;;9793:58;::::0;-1:-1:-1;;;9793:58:10;;::::1;::::0;::::1;9608:25:19::0;;;9649:18;;;9642:34;;;9581:18;;9793:58:10::1;9434:248:19::0;9739:119:10::1;9885:15;9867;:33;9863:230;;;9910:14;9927:33;9945:15:::0;9927;:33:::1;:::i;:::-;9973:4;::::0;:25:::1;::::0;-1:-1:-1;;;9973:25:10;;-1:-1:-1;;;;;14407:32:19;;;9973:25:10::1;::::0;::::1;14389:51:19::0;14456:18;;;14449:34;;;9910:50:10;;-1:-1:-1;9973:4:10;::::1;::::0;:13:::1;::::0;14362:18:19;;9973:25:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9968:80;;10017:22;;-1:-1:-1::0;;;10017:22:10::1;;;;;;;;;;;9968:80;10060:26;::::0;;-1:-1:-1;;;;;14407:32:19;;14389:51;;14471:2;14456:18;;14449:34;;;10060:26:10::1;::::0;14362:18:19;10060:26:10::1;;;;;;;9902:191;9316:835;;9263:888:::0;:::o;847:98:4:-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;5049:622:16:-;5139:32;5174:22;;;:15;:22;;;;;5202:465;;;;5246:25;;-1:-1:-1;;;;;;;;5246:25:16;;;;;;5283:17;;;;5279:70;;;5319:21;;-1:-1:-1;;;5319:21:16;;;;;;;;;;;5279:70;5384:17;5394:7;5384;:17;:::i;:::-;5356:45;;-1:-1:-1;;;;5356:45:16;-1:-1:-1;;;;;;;;5356:45:16;;;;;;;;;;;5409:20;:31;;5433:7;;5409:20;;5356:25;;5409:31;;5433:7;;5409:31;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;5409:31:16;;;;;-1:-1:-1;;;;;5409:31:16;;;;;;5221:226;5202:465;;;5478:19;;-1:-1:-1;;;;;5478:19:16;;;;5509:17;;;;5505:70;;;5545:21;;-1:-1:-1;;;5545:21:16;;;;;;;;;;;5505:70;5604:17;5614:7;5604;:17;:::i;:::-;5582:39;;-1:-1:-1;;5582:39:16;-1:-1:-1;;;;;5582:39:16;;;;;;5629:20;:31;;5653:7;;-1:-1:-1;;5629:31:16;;5653:7;;5629:31;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;5629:31:16;;;;;-1:-1:-1;;;;;5629:31:16;;;;;;5453:214;5133:538;5049:622;;;:::o;19494:271:10:-;19552:16;19571:28;;;:21;:28;;;;;:34;-1:-1:-1;;;;;19571:34:10;;19611:71;;19654:21;;-1:-1:-1;;;19654:21:10;;;;;;;;;;;19611:71;19691:10;-1:-1:-1;;;;;19691:22:10;;;19687:74;;19730:24;;-1:-1:-1;;;19730:24:10;;-1:-1:-1;;;;;3727:32:19;;19730:24:10;;;3709:51:19;3682:18;;19730:24:10;3537:229:19;7905:111:10;7954:8;:23;-1:-1:-1;;;7954:23:10;;;;7950:62;;;7994:11;;-1:-1:-1;;;7994:11:10;;;;;;;;;;;7950:62;7905:111::o;17985:797::-;18047:14;18121:28;;;:21;:28;;;;;;;;18175:15;:22;;;;;:30;18121:38;;;;18371:16;;-1:-1:-1;;;;;18175:30:10;;;;-1:-1:-1;;;18227:36:10;;;;;18393:100;18417:15;18413:1;:19;18393:100;;;18454:11;:25;18466:9;18476:1;18466:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;18466:12:10;18454:25;;;;;;;;;;;;;;;:32;;;;;;;;18447:39;;-1:-1:-1;;18447:39:10;;;18434:3;;;:::i;:::-;;;18393:100;;;-1:-1:-1;18505:28:10;;;;:21;:28;;;;;18498:35;;-1:-1:-1;;;;;;18498:35:10;;;;;;;;;;;;;;;18505:28;18498:35;;;;18505:28;18498:35;:::i;:::-;-1:-1:-1;;18546:22:10;;;;:15;:22;;;;;18539:29;18574:22;:8;18562:5;18574:15;:22::i;:::-;-1:-1:-1;;;;;;18606:12:10;;;18602:58;;18628:14;:25;;18646:7;;18628:14;;;:25;;18646:7;;-1:-1:-1;;;;;18628:25:10;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;18628:25:10;;;;;-1:-1:-1;;;;;18628:25:10;;;;;;18602:58;-1:-1:-1;;;;;18669:18:10;;;18665:76;;18721:13;18697:20;;:37;;;;;;;;;;-1:-1:-1;;;;;18697:37:10;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;18697:37:10;;;;;-1:-1:-1;;;;;18697:37:10;;;;;;18665:76;18746:31;;17985:797;;;:::o;1809:162:4:-;1932:7;;-1:-1:-1;;;;;1932:7:4;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:4;;20676:2:19;1910:56:4;;;20658:21:19;20715:2;20695:18;;;20688:30;-1:-1:-1;;;20734:18:19;;;20727:52;20796:18;;1910:56:4;20474:346:19;6409:378:16;-1:-1:-1;;;;;;;;;;;;6544:1:16;6524:21;;;6520:100;;-1:-1:-1;6562:51:16;;;;;;;;;-1:-1:-1;6562:51:16;;6555:58;;6520:100;-1:-1:-1;;;6629:17:16;6636:9;;6629:17;:::i;:::-;-1:-1:-1;;;;;;6629:54:16;;6625:88;;6692:21;;-1:-1:-1;;;6692:21:16;;;;;;;;;;;6625:88;6737:13;:9;6747:1;6737:9;;:13;:::i;:::-;6726:56;;;;;;;:::i;:::-;6719:63;6409:378;-1:-1:-1;;;6409:378:16:o;517:169:15:-;592:16;215:28;669:9;627:52;;;;;;22236:13:19;22229:21;22222:29;22204:48;;22192:2;22177:18;;22000:258;627:52:15;;;;-1:-1:-1;;627:52:15;;;;;;;;;;;;;;-1:-1:-1;;;;;627:52:15;-1:-1:-1;;;;;;627:52:15;;;;;;;;;;;517:169;-1:-1:-1;;517:169:15:o;10782:129:9:-;10849:4;10872:32;10877:3;10897:5;10872:4;:32::i;18786:625:10:-;18864:14;18880:20;18904:26;18924:5;18904:19;:26::i;:::-;19022:4;;18863:67;;-1:-1:-1;18863:67:10;-1:-1:-1;;;;;;19022:4:10;19014:27;;;;:43;;-1:-1:-1;;;;;;19045:12:10;;;;19014:43;19010:152;;;19072:4;;:35;;-1:-1:-1;;;19072:35:10;;-1:-1:-1;;;;;14407:32:19;;;19072:35:10;;;14389:51:19;-1:-1:-1;;;;;19090:16:10;;14456:18:19;;;14449:34;19072:4:10;;;;:13;;14362:18:19;;19072:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19067:89;;19126:21;;-1:-1:-1;;;19126:21:10;;;;;;;;;;;19067:89;19219:12;19237:2;-1:-1:-1;;;;;19237:7:10;19260:13;-1:-1:-1;;;;;19252:22:10;19237:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19218:61;;;19290:7;19285:56;;19314:20;;-1:-1:-1;;;19314:20:10;;;;;;;;;;;19285:56;19351:55;;;-1:-1:-1;;;;;12590:32:19;;12572:51;;-1:-1:-1;;;;;12704:15:19;;;12699:2;12684:18;;12677:43;12756:15;;12736:18;;;12729:43;;;;19372:5:10;;19351:55;;12560:2:19;12545:18;19351:55:10;12372:406:19;11520:112:9;11580:7;11606:19;11614:3;4534:18;;4452:107;11974:135;12045:7;12079:22;12083:3;12095:5;12079:3;:22::i;1536:239:4:-;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;22465:2:19;1641:52:4;;;22447:21:19;22504:2;22484:18;;;22477:30;22543:25;22523:18;;;22516:53;22586:18;;1641:52:4;22263:347:19;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;11079:135:9:-;11149:4;11172:35;11180:3;11200:5;11172:7;:35::i;2203:404::-;2266:4;4340:19;;;:12;;;:19;;;;;;2282:319;;-1:-1:-1;2324:23:9;;;;;;;;:11;:23;;;;;;;;;;;;;2504:18;;2482:19;;;:12;;;:19;;;;;;:40;;;;2536:11;;2282:319;-1:-1:-1;2585:5:9;2578:12;;4901:118;4968:7;4994:3;:11;;5006:5;4994:18;;;;;;;;:::i;:::-;;;;;;;;;4987:25;;4901:118;;;;:::o;2775:1388::-;2841:4;2978:19;;;:12;;;:19;;;;;;3012:15;;3008:1149;;3381:21;3405:14;3418:1;3405:10;:14;:::i;:::-;3453:18;;3381:38;;-1:-1:-1;3433:17:9;;3453:22;;3474:1;;3453:22;:::i;:::-;3433:42;;3507:13;3494:9;:26;3490:398;;3540:17;3560:3;:11;;3572:9;3560:22;;;;;;;;:::i;:::-;;;;;;;;;3540:42;;3711:9;3682:3;:11;;3694:13;3682:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3794:23;;;:12;;;:23;;;;;:36;;;3490:398;3966:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4058:3;:12;;:19;4071:5;4058:19;;;;;;;;;;;4051:26;;;4099:4;4092:11;;;;;;;3008:1149;4141:5;4134:12;;;;;3008:1149;2847:1316;2775:1388;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:131:19;-1:-1:-1;;;;;944:31:19;;934:42;;924:70;;990:1;987;980:12;1005:127;1066:10;1061:3;1057:20;1054:1;1047:31;1097:4;1094:1;1087:15;1121:4;1118:1;1111:15;1137:275;1208:2;1202:9;1273:2;1254:13;;-1:-1:-1;;1250:27:19;1238:40;;-1:-1:-1;;;;;1293:34:19;;1329:22;;;1290:62;1287:88;;;1355:18;;:::i;:::-;1391:2;1384:22;1137:275;;-1:-1:-1;1137:275:19:o;1417:1149::-;1519:6;1527;1535;1588:2;1576:9;1567:7;1563:23;1559:32;1556:52;;;1604:1;1601;1594:12;1556:52;1640:9;1627:23;1617:33;;1669:2;1721;1710:9;1706:18;1693:32;1734:31;1759:5;1734:31;:::i;:::-;1784:5;-1:-1:-1;1840:2:19;1825:18;;1812:32;-1:-1:-1;;;;;1893:14:19;;;1890:34;;;1920:1;1917;1910:12;1890:34;1958:6;1947:9;1943:22;1933:32;;2003:7;1996:4;1992:2;1988:13;1984:27;1974:55;;2025:1;2022;2015:12;1974:55;2061:2;2048:16;2083:2;2079;2076:10;2073:36;;;2089:18;;:::i;:::-;2135:2;2132:1;2128:10;2118:20;;2158:28;2182:2;2178;2174:11;2158:28;:::i;:::-;2220:15;;;2290:11;;;2286:20;;;2251:12;;;;2318:19;;;2315:39;;;2350:1;2347;2340:12;2315:39;2374:11;;;;2394:142;2410:6;2405:3;2402:15;2394:142;;;2476:17;;2464:30;;2427:12;;;;2514;;;;2394:142;;;2555:5;2545:15;;;;;;;;1417:1149;;;;;:::o;2571:315::-;2639:6;2647;2700:2;2688:9;2679:7;2675:23;2671:32;2668:52;;;2716:1;2713;2706:12;2668:52;2752:9;2739:23;2729:33;;2812:2;2801:9;2797:18;2784:32;2825:31;2850:5;2825:31;:::i;:::-;2875:5;2865:15;;;2571:315;;;;;:::o;2891:248::-;2959:6;2967;3020:2;3008:9;2999:7;2995:23;2991:32;2988:52;;;3036:1;3033;3026:12;2988:52;-1:-1:-1;;3059:23:19;;;3129:2;3114:18;;;3101:32;;-1:-1:-1;2891:248:19:o;3771:255::-;3838:6;3891:2;3879:9;3870:7;3866:23;3862:32;3859:52;;;3907:1;3904;3897:12;3859:52;3946:9;3933:23;3965:31;3990:5;3965:31;:::i;4031:180::-;4090:6;4143:2;4131:9;4122:7;4118:23;4114:32;4111:52;;;4159:1;4156;4149:12;4111:52;-1:-1:-1;4182:23:19;;4031:180;-1:-1:-1;4031:180:19:o;4853:388::-;4921:6;4929;4982:2;4970:9;4961:7;4957:23;4953:32;4950:52;;;4998:1;4995;4988:12;4950:52;5037:9;5024:23;5056:31;5081:5;5056:31;:::i;:::-;5106:5;-1:-1:-1;5163:2:19;5148:18;;5135:32;5176:33;5135:32;5176:33;:::i;5691:398::-;5788:6;5841:2;5829:9;5820:7;5816:23;5812:32;5809:52;;;5857:1;5854;5847:12;5809:52;5897:9;5884:23;-1:-1:-1;;;;;5922:6:19;5919:30;5916:50;;;5962:1;5959;5952:12;5916:50;5985:22;;6041:3;6023:16;;;6019:26;6016:46;;;6058:1;6055;6048:12;6481:794;6569:6;6577;6585;6593;6646:2;6634:9;6625:7;6621:23;6617:32;6614:52;;;6662:1;6659;6652:12;6614:52;6701:9;6688:23;6720:31;6745:5;6720:31;:::i;:::-;6770:5;-1:-1:-1;6822:2:19;6807:18;;6794:32;;-1:-1:-1;6877:2:19;6862:18;;6849:32;-1:-1:-1;;;;;6930:14:19;;;6927:34;;;6957:1;6954;6947:12;6927:34;6995:6;6984:9;6980:22;6970:32;;7040:7;7033:4;7029:2;7025:13;7021:27;7011:55;;7062:1;7059;7052:12;7011:55;7102:2;7089:16;7128:2;7120:6;7117:14;7114:34;;;7144:1;7141;7134:12;7114:34;7189:7;7184:2;7175:6;7171:2;7167:15;7163:24;7160:37;7157:57;;;7210:1;7207;7200:12;7157:57;6481:794;;;;-1:-1:-1;;7241:2:19;7233:11;;-1:-1:-1;;;6481:794:19:o;7280:435::-;7333:3;7371:5;7365:12;7398:6;7393:3;7386:19;7424:4;7453:2;7448:3;7444:12;7437:19;;7490:2;7483:5;7479:14;7511:1;7521:169;7535:6;7532:1;7529:13;7521:169;;;7596:13;;7584:26;;7630:12;;;;7665:15;;;;7557:1;7550:9;7521:169;;;-1:-1:-1;7706:3:19;;7280:435;-1:-1:-1;;;;;7280:435:19:o;7720:261::-;7899:2;7888:9;7881:21;7862:4;7919:56;7971:2;7960:9;7956:18;7948:6;7919:56;:::i;7986:1058::-;-1:-1:-1;;;;;8358:15:19;;;8340:34;;8431:15;;8393:2;8411:18;;;8404:43;;;;-1:-1:-1;;;;;8483:31:19;;8478:2;8463:18;;8456:59;-1:-1:-1;;;;;8589:15:19;;;8584:2;8569:18;;8562:43;8282:3;8636;8621:19;;8614:32;;;8695:13;;8267:19;;;8717:22;;;8234:4;;8797:15;;;;8534:19;8770:3;8755:19;;;8234:4;8840:178;8854:6;8851:1;8848:13;8840:178;;;8919:13;;8915:22;;8903:35;;8993:15;;;;8958:12;;;;8876:1;8869:9;8840:178;;;-1:-1:-1;9035:3:19;;7986:1058;-1:-1:-1;;;;;;;;;;;7986:1058:19:o;9049:380::-;9128:1;9124:12;;;;9171;;;9192:61;;9246:4;9238:6;9234:17;9224:27;;9192:61;9299:2;9291:6;9288:14;9268:18;9265:38;9262:161;;9345:10;9340:3;9336:20;9333:1;9326:31;9380:4;9377:1;9370:15;9408:4;9405:1;9398:15;9262:161;;9049:380;;;:::o;9687:127::-;9748:10;9743:3;9739:20;9736:1;9729:31;9779:4;9776:1;9769:15;9803:4;9800:1;9793:15;9819:127;9880:10;9875:3;9871:20;9868:1;9861:31;9911:4;9908:1;9901:15;9935:4;9932:1;9925:15;9951:135;9990:3;10011:17;;;10008:43;;10031:18;;:::i;:::-;-1:-1:-1;10078:1:19;10067:13;;9951:135::o;10091:332::-;10298:6;10287:9;10280:25;10341:2;10336;10325:9;10321:18;10314:30;10261:4;10361:56;10413:2;10402:9;10398:18;10390:6;10361:56;:::i;:::-;10353:64;10091:332;-1:-1:-1;;;;10091:332:19:o;10428:250::-;10513:1;10523:113;10537:6;10534:1;10531:13;10523:113;;;10613:11;;;10607:18;10594:11;;;10587:39;10559:2;10552:10;10523:113;;;-1:-1:-1;;10670:1:19;10652:16;;10645:27;10428:250::o;10683:287::-;10812:3;10850:6;10844:13;10866:66;10925:6;10920:3;10913:4;10905:6;10901:17;10866:66;:::i;:::-;10948:16;;;;;10683:287;-1:-1:-1;;10683:287:19:o;10975:128::-;11042:9;;;11063:11;;;11060:37;;;11077:18;;:::i;11108:168::-;11181:9;;;11212;;11229:15;;;11223:22;;11209:37;11199:71;;11250:18;;:::i;11281:125::-;11346:9;;;11367:10;;;11364:36;;;11380:18;;:::i;11411:217::-;11451:1;11477;11467:132;;11521:10;11516:3;11512:20;11509:1;11502:31;11556:4;11553:1;11546:15;11584:4;11581:1;11574:15;11467:132;-1:-1:-1;11613:9:19;;11411:217::o;12783:188::-;-1:-1:-1;;;;;12896:10:19;;;12908;;;12892:27;;12931:11;;;12928:37;;;12945:18;;:::i;12976:191::-;-1:-1:-1;;;;;13103:10:19;;;13091;;;13087:27;;13126:12;;;13123:38;;;13141:18;;:::i;13483:118::-;13569:5;13562:13;13555:21;13548:5;13545:32;13535:60;;13591:1;13588;13581:12;13606:245;13673:6;13726:2;13714:9;13705:7;13701:23;13697:32;13694:52;;;13742:1;13739;13732:12;13694:52;13774:9;13768:16;13793:28;13815:5;13793:28;:::i;14773:521::-;14850:4;14856:6;14916:11;14903:25;15010:2;15006:7;14995:8;14979:14;14975:29;14971:43;14951:18;14947:68;14937:96;;15029:1;15026;15019:12;14937:96;15056:33;;15108:20;;;-1:-1:-1;;;;;;15140:30:19;;15137:50;;;15183:1;15180;15173:12;15137:50;15216:4;15204:17;;-1:-1:-1;15247:14:19;15243:27;;;15233:38;;15230:58;;;15284:1;15281;15274:12;15230:58;14773:521;;;;;:::o;15299:276::-;15357:6;15410:2;15398:9;15389:7;15385:23;15381:32;15378:52;;;15426:1;15423;15416:12;15378:52;15465:9;15452:23;15515:10;15508:5;15504:22;15497:5;15494:33;15484:61;;15541:1;15538;15531:12;15705:544;15806:2;15801:3;15798:11;15795:448;;;15842:1;15867:5;15863:2;15856:17;15912:4;15908:2;15898:19;15982:2;15970:10;15966:19;15963:1;15959:27;15953:4;15949:38;16018:4;16006:10;16003:20;16000:47;;;-1:-1:-1;16041:4:19;16000:47;16096:2;16091:3;16087:12;16084:1;16080:20;16074:4;16070:31;16060:41;;16151:82;16169:2;16162:5;16159:13;16151:82;;;16214:17;;;16195:1;16184:13;16151:82;;;16155:3;;;15705:544;;;:::o;16425:1348::-;16549:3;16543:10;-1:-1:-1;;;;;16568:6:19;16565:30;16562:56;;;16598:18;;:::i;:::-;16627:96;16716:6;16676:38;16708:4;16702:11;16676:38;:::i;:::-;16670:4;16627:96;:::i;:::-;16778:4;;16842:2;16831:14;;16859:1;16854:662;;;;17560:1;17577:6;17574:89;;;-1:-1:-1;17629:19:19;;;17623:26;17574:89;-1:-1:-1;;16382:1:19;16378:11;;;16374:24;16370:29;16360:40;16406:1;16402:11;;;16357:57;17676:81;;16824:943;;16854:662;15652:1;15645:14;;;15689:4;15676:18;;-1:-1:-1;;16890:20:19;;;17007:236;17021:7;17018:1;17015:14;17007:236;;;17110:19;;;17104:26;17089:42;;17202:27;;;;17170:1;17158:14;;;;17037:19;;17007:236;;;17011:3;17271:6;17262:7;17259:19;17256:201;;;17332:19;;;17326:26;-1:-1:-1;;17415:1:19;17411:14;;;17427:3;17407:24;17403:37;17399:42;17384:58;17369:74;;17256:201;-1:-1:-1;;;;;17503:1:19;17487:14;;;17483:22;17470:36;;-1:-1:-1;16425:1348:19:o;17778:272::-;17836:6;17889:2;17877:9;17868:7;17864:23;17860:32;17857:52;;;17905:1;17902;17895:12;17857:52;17944:9;17931:23;17994:6;17987:5;17983:18;17976:5;17973:29;17963:57;;18016:1;18013;18006:12;18055:809;18336:6;18325:9;18318:25;18379:6;18374:2;18363:9;18359:18;18352:34;18434:6;18426;18422:19;18417:2;18406:9;18402:18;18395:47;18299:4;18461:10;18519:2;18511:6;18507:15;18502:2;18491:9;18487:18;18480:43;18572:2;18564:6;18560:15;18554:3;18543:9;18539:19;18532:44;;18613:3;18607;18596:9;18592:19;18585:32;18646:6;18640:13;18690:6;18684:3;18673:9;18669:19;18662:35;18706:80;18779:6;18773:3;18762:9;18758:19;18753:2;18745:6;18741:15;18706:80;:::i;:::-;18847:2;18826:15;-1:-1:-1;;18822:29:19;18807:45;;;;18854:3;18803:55;;18055:809;-1:-1:-1;;;;;;;18055:809:19:o;19380:180::-;-1:-1:-1;;;;;19485:10:19;;;19497;;;19481:27;;19520:11;;;19517:37;;;19534:18;;:::i;19874:127::-;19935:10;19930:3;19926:20;19923:1;19916:31;19966:4;19963:1;19956:15;19990:4;19987:1;19980:15;20006:184;20076:6;20129:2;20117:9;20108:7;20104:23;20100:32;20097:52;;;20145:1;20142;20135:12;20097:52;-1:-1:-1;20168:16:19;;20006:184;-1:-1:-1;20006:184:19:o;20825:323::-;-1:-1:-1;;;;;;20945:19:19;;21021:11;;;;21052:1;21044:10;;21041:101;;;21129:2;21123;21116:3;21113:1;21109:11;21106:1;21102:19;21098:28;21094:2;21090:37;21086:46;21077:55;;21041:101;;;20825:323;;;;:::o;21153:331::-;21258:9;21269;21311:8;21299:10;21296:24;21293:44;;;21333:1;21330;21323:12;21293:44;21362:6;21352:8;21349:20;21346:40;;;21382:1;21379;21372:12;21346:40;-1:-1:-1;;21408:23:19;;;21453:25;;;;;-1:-1:-1;21153:331:19:o;21489:506::-;21577:6;21630:2;21618:9;21609:7;21605:23;21601:32;21598:52;;;21646:1;21643;21636:12;21598:52;21679:2;21673:9;21721:2;21713:6;21709:15;21790:6;21778:10;21775:22;-1:-1:-1;;;;;21742:10:19;21739:34;21736:62;21733:88;;;21801:18;;:::i;:::-;21837:2;21830:22;21874:23;;21906:28;21874:23;21906:28;:::i;:::-;21943:21;;21950:6;21489:506;-1:-1:-1;;;21489:506:19:o"},"gasEstimates":{"creation":{"codeDepositCost":"2790200","executionCost":"infinite","totalCost":"infinite"},"external":{"LINK()":"2427","LINK_NATIVE_FEED()":"2382","MAX_CONSUMERS()":"294","acceptOwnership()":"52366","acceptSubscriptionOwnerTransfer(uint256)":"57160","addConsumer(uint256,address)":"83570","cancelSubscription(uint256,address)":"infinite","consumerIsAdded(uint256,address)":"2759","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"infinite","fundSubscription(uint256,uint256)":"infinite","fundSubscriptionWithNative(uint256)":"infinite","getActiveSubscriptionIds(uint256,uint256)":"infinite","getSubscription(uint256)":"infinite","i_base_fee()":"infinite","i_gas_price()":"infinite","i_wei_per_unit_link()":"infinite","onTokenTransfer(address,uint256,bytes)":"infinite","owner()":"2399","ownerCancelSubscription(uint256)":"infinite","pendingRequestExists(uint256)":"312","recoverFunds(address)":"infinite","recoverNativeFunds(address)":"infinite","removeConsumer(uint256,address)":"infinite","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"infinite","requestSubscriptionOwnerTransfer(uint256,address)":"33035","s_config()":"2755","s_currentSubNonce()":"2404","s_totalBalance()":"2470","s_totalNativeBalance()":"2422","setConfig()":"27562","setLINKAndLINKNativeFeed(address,address)":"infinite","transferOwnership(address)":"infinite","withdraw(address)":"infinite","withdrawNative(address)":"infinite"},"internal":{"_chargePayment(uint96,bool,uint256)":"infinite","_fromBytes(bytes calldata)":"infinite"}},"methodIdentifiers":{"LINK()":"1b6b6d23","LINK_NATIVE_FEED()":"72e9d565","MAX_CONSUMERS()":"64d51a2a","acceptOwnership()":"79ba5097","acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","consumerIsAdded(uint256,address)":"953e9c75","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"08e3898e","fundSubscription(uint256,uint256)":"115e3c0d","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","i_base_fee()":"1eebc117","i_gas_price()":"dcab3dcf","i_wei_per_unit_link()":"13478329","onTokenTransfer(address,uint256,bytes)":"a4c0ed36","owner()":"8da5cb5b","ownerCancelSubscription(uint256)":"aa433aff","pendingRequestExists(uint256)":"41af6c87","recoverFunds(address)":"e72f6e30","recoverNativeFunds(address)":"8402595e","removeConsumer(uint256,address)":"cb631797","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"9b1c385e","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29","s_config()":"088070f5","s_currentSubNonce()":"9d40a6fd","s_totalBalance()":"86fe91c7","s_totalNativeBalance()":"18e3dd27","setConfig()":"8b673e7a","setLINKAndLINKNativeFeed(address,address)":"65982744","transferOwnership(address)":"f2fde38b","withdraw(address)":"51cff8d9","withdrawNative(address)":"2f622e6b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPrice\",\"type\":\"uint96\"},{\"internalType\":\"int256\",\"name\":\"_weiPerUnitLink\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"internalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceInvariantViolated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToSendNative\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToTransferLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExtraArgsTag\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRandomWords\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"MustBeRequestedOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCallableFromLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingRequestExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeFundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"nativePayment\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"onlyPremium\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLink\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountNative\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNativeBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNativeBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFundedWithNative\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_NATIVE_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"consumerIsAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_words\",\"type\":\"uint256[]\"}],\"name\":\"fulfillRandomWordsWithOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"subOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_base_fee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_gas_price\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_wei_per_unit_link\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"ownerCancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverNativeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"_req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_config\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"reentrancyLock\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeNativePPM\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkDiscountPPM\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"nativePremiumPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"linkPremiumPercentage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_currentSubNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalNativeBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkNativeFeed\",\"type\":\"address\"}],\"name\":\"setLINKAndLINKNativeFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\",\"_words\":\"user-provided random words\"}},\"fundSubscription(uint256,uint256)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"reqCount\":\"- Requests count of subscription.\",\"subOwner\":\"- owner of the subscription.\"}},\"ownerCancelSubscription(uint256)\":{\"details\":\"notably can be called even if there are pending requests, outstanding ones may fail onchain\",\"params\":{\"subId\":\"subscription id\"}},\"recoverFunds(address)\":{\"params\":{\"to\":\"address to send link to\"}},\"recoverNativeFunds(address)\":{\"params\":{\"to\":\"address to send native to\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}},\"setLINKAndLINKNativeFeed(address,address)\":{\"params\":{\"link\":\"- address of link token\",\"linkNativeFeed\":\"address of the link native feed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"notice\":\"fulfillRandomWordsWithOverride allows the user to pass in their own random words.\"},\"fundSubscription(uint256,uint256)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"ownerCancelSubscription(uint256)\":{\"notice\":\"Owner cancel subscription, sends remaining link directly to the subscription owner.\"},\"recoverFunds(address)\":{\"notice\":\"Recover link sent with transfer instead of transferAndCall.\"},\"recoverNativeFunds(address)\":{\"notice\":\"Recover native sent with transfer/call/send instead of fundSubscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"},\"setConfig()\":{\"notice\":\"Sets the configuration of the vrfv2 mock coordinator\"},\"setLINKAndLINKNativeFeed(address,address)\":{\"notice\":\"set the LINK token contract and link native feed to be used by this coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\":\"VRFCoordinatorV2_5Mock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport {EnumerableSet} from \\\"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport {LinkTokenInterface} from \\\"../../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\nimport {AggregatorV3Interface} from \\\"../../shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {IERC677Receiver} from \\\"../../shared/interfaces/IERC677Receiver.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./interfaces/IVRFSubscriptionV2Plus.sol\\\";\\n\\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\\n  using EnumerableSet for EnumerableSet.UintSet;\\n\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  LinkTokenInterface public LINK;\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  AggregatorV3Interface public LINK_NATIVE_FEED;\\n\\n  // We need to maintain a list of consuming addresses.\\n  // This bound ensures we are able to loop over them as needed.\\n  // Should a user require more consumers, they can use multiple subscriptions.\\n  uint16 public constant MAX_CONSUMERS = 100;\\n  error TooManyConsumers();\\n  error InsufficientBalance();\\n  error InvalidConsumer(uint256 subId, address consumer);\\n  error InvalidSubscription();\\n  error OnlyCallableFromLink();\\n  error InvalidCalldata();\\n  error MustBeSubOwner(address owner);\\n  error PendingRequestExists();\\n  error MustBeRequestedOwner(address proposedOwner);\\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\\n  event FundsRecovered(address to, uint256 amount);\\n  event NativeFundsRecovered(address to, uint256 amount);\\n  error LinkAlreadySet();\\n  error FailedToSendNative();\\n  error FailedToTransferLink();\\n  error IndexOutOfRange();\\n  error LinkNotSet();\\n\\n  // We use the subscription struct (1 word)\\n  // at fulfillment time.\\n  struct Subscription {\\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n    uint96 balance; // Common link balance used for all consumer requests.\\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\\n    // That should be enough to cover most (if not all) subscriptions.\\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\\n    uint64 reqCount;\\n  }\\n  // We use the config for the mgmt APIs\\n  struct SubscriptionConfig {\\n    address owner; // Owner can fund/withdraw/cancel the sub.\\n    address requestedOwner; // For safely transferring sub ownership.\\n    // Maintains the list of keys in s_consumers.\\n    // We do this for 2 reasons:\\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n    // 2. To be able to return the list of all consumers in getSubscription.\\n    // Note that we need the s_consumers map to be able to directly check if a\\n    // consumer is valid without reading all the consumers from storage.\\n    address[] consumers;\\n  }\\n  struct ConsumerConfig {\\n    bool active;\\n    uint64 nonce;\\n    uint64 pendingReqCount;\\n  }\\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\\n    internal s_consumers;\\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\\n  // subscription nonce used to construct subId. Rises monotonically\\n  uint64 public s_currentSubNonce;\\n  // track all subscription id's that were created by this contract\\n  // note: access should be through the getActiveSubscriptionIds() view function\\n  // which takes a starting index and a max number to fetch in order to allow\\n  // \\\"pagination\\\" of the subscription ids. in the event a very large number of\\n  // subscription id's are stored in this set, they cannot be retrieved in a\\n  // single RPC call without violating various size limits.\\n  EnumerableSet.UintSet internal s_subIds;\\n  // s_totalBalance tracks the total link sent to/from\\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n  // A discrepancy with this contract's link balance indicates someone\\n  // sent tokens using transfer and so we may need to use recoverFunds.\\n  uint96 public s_totalBalance;\\n  // s_totalNativeBalance tracks the total native sent to/from\\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\\n  // A discrepancy with this contract's native balance indicates someone\\n  // sent native using transfer and so we may need to use recoverNativeFunds.\\n  uint96 public s_totalNativeBalance;\\n  uint96 internal s_withdrawableTokens;\\n  uint96 internal s_withdrawableNative;\\n\\n  event SubscriptionCreated(uint256 indexed subId, address owner);\\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\\n\\n  struct Config {\\n    uint16 minimumRequestConfirmations;\\n    uint32 maxGasLimit;\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n    // stalenessSeconds is how long before we consider the feed price to be stale\\n    // and fallback to fallbackWeiPerUnitLink.\\n    uint32 stalenessSeconds;\\n    // Gas to cover oracle payment after we calculate the payment.\\n    // We make it configurable in case those operations are repriced.\\n    // The recommended number is below, though it may vary slightly\\n    // if certain chains do not implement certain EIP's.\\n    // 21000 + // base cost of the transaction\\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\\n    // Total: 37,185 gas.\\n    uint32 gasAfterPaymentCalculation;\\n    // Flat fee charged per fulfillment in millionths of native.\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeNativePPM;\\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\\n    // Should not exceed fulfillmentFlatFeeNativePPM\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 nativePremiumPercentage;\\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 linkPremiumPercentage;\\n  }\\n  Config public s_config;\\n\\n  error Reentrant();\\n  modifier nonReentrant() {\\n    _nonReentrant();\\n    _;\\n  }\\n\\n  function _nonReentrant() internal view {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n  }\\n\\n  constructor() ConfirmedOwner(msg.sender) {}\\n\\n  /**\\n   * @notice set the LINK token contract and link native feed to be\\n   * used by this coordinator\\n   * @param link - address of link token\\n   * @param linkNativeFeed address of the link native feed\\n   */\\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\\n    // Disallow re-setting link token because the logic wouldn't really make sense\\n    if (address(LINK) != address(0)) {\\n      revert LinkAlreadySet();\\n    }\\n    LINK = LinkTokenInterface(link);\\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\\n  }\\n\\n  /**\\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n   * @param subId subscription id\\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n   */\\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    _cancelSubscriptionHelper(subId, subOwner);\\n  }\\n\\n  /**\\n   * @notice Recover link sent with transfer instead of transferAndCall.\\n   * @param to address to send link to\\n   */\\n  function recoverFunds(address to) external onlyOwner {\\n    // If LINK is not set, we cannot recover funds.\\n    // It is possible that this coordinator address was funded with LINK\\n    // by accident by a user but the LINK token needs to be set first\\n    // before we can recover it.\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n\\n    uint256 externalBalance = LINK.balanceOf(address(this));\\n    uint256 internalBalance = uint256(s_totalBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      if (!LINK.transfer(to, amount)) {\\n        revert FailedToTransferLink();\\n      }\\n      emit FundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /**\\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\\n   * @param to address to send native to\\n   */\\n  function recoverNativeFunds(address payable to) external onlyOwner {\\n    uint256 externalBalance = address(this).balance;\\n    uint256 internalBalance = uint256(s_totalNativeBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      (bool sent, ) = to.call{value: amount}(\\\"\\\");\\n      if (!sent) {\\n        revert FailedToSendNative();\\n      }\\n      emit NativeFundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /*\\n   * @notice withdraw LINK earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdraw(address recipient) external nonReentrant onlyOwner {\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n    if (s_withdrawableTokens == 0) {\\n      revert InsufficientBalance();\\n    }\\n    uint96 amount = s_withdrawableTokens;\\n    s_withdrawableTokens -= amount;\\n    s_totalBalance -= amount;\\n    if (!LINK.transfer(recipient, amount)) {\\n      revert InsufficientBalance();\\n    }\\n  }\\n\\n  /*\\n   * @notice withdraw native earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\\n    if (s_withdrawableNative == 0) {\\n      revert InsufficientBalance();\\n    }\\n    // Prevent re-entrancy by updating state before transfer.\\n    uint96 amount = s_withdrawableNative;\\n    s_withdrawableNative -= amount;\\n    s_totalNativeBalance -= amount;\\n    (bool sent, ) = recipient.call{value: amount}(\\\"\\\");\\n    if (!sent) {\\n      revert FailedToSendNative();\\n    }\\n  }\\n\\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\\n    if (msg.sender != address(LINK)) {\\n      revert OnlyCallableFromLink();\\n    }\\n    if (data.length != 32) {\\n      revert InvalidCalldata();\\n    }\\n    uint256 subId = abi.decode(data, (uint256));\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    // We do not check that the sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    uint256 oldBalance = s_subscriptions[subId].balance;\\n    s_subscriptions[subId].balance += uint96(amount);\\n    s_totalBalance += uint96(amount);\\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    // We do not check that the msg.sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    // We also do not check that msg.value > 0, since that's just a no-op\\n    // and would be a waste of gas on the caller's part.\\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\\n    s_totalNativeBalance += uint96(msg.value);\\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    public\\n    view\\n    override\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\\n  {\\n    subOwner = s_subscriptionConfigs[subId].owner;\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (\\n      s_subscriptions[subId].balance,\\n      s_subscriptions[subId].nativeBalance,\\n      s_subscriptions[subId].reqCount,\\n      subOwner,\\n      s_subscriptionConfigs[subId].consumers\\n    );\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getActiveSubscriptionIds(\\n    uint256 startIndex,\\n    uint256 maxCount\\n  ) external view override returns (uint256[] memory ids) {\\n    uint256 numSubs = s_subIds.length();\\n    if (startIndex >= numSubs) revert IndexOutOfRange();\\n    uint256 endIndex = startIndex + maxCount;\\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\\n    uint256 idsLength = endIndex - startIndex;\\n    ids = new uint256[](idsLength);\\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\\n      ids[idx] = s_subIds.at(idx + startIndex);\\n    }\\n    return ids;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\\n    // Generate a subscription id that is globally unique.\\n    uint64 currentSubNonce = s_currentSubNonce;\\n    subId = uint256(\\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\\n    );\\n    // Increment the subscription nonce counter.\\n    s_currentSubNonce = currentSubNonce + 1;\\n    // Initialize storage variables.\\n    address[] memory consumers = new address[](0);\\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\\n      owner: msg.sender,\\n      requestedOwner: address(0),\\n      consumers: consumers\\n    });\\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\\n    s_subIds.add(subId);\\n\\n    emit SubscriptionCreated(subId, msg.sender);\\n    return subId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function requestSubscriptionOwnerTransfer(\\n    uint256 subId,\\n    address newOwner\\n  ) external override onlySubOwner(subId) nonReentrant {\\n    // Proposing to address(0) would never be claimable so don't need to check.\\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\\n    if (subscriptionConfig.requestedOwner != newOwner) {\\n      subscriptionConfig.requestedOwner = newOwner;\\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\\n    address oldOwner = s_subscriptionConfigs[subId].owner;\\n    if (oldOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\\n    }\\n    s_subscriptionConfigs[subId].owner = msg.sender;\\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\\n    if (consumerConfig.active) {\\n      // Idempotence - do nothing if already added.\\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\\n      return;\\n    }\\n    // Already maxed, cannot add any more consumers.\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    if (consumers.length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\\n    // otherwise, consumerConfig.nonce is non-zero\\n    // in both cases, use consumerConfig.nonce as is and set active status to true\\n    consumerConfig.active = true;\\n    consumers.push(consumer);\\n\\n    emit SubscriptionConsumerAdded(subId, consumer);\\n  }\\n\\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    balance = s_subscriptions[subId].balance;\\n    nativeBalance = s_subscriptions[subId].nativeBalance;\\n    // Note bounded by MAX_CONSUMERS;\\n    // If no consumers, does nothing.\\n    uint256 consumersLength = consumers.length;\\n    for (uint256 i = 0; i < consumersLength; ++i) {\\n      delete s_consumers[consumers[i]][subId];\\n    }\\n    delete s_subscriptionConfigs[subId];\\n    delete s_subscriptions[subId];\\n    s_subIds.remove(subId);\\n    if (balance != 0) {\\n      s_totalBalance -= balance;\\n    }\\n    if (nativeBalance != 0) {\\n      s_totalNativeBalance -= nativeBalance;\\n    }\\n    return (balance, nativeBalance);\\n  }\\n\\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\\n\\n    // Only withdraw LINK if the token is active and there is a balance.\\n    if (address(LINK) != address(0) && balance != 0) {\\n      if (!LINK.transfer(to, uint256(balance))) {\\n        revert InsufficientBalance();\\n      }\\n    }\\n\\n    // send native to the \\\"to\\\" address using call\\n    (bool success, ) = to.call{value: uint256(nativeBalance)}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\\n  }\\n\\n  modifier onlySubOwner(uint256 subId) {\\n    _onlySubOwner(subId);\\n    _;\\n  }\\n\\n  function _onlySubOwner(uint256 subId) internal view {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != subOwner) {\\n      revert MustBeSubOwner(subOwner);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x9607dc0b37c82e7cda56afb21096205bc975673df795a704c7d04a9f5dcf6bb2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n    // extraArgs will evolve to support new features\\n    bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n    struct ExtraArgsV1 {\\n        bool nativePayment;\\n    }\\n\\n    struct RandomWordsRequest {\\n        bytes32 keyHash;\\n        uint256 subId;\\n        uint16 requestConfirmations;\\n        uint32 callbackGasLimit;\\n        uint32 numWords;\\n        bytes extraArgs;\\n    }\\n\\n    function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n        return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n    }\\n}\\n\",\"keccak256\":\"0xf2694d53958860845918ffb3ef560851372f7fc8b108a574b28965a31b9cb05c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2_5.\\npragma solidity ^0.8.19;\\n\\n// solhint-disable-next-line no-unused-import\\nimport {IVRFCoordinatorV2Plus, IVRFSubscriptionV2Plus} from \\\"../dev/interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {VRFV2PlusClient} from \\\"../dev/libraries/VRFV2PlusClient.sol\\\";\\nimport {SubscriptionAPI} from \\\"../dev/SubscriptionAPI.sol\\\";\\nimport {VRFConsumerBaseV2Plus} from \\\"../dev/VRFConsumerBaseV2Plus.sol\\\";\\n\\ncontract VRFCoordinatorV2_5Mock is SubscriptionAPI, IVRFCoordinatorV2Plus {\\n  uint96 public immutable i_base_fee;\\n  uint96 public immutable i_gas_price;\\n  int256 public immutable i_wei_per_unit_link;\\n\\n  error InvalidRequest();\\n  error InvalidRandomWords();\\n  error InvalidExtraArgsTag();\\n  error NotImplemented();\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint256 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    bytes extraArgs,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(\\n    uint256 indexed requestId,\\n    uint256 outputSeed,\\n    uint256 indexed subId,\\n    uint96 payment,\\n    bool nativePayment,\\n    bool success,\\n    bool onlyPremium\\n  );\\n  event ConfigSet();\\n\\n  uint64 internal s_currentSubId;\\n  uint256 internal s_nextRequestId = 1;\\n  uint256 internal s_nextPreSeed = 100;\\n\\n  struct Request {\\n    uint256 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n  mapping(uint256 => Request) internal s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPrice, int256 _weiPerUnitLink) SubscriptionAPI() {\\n    i_base_fee = _baseFee;\\n    i_gas_price = _gasPrice;\\n    i_wei_per_unit_link = _weiPerUnitLink;\\n    setConfig();\\n  }\\n\\n  /**\\n   * @notice Sets the configuration of the vrfv2 mock coordinator\\n   */\\n  function setConfig() public onlyOwner {\\n    s_config = Config({\\n      minimumRequestConfirmations: 0,\\n      maxGasLimit: 0,\\n      stalenessSeconds: 0,\\n      gasAfterPaymentCalculation: 0,\\n      reentrancyLock: false,\\n      fulfillmentFlatFeeNativePPM: 0,\\n      fulfillmentFlatFeeLinkDiscountPPM: 0,\\n      nativePremiumPercentage: 0,\\n      linkPremiumPercentage: 0\\n    });\\n    emit ConfigSet();\\n  }\\n\\n  function consumerIsAdded(uint256 _subId, address _consumer) public view returns (bool) {\\n    return s_consumers[_consumer][_subId].active;\\n  }\\n\\n  modifier onlyValidConsumer(uint256 _subId, address _consumer) {\\n    if (!consumerIsAdded(_subId, _consumer)) {\\n      revert InvalidConsumer(_subId, _consumer);\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external nonReentrant {\\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   * @param _words user-provided random words\\n   */\\n  function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert InvalidRequest();\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    if (_words.length == 0) {\\n      _words = new uint256[](req.numWords);\\n      for (uint256 i = 0; i < req.numWords; i++) {\\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n      }\\n    } else if (_words.length != req.numWords) {\\n      revert InvalidRandomWords();\\n    }\\n\\n    VRFConsumerBaseV2Plus v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\\n    s_config.reentrancyLock = true;\\n    // solhint-disable-next-line avoid-low-level-calls, no-unused-vars\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n    s_config.reentrancyLock = false;\\n\\n    bool nativePayment = uint8(req.extraArgs[req.extraArgs.length - 1]) == 1;\\n\\n    uint256 rawPayment = i_base_fee + ((startGas - gasleft()) * i_gas_price);\\n    if (!nativePayment) {\\n      rawPayment = (1e18 * rawPayment) / uint256(i_wei_per_unit_link);\\n    }\\n    uint96 payment = uint96(rawPayment);\\n\\n    _chargePayment(payment, nativePayment, req.subId);\\n\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, req.subId, payment, nativePayment, success, false);\\n  }\\n\\n  function _chargePayment(uint96 payment, bool nativePayment, uint256 subId) internal {\\n    Subscription storage subcription = s_subscriptions[subId];\\n    if (nativePayment) {\\n      uint96 prevBal = subcription.nativeBalance;\\n      if (prevBal < payment) {\\n        revert InsufficientBalance();\\n      }\\n      subcription.nativeBalance = prevBal - payment;\\n      s_withdrawableNative += payment;\\n    } else {\\n      uint96 prevBal = subcription.balance;\\n      if (prevBal < payment) {\\n        revert InsufficientBalance();\\n      }\\n      subcription.balance = prevBal - payment;\\n      s_withdrawableTokens += payment;\\n    }\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint256 _subId, uint256 _amount) public {\\n    if (s_subscriptionConfigs[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint256 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += uint96(_amount);\\n    s_totalBalance += uint96(_amount);\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  /// @dev Convert the extra args bytes into a struct\\n  /// @param extraArgs The extra args bytes\\n  /// @return The extra args struct\\n  function _fromBytes(bytes calldata extraArgs) internal pure returns (VRFV2PlusClient.ExtraArgsV1 memory) {\\n    if (extraArgs.length == 0) {\\n      return VRFV2PlusClient.ExtraArgsV1({nativePayment: false});\\n    }\\n    if (bytes4(extraArgs) != VRFV2PlusClient.EXTRA_ARGS_V1_TAG) revert InvalidExtraArgsTag();\\n    return abi.decode(extraArgs[4:], (VRFV2PlusClient.ExtraArgsV1));\\n  }\\n\\n  function requestRandomWords(\\n    VRFV2PlusClient.RandomWordsRequest calldata _req\\n  ) external override nonReentrant onlyValidConsumer(_req.subId, msg.sender) returns (uint256) {\\n    uint256 subId = _req.subId;\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    bytes memory extraArgsBytes = VRFV2PlusClient._argsToBytes(_fromBytes(_req.extraArgs));\\n    s_requests[requestId] = Request({\\n      subId: _req.subId,\\n      callbackGasLimit: _req.callbackGasLimit,\\n      numWords: _req.numWords,\\n      extraArgs: _req.extraArgs\\n    });\\n\\n    emit RandomWordsRequested(\\n      _req.keyHash,\\n      requestId,\\n      preSeed,\\n      _req.subId,\\n      _req.requestConfirmations,\\n      _req.callbackGasLimit,\\n      _req.numWords,\\n      extraArgsBytes,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function removeConsumer(\\n    uint256 _subId,\\n    address _consumer\\n  ) external override onlySubOwner(_subId) onlyValidConsumer(_subId, _consumer) nonReentrant {\\n    if (!s_consumers[_consumer][_subId].active) {\\n      revert InvalidConsumer(_subId, _consumer);\\n    }\\n    address[] memory consumers = s_subscriptionConfigs[_subId].consumers;\\n    uint256 lastConsumerIndex = consumers.length - 1;\\n    for (uint256 i = 0; i < consumers.length; ++i) {\\n      if (consumers[i] == _consumer) {\\n        address last = consumers[lastConsumerIndex];\\n        s_subscriptionConfigs[_subId].consumers[i] = last;\\n        s_subscriptionConfigs[_subId].consumers.pop();\\n        break;\\n      }\\n    }\\n    s_consumers[_consumer][_subId].active = false;\\n    emit SubscriptionConsumerRemoved(_subId, _consumer);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function cancelSubscription(uint256 _subId, address _to) external override onlySubOwner(_subId) nonReentrant {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(_subId);\\n\\n    (bool success, ) = _to.call{value: uint256(nativeBalance)}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n    emit SubscriptionCanceled(_subId, _to, balance, nativeBalance);\\n  }\\n\\n  function pendingRequestExists(uint256 /*subId*/) public pure override returns (bool) {\\n    revert NotImplemented();\\n  }\\n}\\n\",\"keccak256\":\"0x5d27319ad572630b7078be005a9dee4418ac60b7d2fe9cbe40b510830cb4d1cf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":97,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":99,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1061,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"LINK","offset":0,"slot":"2","type":"t_contract(LinkTokenInterface)420"},{"astId":1065,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"LINK_NATIVE_FEED","offset":0,"slot":"3","type":"t_contract(AggregatorV3Interface)297"},{"astId":1151,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_consumers","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1144_storage))"},{"astId":1156,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_subscriptionConfigs","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(SubscriptionConfig)1137_storage)"},{"astId":1161,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_subscriptions","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(Subscription)1129_storage)"},{"astId":1163,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_currentSubNonce","offset":0,"slot":"7","type":"t_uint64"},{"astId":1166,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_subIds","offset":0,"slot":"8","type":"t_struct(UintSet)903_storage"},{"astId":1168,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_totalBalance","offset":0,"slot":"10","type":"t_uint96"},{"astId":1170,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_totalNativeBalance","offset":12,"slot":"10","type":"t_uint96"},{"astId":1172,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_withdrawableTokens","offset":0,"slot":"11","type":"t_uint96"},{"astId":1174,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_withdrawableNative","offset":12,"slot":"11","type":"t_uint96"},{"astId":1256,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_config","offset":0,"slot":"12","type":"t_struct(Config)1253_storage"},{"astId":2763,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_currentSubId","offset":0,"slot":"13","type":"t_uint64"},{"astId":2766,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_nextRequestId","offset":0,"slot":"14","type":"t_uint256"},{"astId":2769,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_nextPreSeed","offset":0,"slot":"15","type":"t_uint256"},{"astId":2783,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_requests","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_struct(Request)2778_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)297":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)420":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1144_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(ConsumerConfig)1144_storage)"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(ConsumerConfig)1144_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig)","numberOfBytes":"32","value":"t_struct(ConsumerConfig)1144_storage"},"t_mapping(t_uint256,t_struct(Request)2778_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)2778_storage"},"t_mapping(t_uint256,t_struct(Subscription)1129_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)1129_storage"},"t_mapping(t_uint256,t_struct(SubscriptionConfig)1137_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)","numberOfBytes":"32","value":"t_struct(SubscriptionConfig)1137_storage"},"t_struct(Config)1253_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Config","members":[{"astId":1236,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"minimumRequestConfirmations","offset":0,"slot":"0","type":"t_uint16"},{"astId":1238,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"maxGasLimit","offset":2,"slot":"0","type":"t_uint32"},{"astId":1240,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"reentrancyLock","offset":6,"slot":"0","type":"t_bool"},{"astId":1242,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"stalenessSeconds","offset":7,"slot":"0","type":"t_uint32"},{"astId":1244,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"gasAfterPaymentCalculation","offset":11,"slot":"0","type":"t_uint32"},{"astId":1246,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"fulfillmentFlatFeeNativePPM","offset":15,"slot":"0","type":"t_uint32"},{"astId":1248,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"fulfillmentFlatFeeLinkDiscountPPM","offset":19,"slot":"0","type":"t_uint32"},{"astId":1250,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"nativePremiumPercentage","offset":23,"slot":"0","type":"t_uint8"},{"astId":1252,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"linkPremiumPercentage","offset":24,"slot":"0","type":"t_uint8"}],"numberOfBytes":"32"},"t_struct(ConsumerConfig)1144_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.ConsumerConfig","members":[{"astId":1139,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"active","offset":0,"slot":"0","type":"t_bool"},{"astId":1141,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"nonce","offset":1,"slot":"0","type":"t_uint64"},{"astId":1143,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"pendingReqCount","offset":9,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(Request)2778_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2_5Mock.Request","members":[{"astId":2771,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"subId","offset":0,"slot":"0","type":"t_uint256"},{"astId":2773,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"callbackGasLimit","offset":0,"slot":"1","type":"t_uint32"},{"astId":2775,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"numWords","offset":4,"slot":"1","type":"t_uint32"},{"astId":2777,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"extraArgs","offset":0,"slot":"2","type":"t_bytes_storage"}],"numberOfBytes":"96"},"t_struct(Set)431_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":426,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":430,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(Subscription)1129_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Subscription","members":[{"astId":1124,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"balance","offset":0,"slot":"0","type":"t_uint96"},{"astId":1126,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"nativeBalance","offset":12,"slot":"0","type":"t_uint96"},{"astId":1128,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"reqCount","offset":24,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(SubscriptionConfig)1137_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.SubscriptionConfig","members":[{"astId":1131,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":1133,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"requestedOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1136,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"consumers","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"96"},"t_struct(UintSet)903_storage":{"encoding":"inplace","label":"struct EnumerableSet.UintSet","members":[{"astId":902,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)431_storage"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"notice":"fulfillRandomWordsWithOverride allows the user to pass in their own random words."},"fundSubscription(uint256,uint256)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"owner()":{"notice":"Get the current owner"},"ownerCancelSubscription(uint256)":{"notice":"Owner cancel subscription, sends remaining link directly to the subscription owner."},"recoverFunds(address)":{"notice":"Recover link sent with transfer instead of transferAndCall."},"recoverNativeFunds(address)":{"notice":"Recover native sent with transfer/call/send instead of fundSubscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."},"setConfig()":{"notice":"Sets the configuration of the vrfv2 mock coordinator"},"setLINKAndLINKNativeFeed(address,address)":{"notice":"set the LINK token contract and link native feed to be used by this coordinator"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}},"contracts/Raffel.sol":{"Raffel":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2Address","type":"address"},{"internalType":"uint256","name":"subscriptionId","type":"uint256"},{"internalType":"uint256","name":"enteranceFee","type":"uint256"},{"internalType":"uint256","name":"interval","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"Raffel__NotOpen","type":"error"},{"inputs":[],"name":"Raffel__TransferFailed","type":"error"},{"inputs":[],"name":"Raffel__notEnoughEthEntered","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"numberOfPlayers","type":"uint256"},{"internalType":"uint256","name":"raffelstate","type":"uint256"}],"name":"Raffel__upKeepNotNeeded","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"raffelEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"winner","type":"address"}],"name":"winnerPicked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"winnerRandomRequest","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"callbackGasLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enterRaffel","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getEnteranceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumberOfPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRaffelState","outputs":[{"internalType":"enum Raffel.RaffelState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"keyHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRequestId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numWords","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestConfirmations","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"requestIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"enableNativePayment","type":"bool"}],"name":"requestRandomWinner","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_requests","outputs":[{"internalType":"bool","name":"fulfilled","type":"bool"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"check upkeep for the function  to return upkeepNeeded  true  time interval should be passed  atleast 1 player  subscription funded with link  lottery should be open"}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_145":{"entryPoint":null,"id":145,"parameterSlots":2,"returnSlots":0},"@_2428":{"entryPoint":null,"id":2428,"parameterSlots":1,"returnSlots":0},"@_3658":{"entryPoint":null,"id":3658,"parameterSlots":4,"returnSlots":0},"@_87":{"entryPoint":null,"id":87,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_229":{"entryPoint":366,"id":229,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory":{"entryPoint":537,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1327:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"146:342:19","statements":[{"body":{"nodeType":"YulBlock","src":"193:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"202:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"205:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"195:6:19"},"nodeType":"YulFunctionCall","src":"195:12:19"},"nodeType":"YulExpressionStatement","src":"195:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"167:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"176:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"163:3:19"},"nodeType":"YulFunctionCall","src":"163:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"188:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"159:3:19"},"nodeType":"YulFunctionCall","src":"159:33:19"},"nodeType":"YulIf","src":"156:53:19"},{"nodeType":"YulVariableDeclaration","src":"218:29:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"237:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"231:5:19"},"nodeType":"YulFunctionCall","src":"231:16:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"222:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"310:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"319:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"322:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"312:6:19"},"nodeType":"YulFunctionCall","src":"312:12:19"},"nodeType":"YulExpressionStatement","src":"312:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"269:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"280:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"295:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"300:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"291:3:19"},"nodeType":"YulFunctionCall","src":"291:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"304:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"287:3:19"},"nodeType":"YulFunctionCall","src":"287:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"276:3:19"},"nodeType":"YulFunctionCall","src":"276:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"266:2:19"},"nodeType":"YulFunctionCall","src":"266:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"259:6:19"},"nodeType":"YulFunctionCall","src":"259:50:19"},"nodeType":"YulIf","src":"256:70:19"},{"nodeType":"YulAssignment","src":"335:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"345:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"335:6:19"}]},{"nodeType":"YulAssignment","src":"359:35:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"390:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"375:3:19"},"nodeType":"YulFunctionCall","src":"375:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"369:5:19"},"nodeType":"YulFunctionCall","src":"369:25:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"359:6:19"}]},{"nodeType":"YulAssignment","src":"403:35:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"423:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"434:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"419:3:19"},"nodeType":"YulFunctionCall","src":"419:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"413:5:19"},"nodeType":"YulFunctionCall","src":"413:25:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"403:6:19"}]},{"nodeType":"YulAssignment","src":"447:35:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"467:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"463:3:19"},"nodeType":"YulFunctionCall","src":"463:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"457:5:19"},"nodeType":"YulFunctionCall","src":"457:25:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"447:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"88:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"99:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"111:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"119:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"127:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"135:6:19","type":""}],"src":"14:474:19"},{"body":{"nodeType":"YulBlock","src":"667:174:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"684:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"695:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"677:6:19"},"nodeType":"YulFunctionCall","src":"677:21:19"},"nodeType":"YulExpressionStatement","src":"677:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"718:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"729:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:19"},"nodeType":"YulFunctionCall","src":"714:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"734:2:19","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"707:6:19"},"nodeType":"YulFunctionCall","src":"707:30:19"},"nodeType":"YulExpressionStatement","src":"707:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"757:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"768:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"753:3:19"},"nodeType":"YulFunctionCall","src":"753:18:19"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"773:26:19","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"746:6:19"},"nodeType":"YulFunctionCall","src":"746:54:19"},"nodeType":"YulExpressionStatement","src":"746:54:19"},{"nodeType":"YulAssignment","src":"809:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"821:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"832:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:19"},"nodeType":"YulFunctionCall","src":"817:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"809:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"644:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"658:4:19","type":""}],"src":"493:348:19"},{"body":{"nodeType":"YulBlock","src":"878:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"895:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"907:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"898:3:19"},"nodeType":"YulFunctionCall","src":"898:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"888:6:19"},"nodeType":"YulFunctionCall","src":"888:31:19"},"nodeType":"YulExpressionStatement","src":"888:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"938:4:19","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"928:6:19"},"nodeType":"YulFunctionCall","src":"928:15:19"},"nodeType":"YulExpressionStatement","src":"928:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"959:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"962:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"952:6:19"},"nodeType":"YulFunctionCall","src":"952:15:19"},"nodeType":"YulExpressionStatement","src":"952:15:19"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"846:127:19"},{"body":{"nodeType":"YulBlock","src":"1152:173:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1169:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1180:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1162:6:19"},"nodeType":"YulFunctionCall","src":"1162:21:19"},"nodeType":"YulExpressionStatement","src":"1162:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1203:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1214:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1199:3:19"},"nodeType":"YulFunctionCall","src":"1199:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"1219:2:19","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1192:6:19"},"nodeType":"YulFunctionCall","src":"1192:30:19"},"nodeType":"YulExpressionStatement","src":"1192:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1242:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1253:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:19"},"nodeType":"YulFunctionCall","src":"1238:18:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"1258:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1231:6:19"},"nodeType":"YulFunctionCall","src":"1231:53:19"},"nodeType":"YulExpressionStatement","src":"1231:53:19"},{"nodeType":"YulAssignment","src":"1293:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1305:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1316:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1301:3:19"},"nodeType":"YulFunctionCall","src":"1301:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1293:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1129:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:19","type":""}],"src":"978:347:19"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101006040527f787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae600755600880546001600160501b03191666020003000186a01790553480156200004f57600080fd5b506040516200152a3803806200152a833981016040819052620000729162000219565b833380600081620000ca5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000fd57620000fd816200016e565b5050506001600160a01b038116620001285760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b039283161790559390931660c05260a0919091526080526008805460ff60f01b191690554260095560e05262000266565b336001600160a01b03821603620001c85760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401620000c1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600080600080608085870312156200023057600080fd5b84516001600160a01b03811681146200024857600080fd5b60208601516040870151606090970151919890975090945092505050565b60805160a05160c05160e05161127f620002ab6000396000818161039401526106d6015260005050600061093a01526000818161025c01526104cb015261127f6000f3fe60806040526004361061014b5760003560e01c80638796ba8c116100b65780639eccacf61161006f5780639eccacf6146103d8578063a168fa89146103f8578063b0fb162f14610448578063f2fde38b1461047e578063fc2a88c31461049e578063fd6673f5146104b457600080fd5b80638796ba8c146103005780638a78da41146103205780638da5cb5b146103475780638ea981171461036557806391ad27b4146103855780639d52d89d146103b857600080fd5b8063473f1ddc11610108578063473f1ddc14610228578063535bf50f1461024d57806361728f39146102805780636e04ff0d1461029657806379ba5097146102c45780637ccfd7fc146102d957600080fd5b80630ff19fd7146101505780631fe543e31461015a57806324f746971461017a578063320229eb146101b15780634585e33b146101d0578063460e2049146101f0575b600080fd5b6101586104c9565b005b34801561016657600080fd5b50610158610175366004610eaa565b6105b6565b34801561018657600080fd5b506008546101979063ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b3480156101bd57600080fd5b506009545b6040519081526020016101a8565b3480156101dc57600080fd5b506101586101eb366004610f29565b61060b565b3480156101fc57600080fd5b5061021061020b366004610f9b565b61067b565b6040516001600160a01b0390911681526020016101a8565b34801561023457600080fd5b50600854600160501b90046001600160a01b0316610210565b34801561025957600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101c2565b34801561028c57600080fd5b506101c260075481565b3480156102a257600080fd5b506102b66102b1366004610fca565b6106ab565b6040516101a89291906110c1565b3480156102d057600080fd5b50610158610753565b3480156102e557600080fd5b50600854610197906601000000000000900463ffffffff1681565b34801561030c57600080fd5b506101c261031b366004610f9b565b6107fd565b34801561032c57600080fd5b50600854600160f01b900460ff166040516101a891906110fa565b34801561035357600080fd5b506000546001600160a01b0316610210565b34801561037157600080fd5b50610158610380366004611122565b61081e565b34801561039157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101c2565b3480156103c457600080fd5b506101c26103d3366004611152565b610910565b3480156103e457600080fd5b50600254610210906001600160a01b031681565b34801561040457600080fd5b50610431610413366004610f9b565b60046020526000908152604090205460ff8082169161010090041682565b6040805192151583529015156020830152016101a8565b34801561045457600080fd5b5060085461046b90640100000000900461ffff1681565b60405161ffff90911681526020016101a8565b34801561048a57600080fd5b50610158610499366004611122565b610b0d565b3480156104aa57600080fd5b506101c260065481565b3480156104c057600080fd5b506003546101c2565b7f000000000000000000000000000000000000000000000000000000000000000034101561050a5760405163ddbb36c560e01b815260040160405180910390fd5b6000600854600160f01b900460ff16600181111561052a5761052a6110e4565b1461054857604051635438580b60e01b815260040160405180910390fd5b6003805460018101825560009182527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319163390811790915560405190917faa80e2a495e1f9621cef4cc4e683c91012559860b607a726567faec8d409f64791a2565b6002546001600160a01b031633146105fb5760025460405163073e64fd60e21b81523360048201526001600160a01b0390911660248201526044015b60405180910390fd5b610606838383610b21565b505050565b6000610625604051806020016040528060008152506106ab565b5090508061060657600354600854479190600160f01b900460ff166001811115610651576106516110e4565b60405163125f719f60e01b81526004810193909352602483019190915260448201526064016105f2565b60006003828154811061069057610690611174565b6000918252602090912001546001600160a01b031692915050565b600060608180600854600160f01b900460ff1660018111156106cf576106cf6110e4565b14905060007f000000000000000000000000000000000000000000000000000000000000000060095442610703919061118a565b6003549110915015154715158380156107195750825b80156107225750815b801561072b5750805b60408051808201909152600381526203078360ec1b6020820152909890975095505050505050565b6001546001600160a01b031633146107a65760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016105f2565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6005818154811061080d57600080fd5b600091825260209091200154905081565b6000546001600160a01b0316331480159061084457506002546001600160a01b03163314155b15610895573361085c6000546001600160a01b031690565b60025460405163061db9c160e01b81526001600160a01b03938416600482015291831660248301529190911660448201526064016105f2565b6001600160a01b0381166108bc5760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be69060200160405180910390a150565b60088054600160f01b60ff60f01b19821617918290556002546040805160c08101825260075481527f0000000000000000000000000000000000000000000000000000000000000000602080830191909152640100000000860461ffff168284015263ffffffff9485166060830152660100000000000090950490931660808401528051938401905283151583526000926001600160a01b0390911691639b1c385e9160a08201906109c190610c86565b8152506040518263ffffffff1660e01b81526004016109e091906111b1565b6020604051808303816000875af11580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a23919061120e565b6040805160608101825260008082526001602080840182815285518481528083018752858701908152878552600483529590932084518154945161ffff1990951690151561ff00191617610100941515949094029390931783559351805195965092949193610a989391850192910190610df5565b5050600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290555060068190556040518181527f07d73ddda260dc89816ee12ce72b1a4114528f275259ef6541d5f91803c6c2849060200160405180910390a1919050565b610b15610cf7565b610b1e81610d4c565b50565b60035460009083838381610b3757610b37611174565b90506020020135610b489190611227565b9050600060038281548110610b5f57610b5f611174565b60009182526020808320919091015460088054600160501b6001600160a01b0390931692830260ff60f01b19167fff000000000000000000000000000000000000000000ffffffffffffffffffff90911617905560408051938452918301918290529151919250610bd39160039190610e40565b50426009556040516000906001600160a01b0383169047908381818185875af1925050503d8060008114610c23576040519150601f19603f3d011682016040523d82523d6000602084013e610c28565b606091505b5050905080610c4a57604051631e1873a560e11b815260040160405180910390fd5b6040516001600160a01b038316907f794919b0f484b8e90b1b817ac7f880f846fbd8a9813dee2a378e820db094e3d190600090a2505050505050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa82604051602401610cbf91511515815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915292915050565b6000546001600160a01b03163314610d4a5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016105f2565b565b336001600160a01b03821603610da45760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016105f2565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b828054828255906000526020600020908101928215610e30579160200282015b82811115610e30578251825591602001919060010190610e15565b50610e3c929150610e95565b5090565b828054828255906000526020600020908101928215610e30579160200282015b82811115610e3057825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610e60565b5b80821115610e3c5760008155600101610e96565b600080600060408486031215610ebf57600080fd5b83359250602084013567ffffffffffffffff80821115610ede57600080fd5b818601915086601f830112610ef257600080fd5b813581811115610f0157600080fd5b8760208260051b8501011115610f1657600080fd5b6020830194508093505050509250925092565b60008060208385031215610f3c57600080fd5b823567ffffffffffffffff80821115610f5457600080fd5b818501915085601f830112610f6857600080fd5b813581811115610f7757600080fd5b866020828501011115610f8957600080fd5b60209290920196919550909350505050565b600060208284031215610fad57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610fdc57600080fd5b813567ffffffffffffffff80821115610ff457600080fd5b818401915084601f83011261100857600080fd5b81358181111561101a5761101a610fb4565b604051601f8201601f19908116603f0116810190838211818310171561104257611042610fb4565b8160405282815287602084870101111561105b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156110a157602081850181015186830182015201611085565b506000602082860101526020601f19601f83011685010191505092915050565b82151581526040602082015260006110dc604083018461107b565b949350505050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061111c57634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561113457600080fd5b81356001600160a01b038116811461114b57600080fd5b9392505050565b60006020828403121561116457600080fd5b8135801515811461114b57600080fd5b634e487b7160e01b600052603260045260246000fd5b818103818111156111ab57634e487b7160e01b600052601160045260246000fd5b92915050565b60208152815160208201526020820151604082015261ffff60408301511660608201526000606083015163ffffffff80821660808501528060808601511660a0850152505060a083015160c0808401526110dc60e084018261107b565b60006020828403121561122057600080fd5b5051919050565b60008261124457634e487b7160e01b600052601260045260246000fd5b50069056fea26469706673582212205be7a16ba50053564156325f76266fe6fa1b4114e83b528485bf4144de8f91f064736f6c63430008130033","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE PUSH32 0x787D74CAEA10B2B357790D5B5247C2F63D1D91572A9846F780606E4D953677AE PUSH1 0x7 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB NOT AND PUSH7 0x20003000186A0 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x152A CODESIZE SUB DUP1 PUSH3 0x152A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x72 SWAP2 PUSH3 0x219 JUMP JUMPDEST DUP4 CALLER DUP1 PUSH1 0x0 DUP2 PUSH3 0xCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH3 0xFD JUMPI PUSH3 0xFD DUP2 PUSH3 0x16E JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x128 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP4 SWAP1 SWAP4 AND PUSH1 0xC0 MSTORE PUSH1 0xA0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF PUSH1 0xF0 SHL NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x9 SSTORE PUSH1 0xE0 MSTORE PUSH3 0x266 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH3 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 SWAP1 SWAP8 ADD MLOAD SWAP2 SWAP9 SWAP1 SWAP8 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x127F PUSH3 0x2AB PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x394 ADD MSTORE PUSH2 0x6D6 ADD MSTORE PUSH1 0x0 POP POP PUSH1 0x0 PUSH2 0x93A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x25C ADD MSTORE PUSH2 0x4CB ADD MSTORE PUSH2 0x127F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8796BA8C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x9ECCACF6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xA168FA89 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xB0FB162F EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xFC2A88C3 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8796BA8C EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x8A78DA41 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x9D52D89D EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x473F1DDC GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x535BF50F EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFF19FD7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x24F74697 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x460E2049 EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x158 PUSH2 0x4C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x197 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x210 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP3 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x753 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x197 SWAP1 PUSH7 0x1000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x210 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x431 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x46B SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1C2 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH4 0xDDBB36C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x52A PUSH2 0x10E4 JUMP JUMPDEST EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5438580B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0xAA80E2A495E1F9621CEF4CC4E683C91012559860B607A726567FAEC8D409F647 SWAP2 LOG2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5FB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6AB JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x606 JUMPI PUSH1 0x3 SLOAD PUSH1 0x8 SLOAD SELFBALANCE SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x651 JUMPI PUSH2 0x651 PUSH2 0x10E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x125F719F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x690 JUMPI PUSH2 0x690 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP2 DUP1 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0x10E4 JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP2 LT SWAP2 POP ISZERO ISZERO SELFBALANCE ISZERO ISZERO DUP4 DUP1 ISZERO PUSH2 0x719 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x722 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x72B JUMPI POP DUP1 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x30783 PUSH1 0xEC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x844 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x895 JUMPI CALLER PUSH2 0x85C PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x61DB9C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0xF0 SHL PUSH1 0xFF PUSH1 0xF0 SHL NOT DUP3 AND OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH5 0x100000000 DUP7 DIV PUSH2 0xFFFF AND DUP3 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF SWAP5 DUP6 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH7 0x1000000000000 SWAP1 SWAP6 DIV SWAP1 SWAP4 AND PUSH1 0x80 DUP5 ADD MSTORE DUP1 MLOAD SWAP4 DUP5 ADD SWAP1 MSTORE DUP4 ISZERO ISZERO DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x9B1C385E SWAP2 PUSH1 0xA0 DUP3 ADD SWAP1 PUSH2 0x9C1 SWAP1 PUSH2 0xC86 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA23 SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP6 MLOAD DUP5 DUP2 MSTORE DUP1 DUP4 ADD DUP8 MSTORE DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 DUP6 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP6 SWAP1 SWAP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP5 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 MUL SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE SWAP4 MLOAD DUP1 MLOAD SWAP6 SWAP7 POP SWAP3 SWAP5 SWAP2 SWAP4 PUSH2 0xA98 SWAP4 SWAP2 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0xDF5 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP3 SWAP1 SSTORE POP PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7D73DDDA260DC89816EE12CE72B1A4114528F275259EF6541D5F91803C6C284 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB15 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0xD4C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP4 DUP4 DUP4 DUP2 PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0x1174 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x50 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP4 MUL PUSH1 0xFF PUSH1 0xF0 SHL NOT AND PUSH32 0xFF000000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 DUP4 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP3 POP PUSH2 0xBD3 SWAP2 PUSH1 0x3 SWAP2 SWAP1 PUSH2 0xE40 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E1873A5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x794919B0F484B8E90B1B817AC7F880F846FBD8A9813DEE2A378E820DB094E3D1 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCBF SWAP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xE30 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xE30 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xE15 JUMP JUMPDEST POP PUSH2 0xE3C SWAP3 SWAP2 POP PUSH2 0xE95 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xE30 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xE30 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xF16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xF89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x101A JUMPI PUSH2 0x101A PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1042 PUSH2 0xFB4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x105B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10A1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1085 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x10DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x107B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x111C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x11AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFFFF PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE DUP1 PUSH1 0x80 DUP7 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE POP POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP1 DUP5 ADD MSTORE PUSH2 0x10DC PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1244 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xE7 LOG1 PUSH12 0xA50053564156325F76266FE6 STATICCALL SHL COINBASE EQ 0xE8 EXTCODESIZE MSTORE DUP5 DUP6 0xBF COINBASE PREVRANDAO 0xDE DUP16 SWAP2 CREATE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"974:5718:17:-:0;;;1594:66;1569:91;;1666:39;;;-1:-1:-1;;;;;;1755:26:17;;;;;2364:474;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2533:23;6254:10:11;;373:1:3;6254:10:11;590:59:4;;;;-1:-1:-1;;;590:59:4;;695:2:19;590:59:4;;;677:21:19;734:2;714:18;;;707:30;773:26;753:18;;;746:54;817:18;;590:59:4;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:4;-1:-1:-1;;;;;656:18:4;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;-1:-1:-1;;;;;;;;6276:29:11;::::1;6272:70;;6322:13;;-1:-1:-1::0;;;6322:13:11::1;;;;;;;;;;;6272:70;6347:16;:57:::0;;-1:-1:-1;;;;;;6347:57:11::1;-1:-1:-1::0;;;;;6347:57:11;;::::1;;::::0;;2568:65:17;;;::::1;;::::0;2643:33:::1;::::0;;;;2686:29:::1;::::0;2725:13:::1;:32:::0;;-1:-1:-1;;;;2725:32:17::1;::::0;;2785:15:::1;2767;:33:::0;2810:21:::1;::::0;974:5718;;1536:239:4;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;1180:2:19;1641:52:4;;;1162:21:19;1219:2;1199:18;;;1192:30;1258:25;1238:18;;;1231:53;1301:18;;1641:52:4;978:347:19;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;14:474:19:-;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;231:16;;-1:-1:-1;;;;;276:31:19;;266:42;;256:70;;322:1;319;312:12;256:70;390:2;375:18;;369:25;434:2;419:18;;413:25;478:2;463:18;;;457:25;345:5;;369:25;;-1:-1:-1;457:25:19;;-1:-1:-1;14:474:19;-1:-1:-1;;;14:474:19:o;978:347::-;974:5718:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_argsToBytes_2693":{"entryPoint":3206,"id":2693,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_229":{"entryPoint":3404,"id":229,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_242":{"entryPoint":3319,"id":242,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_195":{"entryPoint":1875,"id":195,"parameterSlots":0,"returnSlots":0},"@callbackGasLimit_3582":{"entryPoint":null,"id":3582,"parameterSlots":0,"returnSlots":0},"@checkUpkeep_3760":{"entryPoint":1707,"id":3760,"parameterSlots":1,"returnSlots":2},"@enterRaffel_3695":{"entryPoint":1225,"id":3695,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_3926":{"entryPoint":2849,"id":3926,"parameterSlots":3,"returnSlots":0},"@getEnteranceFee_3935":{"entryPoint":null,"id":3935,"parameterSlots":0,"returnSlots":1},"@getInterval_3989":{"entryPoint":null,"id":3989,"parameterSlots":0,"returnSlots":1},"@getLatestTimeStamp_3981":{"entryPoint":null,"id":3981,"parameterSlots":0,"returnSlots":1},"@getNumberOfPlayers_3973":{"entryPoint":null,"id":3973,"parameterSlots":0,"returnSlots":1},"@getPlayers_3947":{"entryPoint":1659,"id":3947,"parameterSlots":1,"returnSlots":1},"@getRaffelState_3964":{"entryPoint":null,"id":3964,"parameterSlots":0,"returnSlots":1},"@getRecentWinner_3955":{"entryPoint":null,"id":3955,"parameterSlots":0,"returnSlots":1},"@keyHash_3579":{"entryPoint":null,"id":3579,"parameterSlots":0,"returnSlots":0},"@lastRequestId_3576":{"entryPoint":null,"id":3576,"parameterSlots":0,"returnSlots":0},"@numWords_3588":{"entryPoint":null,"id":3588,"parameterSlots":0,"returnSlots":0},"@owner_205":{"entryPoint":null,"id":205,"parameterSlots":0,"returnSlots":1},"@performUpkeep_3791":{"entryPoint":1547,"id":3791,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_2469":{"entryPoint":1462,"id":2469,"parameterSlots":3,"returnSlots":0},"@requestConfirmations_3585":{"entryPoint":null,"id":3585,"parameterSlots":0,"returnSlots":0},"@requestIds_3574":{"entryPoint":2045,"id":3574,"parameterSlots":0,"returnSlots":0},"@requestRandomWinner_3855":{"entryPoint":2320,"id":3855,"parameterSlots":1,"returnSlots":1},"@s_requests_3571":{"entryPoint":null,"id":3571,"parameterSlots":0,"returnSlots":0},"@s_vrfCoordinator_2400":{"entryPoint":null,"id":2400,"parameterSlots":0,"returnSlots":0},"@setCoordinator_2500":{"entryPoint":2078,"id":2500,"parameterSlots":1,"returnSlots":0},"@transferOwnership_159":{"entryPoint":2829,"id":159,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":4386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool":{"entryPoint":4434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":3881,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":4042,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4622,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":3754,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_bytes":{"entryPoint":4219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2549__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_RaffelState_$3553__to_t_uint8__fromStack_reversed":{"entryPoint":4346,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExtraArgsV1_$2665_memory_ptr__to_t_struct$_ExtraArgsV1_$2665_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_RandomWordsRequest_$2678_memory_ptr__to_t_struct$_RandomWordsRequest_$2678_memory_ptr__fromStack_reversed":{"entryPoint":4529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4490,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":4647,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":4324,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4468,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4020,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9877:19","statements":[{"nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nodeType":"YulBlock","src":"136:561:19","statements":[{"body":{"nodeType":"YulBlock","src":"182:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"191:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"184:6:19"},"nodeType":"YulFunctionCall","src":"184:12:19"},"nodeType":"YulExpressionStatement","src":"184:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"157:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"166:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"153:3:19"},"nodeType":"YulFunctionCall","src":"153:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"178:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"149:3:19"},"nodeType":"YulFunctionCall","src":"149:32:19"},"nodeType":"YulIf","src":"146:52:19"},{"nodeType":"YulAssignment","src":"207:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"230:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"217:12:19"},"nodeType":"YulFunctionCall","src":"217:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"207:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"249:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"280:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"291:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"276:3:19"},"nodeType":"YulFunctionCall","src":"276:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"263:12:19"},"nodeType":"YulFunctionCall","src":"263:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"253:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"304:28:19","value":{"kind":"number","nodeType":"YulLiteral","src":"314:18:19","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"308:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"359:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"368:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"371:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"361:6:19"},"nodeType":"YulFunctionCall","src":"361:12:19"},"nodeType":"YulExpressionStatement","src":"361:12:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"347:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"355:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"344:2:19"},"nodeType":"YulFunctionCall","src":"344:14:19"},"nodeType":"YulIf","src":"341:34:19"},{"nodeType":"YulVariableDeclaration","src":"384:32:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"398:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"409:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:19"},"nodeType":"YulFunctionCall","src":"394:22:19"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"388:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"464:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"473:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"476:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"466:6:19"},"nodeType":"YulFunctionCall","src":"466:12:19"},"nodeType":"YulExpressionStatement","src":"466:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"443:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"447:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"439:3:19"},"nodeType":"YulFunctionCall","src":"439:13:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"454:7:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"435:3:19"},"nodeType":"YulFunctionCall","src":"435:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"428:6:19"},"nodeType":"YulFunctionCall","src":"428:35:19"},"nodeType":"YulIf","src":"425:55:19"},{"nodeType":"YulVariableDeclaration","src":"489:30:19","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"516:2:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"503:12:19"},"nodeType":"YulFunctionCall","src":"503:16:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"493:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"546:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"555:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"558:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"548:6:19"},"nodeType":"YulFunctionCall","src":"548:12:19"},"nodeType":"YulExpressionStatement","src":"548:12:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"534:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"542:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"531:2:19"},"nodeType":"YulFunctionCall","src":"531:14:19"},"nodeType":"YulIf","src":"528:34:19"},{"body":{"nodeType":"YulBlock","src":"620:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:19"},"nodeType":"YulFunctionCall","src":"622:12:19"},"nodeType":"YulExpressionStatement","src":"622:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"585:2:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"593:1:19","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"596:6:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"589:3:19"},"nodeType":"YulFunctionCall","src":"589:14:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"581:3:19"},"nodeType":"YulFunctionCall","src":"581:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"606:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"577:3:19"},"nodeType":"YulFunctionCall","src":"577:32:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"611:7:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"574:2:19"},"nodeType":"YulFunctionCall","src":"574:45:19"},"nodeType":"YulIf","src":"571:65:19"},{"nodeType":"YulAssignment","src":"645:21:19","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"659:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"655:3:19"},"nodeType":"YulFunctionCall","src":"655:11:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"645:6:19"}]},{"nodeType":"YulAssignment","src":"675:16:19","value":{"name":"length","nodeType":"YulIdentifier","src":"685:6:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"675:6:19"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"86:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"97:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"109:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"117:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"125:6:19","type":""}],"src":"14:683:19"},{"body":{"nodeType":"YulBlock","src":"801:93:19","statements":[{"nodeType":"YulAssignment","src":"811:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"823:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"834:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"819:3:19"},"nodeType":"YulFunctionCall","src":"819:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"811:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"868:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"876:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"864:3:19"},"nodeType":"YulFunctionCall","src":"864:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"846:6:19"},"nodeType":"YulFunctionCall","src":"846:42:19"},"nodeType":"YulExpressionStatement","src":"846:42:19"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"770:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"781:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"792:4:19","type":""}],"src":"702:192:19"},{"body":{"nodeType":"YulBlock","src":"1000:76:19","statements":[{"nodeType":"YulAssignment","src":"1010:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1033:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1018:3:19"},"nodeType":"YulFunctionCall","src":"1018:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1010:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1052:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"1063:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1045:6:19"},"nodeType":"YulFunctionCall","src":"1045:25:19"},"nodeType":"YulExpressionStatement","src":"1045:25:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"969:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"980:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"991:4:19","type":""}],"src":"899:177:19"},{"body":{"nodeType":"YulBlock","src":"1170:502:19","statements":[{"body":{"nodeType":"YulBlock","src":"1216:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1225:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1228:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1218:6:19"},"nodeType":"YulFunctionCall","src":"1218:12:19"},"nodeType":"YulExpressionStatement","src":"1218:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1191:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1187:3:19"},"nodeType":"YulFunctionCall","src":"1187:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1212:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1183:3:19"},"nodeType":"YulFunctionCall","src":"1183:32:19"},"nodeType":"YulIf","src":"1180:52:19"},{"nodeType":"YulVariableDeclaration","src":"1241:37:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1268:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1255:12:19"},"nodeType":"YulFunctionCall","src":"1255:23:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1245:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1287:28:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1297:18:19","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1291:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1342:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1351:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1354:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1344:6:19"},"nodeType":"YulFunctionCall","src":"1344:12:19"},"nodeType":"YulExpressionStatement","src":"1344:12:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1330:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1338:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1327:2:19"},"nodeType":"YulFunctionCall","src":"1327:14:19"},"nodeType":"YulIf","src":"1324:34:19"},{"nodeType":"YulVariableDeclaration","src":"1367:32:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1381:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1392:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1377:3:19"},"nodeType":"YulFunctionCall","src":"1377:22:19"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1371:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1447:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1456:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1459:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1449:6:19"},"nodeType":"YulFunctionCall","src":"1449:12:19"},"nodeType":"YulExpressionStatement","src":"1449:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1426:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"1430:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1422:3:19"},"nodeType":"YulFunctionCall","src":"1422:13:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1437:7:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1418:3:19"},"nodeType":"YulFunctionCall","src":"1418:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1411:6:19"},"nodeType":"YulFunctionCall","src":"1411:35:19"},"nodeType":"YulIf","src":"1408:55:19"},{"nodeType":"YulVariableDeclaration","src":"1472:30:19","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1499:2:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1486:12:19"},"nodeType":"YulFunctionCall","src":"1486:16:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1476:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1529:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1538:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1541:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1531:6:19"},"nodeType":"YulFunctionCall","src":"1531:12:19"},"nodeType":"YulExpressionStatement","src":"1531:12:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1517:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"1525:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1514:2:19"},"nodeType":"YulFunctionCall","src":"1514:14:19"},"nodeType":"YulIf","src":"1511:34:19"},{"body":{"nodeType":"YulBlock","src":"1595:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1604:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1607:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1597:6:19"},"nodeType":"YulFunctionCall","src":"1597:12:19"},"nodeType":"YulExpressionStatement","src":"1597:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1568:2:19"},{"name":"length","nodeType":"YulIdentifier","src":"1572:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1564:3:19"},"nodeType":"YulFunctionCall","src":"1564:15:19"},{"kind":"number","nodeType":"YulLiteral","src":"1581:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1560:3:19"},"nodeType":"YulFunctionCall","src":"1560:24:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1557:2:19"},"nodeType":"YulFunctionCall","src":"1557:37:19"},"nodeType":"YulIf","src":"1554:57:19"},{"nodeType":"YulAssignment","src":"1620:21:19","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1634:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"1638:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:19"},"nodeType":"YulFunctionCall","src":"1630:11:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1620:6:19"}]},{"nodeType":"YulAssignment","src":"1650:16:19","value":{"name":"length","nodeType":"YulIdentifier","src":"1660:6:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:19"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1128:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1139:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1151:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1159:6:19","type":""}],"src":"1081:591:19"},{"body":{"nodeType":"YulBlock","src":"1747:110:19","statements":[{"body":{"nodeType":"YulBlock","src":"1793:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1802:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1805:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1795:6:19"},"nodeType":"YulFunctionCall","src":"1795:12:19"},"nodeType":"YulExpressionStatement","src":"1795:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1768:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1777:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1764:3:19"},"nodeType":"YulFunctionCall","src":"1764:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1789:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1760:3:19"},"nodeType":"YulFunctionCall","src":"1760:32:19"},"nodeType":"YulIf","src":"1757:52:19"},{"nodeType":"YulAssignment","src":"1818:33:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1841:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1828:12:19"},"nodeType":"YulFunctionCall","src":"1828:23:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1818:6:19"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1713:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1724:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1736:6:19","type":""}],"src":"1677:180:19"},{"body":{"nodeType":"YulBlock","src":"1963:102:19","statements":[{"nodeType":"YulAssignment","src":"1973:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1985:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1996:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:19"},"nodeType":"YulFunctionCall","src":"1981:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1973:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2015:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2030:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2046:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2051:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2042:3:19"},"nodeType":"YulFunctionCall","src":"2042:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"2055:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2038:3:19"},"nodeType":"YulFunctionCall","src":"2038:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2026:3:19"},"nodeType":"YulFunctionCall","src":"2026:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2008:6:19"},"nodeType":"YulFunctionCall","src":"2008:51:19"},"nodeType":"YulExpressionStatement","src":"2008:51:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1932:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1943:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1954:4:19","type":""}],"src":"1862:203:19"},{"body":{"nodeType":"YulBlock","src":"2171:76:19","statements":[{"nodeType":"YulAssignment","src":"2181:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2193:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2204:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2189:3:19"},"nodeType":"YulFunctionCall","src":"2189:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2181:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2223:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"2234:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2216:6:19"},"nodeType":"YulFunctionCall","src":"2216:25:19"},"nodeType":"YulExpressionStatement","src":"2216:25:19"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2140:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2151:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2162:4:19","type":""}],"src":"2070:177:19"},{"body":{"nodeType":"YulBlock","src":"2284:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2301:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2308:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2313:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2304:3:19"},"nodeType":"YulFunctionCall","src":"2304:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2294:6:19"},"nodeType":"YulFunctionCall","src":"2294:31:19"},"nodeType":"YulExpressionStatement","src":"2294:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2341:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2344:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2334:6:19"},"nodeType":"YulFunctionCall","src":"2334:15:19"},"nodeType":"YulExpressionStatement","src":"2334:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2365:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2368:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2358:6:19"},"nodeType":"YulFunctionCall","src":"2358:15:19"},"nodeType":"YulExpressionStatement","src":"2358:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2252:127:19"},{"body":{"nodeType":"YulBlock","src":"2463:842:19","statements":[{"body":{"nodeType":"YulBlock","src":"2509:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2518:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2521:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2511:6:19"},"nodeType":"YulFunctionCall","src":"2511:12:19"},"nodeType":"YulExpressionStatement","src":"2511:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2484:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2493:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2480:3:19"},"nodeType":"YulFunctionCall","src":"2480:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2505:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2476:3:19"},"nodeType":"YulFunctionCall","src":"2476:32:19"},"nodeType":"YulIf","src":"2473:52:19"},{"nodeType":"YulVariableDeclaration","src":"2534:37:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2561:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2548:12:19"},"nodeType":"YulFunctionCall","src":"2548:23:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2538:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2580:28:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2590:18:19","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2584:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2635:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2644:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2647:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2637:6:19"},"nodeType":"YulFunctionCall","src":"2637:12:19"},"nodeType":"YulExpressionStatement","src":"2637:12:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2623:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2631:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2620:2:19"},"nodeType":"YulFunctionCall","src":"2620:14:19"},"nodeType":"YulIf","src":"2617:34:19"},{"nodeType":"YulVariableDeclaration","src":"2660:32:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2674:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2685:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2670:3:19"},"nodeType":"YulFunctionCall","src":"2670:22:19"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2664:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2740:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2749:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2752:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2742:6:19"},"nodeType":"YulFunctionCall","src":"2742:12:19"},"nodeType":"YulExpressionStatement","src":"2742:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2719:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"2723:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2715:3:19"},"nodeType":"YulFunctionCall","src":"2715:13:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2730:7:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2711:3:19"},"nodeType":"YulFunctionCall","src":"2711:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2704:6:19"},"nodeType":"YulFunctionCall","src":"2704:35:19"},"nodeType":"YulIf","src":"2701:55:19"},{"nodeType":"YulVariableDeclaration","src":"2765:26:19","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2788:2:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2775:12:19"},"nodeType":"YulFunctionCall","src":"2775:16:19"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2769:2:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2814:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2816:16:19"},"nodeType":"YulFunctionCall","src":"2816:18:19"},"nodeType":"YulExpressionStatement","src":"2816:18:19"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2806:2:19"},{"name":"_1","nodeType":"YulIdentifier","src":"2810:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2803:2:19"},"nodeType":"YulFunctionCall","src":"2803:10:19"},"nodeType":"YulIf","src":"2800:36:19"},{"nodeType":"YulVariableDeclaration","src":"2845:17:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2859:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2855:3:19"},"nodeType":"YulFunctionCall","src":"2855:7:19"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2849:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2871:23:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2891:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2885:5:19"},"nodeType":"YulFunctionCall","src":"2885:9:19"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2875:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2903:71:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2925:6:19"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2949:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"2953:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2945:3:19"},"nodeType":"YulFunctionCall","src":"2945:13:19"},{"name":"_4","nodeType":"YulIdentifier","src":"2960:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2941:3:19"},"nodeType":"YulFunctionCall","src":"2941:22:19"},{"kind":"number","nodeType":"YulLiteral","src":"2965:2:19","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2937:3:19"},"nodeType":"YulFunctionCall","src":"2937:31:19"},{"name":"_4","nodeType":"YulIdentifier","src":"2970:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2933:3:19"},"nodeType":"YulFunctionCall","src":"2933:40:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2921:3:19"},"nodeType":"YulFunctionCall","src":"2921:53:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2907:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"3033:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3035:16:19"},"nodeType":"YulFunctionCall","src":"3035:18:19"},"nodeType":"YulExpressionStatement","src":"3035:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2992:10:19"},{"name":"_1","nodeType":"YulIdentifier","src":"3004:2:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2989:2:19"},"nodeType":"YulFunctionCall","src":"2989:18:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3012:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3024:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3009:2:19"},"nodeType":"YulFunctionCall","src":"3009:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2986:2:19"},"nodeType":"YulFunctionCall","src":"2986:46:19"},"nodeType":"YulIf","src":"2983:72:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3071:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3075:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3064:6:19"},"nodeType":"YulFunctionCall","src":"3064:22:19"},"nodeType":"YulExpressionStatement","src":"3064:22:19"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3102:6:19"},{"name":"_3","nodeType":"YulIdentifier","src":"3110:2:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3095:6:19"},"nodeType":"YulFunctionCall","src":"3095:18:19"},"nodeType":"YulExpressionStatement","src":"3095:18:19"},{"body":{"nodeType":"YulBlock","src":"3159:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3168:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3171:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3161:6:19"},"nodeType":"YulFunctionCall","src":"3161:12:19"},"nodeType":"YulExpressionStatement","src":"3161:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3136:2:19"},{"name":"_3","nodeType":"YulIdentifier","src":"3140:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3132:3:19"},"nodeType":"YulFunctionCall","src":"3132:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"3145:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3128:3:19"},"nodeType":"YulFunctionCall","src":"3128:20:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3150:7:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3125:2:19"},"nodeType":"YulFunctionCall","src":"3125:33:19"},"nodeType":"YulIf","src":"3122:53:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3201:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3197:3:19"},"nodeType":"YulFunctionCall","src":"3197:15:19"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3218:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"3222:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3214:3:19"},"nodeType":"YulFunctionCall","src":"3214:11:19"},{"name":"_3","nodeType":"YulIdentifier","src":"3227:2:19"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3184:12:19"},"nodeType":"YulFunctionCall","src":"3184:46:19"},"nodeType":"YulExpressionStatement","src":"3184:46:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3254:6:19"},{"name":"_3","nodeType":"YulIdentifier","src":"3262:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3250:3:19"},"nodeType":"YulFunctionCall","src":"3250:15:19"},{"kind":"number","nodeType":"YulLiteral","src":"3267:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3246:3:19"},"nodeType":"YulFunctionCall","src":"3246:24:19"},{"kind":"number","nodeType":"YulLiteral","src":"3272:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3239:6:19"},"nodeType":"YulFunctionCall","src":"3239:35:19"},"nodeType":"YulExpressionStatement","src":"3239:35:19"},{"nodeType":"YulAssignment","src":"3283:16:19","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3293:6:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3283:6:19"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2429:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2440:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2452:6:19","type":""}],"src":"2384:921:19"},{"body":{"nodeType":"YulBlock","src":"3359:373:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3369:26:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3389:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3383:5:19"},"nodeType":"YulFunctionCall","src":"3383:12:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3373:6:19","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3411:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"3416:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3404:6:19"},"nodeType":"YulFunctionCall","src":"3404:19:19"},"nodeType":"YulExpressionStatement","src":"3404:19:19"},{"nodeType":"YulVariableDeclaration","src":"3432:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3441:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3436:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"3503:110:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3517:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3527:4:19","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3521:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3559:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"3564:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3555:3:19"},"nodeType":"YulFunctionCall","src":"3555:11:19"},{"name":"_1","nodeType":"YulIdentifier","src":"3568:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3551:3:19"},"nodeType":"YulFunctionCall","src":"3551:20:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3587:5:19"},{"name":"i","nodeType":"YulIdentifier","src":"3594:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3583:3:19"},"nodeType":"YulFunctionCall","src":"3583:13:19"},{"name":"_1","nodeType":"YulIdentifier","src":"3598:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3579:3:19"},"nodeType":"YulFunctionCall","src":"3579:22:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3573:5:19"},"nodeType":"YulFunctionCall","src":"3573:29:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3544:6:19"},"nodeType":"YulFunctionCall","src":"3544:59:19"},"nodeType":"YulExpressionStatement","src":"3544:59:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3462:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"3465:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3459:2:19"},"nodeType":"YulFunctionCall","src":"3459:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3473:21:19","statements":[{"nodeType":"YulAssignment","src":"3475:17:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3484:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"3487:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:19"},"nodeType":"YulFunctionCall","src":"3480:12:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3475:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"3455:3:19","statements":[]},"src":"3451:162:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3637:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"3642:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3633:3:19"},"nodeType":"YulFunctionCall","src":"3633:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"3651:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3629:3:19"},"nodeType":"YulFunctionCall","src":"3629:27:19"},{"kind":"number","nodeType":"YulLiteral","src":"3658:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:19"},"nodeType":"YulFunctionCall","src":"3622:38:19"},"nodeType":"YulExpressionStatement","src":"3622:38:19"},{"nodeType":"YulAssignment","src":"3669:57:19","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3684:3:19"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3697:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3705:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3693:3:19"},"nodeType":"YulFunctionCall","src":"3693:15:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3714:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3710:3:19"},"nodeType":"YulFunctionCall","src":"3710:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3689:3:19"},"nodeType":"YulFunctionCall","src":"3689:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3680:3:19"},"nodeType":"YulFunctionCall","src":"3680:39:19"},{"kind":"number","nodeType":"YulLiteral","src":"3721:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3676:3:19"},"nodeType":"YulFunctionCall","src":"3676:50:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3669:3:19"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3336:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3343:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3351:3:19","type":""}],"src":"3310:422:19"},{"body":{"nodeType":"YulBlock","src":"3878:157:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3895:9:19"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3920:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3913:6:19"},"nodeType":"YulFunctionCall","src":"3913:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3906:6:19"},"nodeType":"YulFunctionCall","src":"3906:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:19"},"nodeType":"YulFunctionCall","src":"3888:41:19"},"nodeType":"YulExpressionStatement","src":"3888:41:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3949:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3960:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3945:3:19"},"nodeType":"YulFunctionCall","src":"3945:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"3965:2:19","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3938:6:19"},"nodeType":"YulFunctionCall","src":"3938:30:19"},"nodeType":"YulExpressionStatement","src":"3938:30:19"},{"nodeType":"YulAssignment","src":"3977:52:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4002:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4014:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4025:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4010:3:19"},"nodeType":"YulFunctionCall","src":"4010:18:19"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"3985:16:19"},"nodeType":"YulFunctionCall","src":"3985:44:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3977:4:19"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3839:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3850:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3858:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3869:4:19","type":""}],"src":"3737:298:19"},{"body":{"nodeType":"YulBlock","src":"4072:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4089:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4096:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4101:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4092:3:19"},"nodeType":"YulFunctionCall","src":"4092:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4082:6:19"},"nodeType":"YulFunctionCall","src":"4082:31:19"},"nodeType":"YulExpressionStatement","src":"4082:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4129:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4132:4:19","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4122:6:19"},"nodeType":"YulFunctionCall","src":"4122:15:19"},"nodeType":"YulExpressionStatement","src":"4122:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4153:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4156:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4146:6:19"},"nodeType":"YulFunctionCall","src":"4146:15:19"},"nodeType":"YulExpressionStatement","src":"4146:15:19"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"4040:127:19"},{"body":{"nodeType":"YulBlock","src":"4287:229:19","statements":[{"nodeType":"YulAssignment","src":"4297:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4309:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4320:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4305:3:19"},"nodeType":"YulFunctionCall","src":"4305:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4297:4:19"}]},{"body":{"nodeType":"YulBlock","src":"4365:111:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4386:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4393:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4398:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4389:3:19"},"nodeType":"YulFunctionCall","src":"4389:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4379:6:19"},"nodeType":"YulFunctionCall","src":"4379:31:19"},"nodeType":"YulExpressionStatement","src":"4379:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4430:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4433:4:19","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4423:6:19"},"nodeType":"YulFunctionCall","src":"4423:15:19"},"nodeType":"YulExpressionStatement","src":"4423:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4458:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4461:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4451:6:19"},"nodeType":"YulFunctionCall","src":"4451:15:19"},"nodeType":"YulExpressionStatement","src":"4451:15:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4345:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4353:1:19","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4342:2:19"},"nodeType":"YulFunctionCall","src":"4342:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4335:6:19"},"nodeType":"YulFunctionCall","src":"4335:21:19"},"nodeType":"YulIf","src":"4332:144:19"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4492:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"4503:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4485:6:19"},"nodeType":"YulFunctionCall","src":"4485:25:19"},"nodeType":"YulExpressionStatement","src":"4485:25:19"}]},"name":"abi_encode_tuple_t_enum$_RaffelState_$3553__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4256:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4267:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4278:4:19","type":""}],"src":"4172:344:19"},{"body":{"nodeType":"YulBlock","src":"4591:216:19","statements":[{"body":{"nodeType":"YulBlock","src":"4637:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4646:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4649:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4639:6:19"},"nodeType":"YulFunctionCall","src":"4639:12:19"},"nodeType":"YulExpressionStatement","src":"4639:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4612:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4621:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4608:3:19"},"nodeType":"YulFunctionCall","src":"4608:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4633:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4604:3:19"},"nodeType":"YulFunctionCall","src":"4604:32:19"},"nodeType":"YulIf","src":"4601:52:19"},{"nodeType":"YulVariableDeclaration","src":"4662:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4688:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4675:12:19"},"nodeType":"YulFunctionCall","src":"4675:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4666:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"4761:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4770:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4773:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4763:6:19"},"nodeType":"YulFunctionCall","src":"4763:12:19"},"nodeType":"YulExpressionStatement","src":"4763:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4720:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4731:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4746:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4751:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4742:3:19"},"nodeType":"YulFunctionCall","src":"4742:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"4755:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4738:3:19"},"nodeType":"YulFunctionCall","src":"4738:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4727:3:19"},"nodeType":"YulFunctionCall","src":"4727:31:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4717:2:19"},"nodeType":"YulFunctionCall","src":"4717:42:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4710:6:19"},"nodeType":"YulFunctionCall","src":"4710:50:19"},"nodeType":"YulIf","src":"4707:70:19"},{"nodeType":"YulAssignment","src":"4786:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"4796:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4786:6:19"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4557:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4568:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4580:6:19","type":""}],"src":"4521:286:19"},{"body":{"nodeType":"YulBlock","src":"4879:206:19","statements":[{"body":{"nodeType":"YulBlock","src":"4925:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4934:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4937:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4927:6:19"},"nodeType":"YulFunctionCall","src":"4927:12:19"},"nodeType":"YulExpressionStatement","src":"4927:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4900:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4909:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4896:3:19"},"nodeType":"YulFunctionCall","src":"4896:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4921:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4892:3:19"},"nodeType":"YulFunctionCall","src":"4892:32:19"},"nodeType":"YulIf","src":"4889:52:19"},{"nodeType":"YulVariableDeclaration","src":"4950:36:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4976:9:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4963:12:19"},"nodeType":"YulFunctionCall","src":"4963:23:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4954:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"5039:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5048:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5051:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5041:6:19"},"nodeType":"YulFunctionCall","src":"5041:12:19"},"nodeType":"YulExpressionStatement","src":"5041:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5008:5:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5029:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5022:6:19"},"nodeType":"YulFunctionCall","src":"5022:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5015:6:19"},"nodeType":"YulFunctionCall","src":"5015:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5005:2:19"},"nodeType":"YulFunctionCall","src":"5005:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4998:6:19"},"nodeType":"YulFunctionCall","src":"4998:40:19"},"nodeType":"YulIf","src":"4995:60:19"},{"nodeType":"YulAssignment","src":"5064:15:19","value":{"name":"value","nodeType":"YulIdentifier","src":"5074:5:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5064:6:19"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4845:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4856:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4868:6:19","type":""}],"src":"4812:273:19"},{"body":{"nodeType":"YulBlock","src":"5221:102:19","statements":[{"nodeType":"YulAssignment","src":"5231:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5243:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5254:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5239:3:19"},"nodeType":"YulFunctionCall","src":"5239:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5231:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5273:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5288:6:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5304:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5309:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5300:3:19"},"nodeType":"YulFunctionCall","src":"5300:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"5313:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5296:3:19"},"nodeType":"YulFunctionCall","src":"5296:19:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5284:3:19"},"nodeType":"YulFunctionCall","src":"5284:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5266:6:19"},"nodeType":"YulFunctionCall","src":"5266:51:19"},"nodeType":"YulExpressionStatement","src":"5266:51:19"}]},"name":"abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2549__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5190:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5201:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5212:4:19","type":""}],"src":"5090:233:19"},{"body":{"nodeType":"YulBlock","src":"5445:151:19","statements":[{"nodeType":"YulAssignment","src":"5455:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5467:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5478:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5463:3:19"},"nodeType":"YulFunctionCall","src":"5463:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5455:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5497:9:19"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5522:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5515:6:19"},"nodeType":"YulFunctionCall","src":"5515:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5508:6:19"},"nodeType":"YulFunctionCall","src":"5508:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5490:6:19"},"nodeType":"YulFunctionCall","src":"5490:41:19"},"nodeType":"YulExpressionStatement","src":"5490:41:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5551:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5562:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5547:3:19"},"nodeType":"YulFunctionCall","src":"5547:18:19"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5581:6:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5574:6:19"},"nodeType":"YulFunctionCall","src":"5574:14:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5567:6:19"},"nodeType":"YulFunctionCall","src":"5567:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5540:6:19"},"nodeType":"YulFunctionCall","src":"5540:50:19"},"nodeType":"YulExpressionStatement","src":"5540:50:19"}]},"name":"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5406:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5417:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5425:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5436:4:19","type":""}],"src":"5328:268:19"},{"body":{"nodeType":"YulBlock","src":"5700:89:19","statements":[{"nodeType":"YulAssignment","src":"5710:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5722:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5733:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5718:3:19"},"nodeType":"YulFunctionCall","src":"5718:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5710:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5752:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5767:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5775:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5763:3:19"},"nodeType":"YulFunctionCall","src":"5763:19:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5745:6:19"},"nodeType":"YulFunctionCall","src":"5745:38:19"},"nodeType":"YulExpressionStatement","src":"5745:38:19"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5669:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5680:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5691:4:19","type":""}],"src":"5601:188:19"},{"body":{"nodeType":"YulBlock","src":"5923:175:19","statements":[{"nodeType":"YulAssignment","src":"5933:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5945:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5956:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5941:3:19"},"nodeType":"YulFunctionCall","src":"5941:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5933:4:19"}]},{"nodeType":"YulVariableDeclaration","src":"5968:29:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5986:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5991:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5982:3:19"},"nodeType":"YulFunctionCall","src":"5982:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"5995:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5978:3:19"},"nodeType":"YulFunctionCall","src":"5978:19:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5972:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6013:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6028:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"6036:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6024:3:19"},"nodeType":"YulFunctionCall","src":"6024:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6006:6:19"},"nodeType":"YulFunctionCall","src":"6006:34:19"},"nodeType":"YulExpressionStatement","src":"6006:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6060:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6071:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6056:3:19"},"nodeType":"YulFunctionCall","src":"6056:18:19"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6080:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"6088:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6076:3:19"},"nodeType":"YulFunctionCall","src":"6076:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6049:6:19"},"nodeType":"YulFunctionCall","src":"6049:43:19"},"nodeType":"YulExpressionStatement","src":"6049:43:19"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5884:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5895:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5903:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5914:4:19","type":""}],"src":"5794:304:19"},{"body":{"nodeType":"YulBlock","src":"6260:162:19","statements":[{"nodeType":"YulAssignment","src":"6270:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6282:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6293:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6278:3:19"},"nodeType":"YulFunctionCall","src":"6278:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6270:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6312:9:19"},{"name":"value0","nodeType":"YulIdentifier","src":"6323:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6305:6:19"},"nodeType":"YulFunctionCall","src":"6305:25:19"},"nodeType":"YulExpressionStatement","src":"6305:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6350:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6361:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6346:3:19"},"nodeType":"YulFunctionCall","src":"6346:18:19"},{"name":"value1","nodeType":"YulIdentifier","src":"6366:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6339:6:19"},"nodeType":"YulFunctionCall","src":"6339:34:19"},"nodeType":"YulExpressionStatement","src":"6339:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6393:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6404:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6389:3:19"},"nodeType":"YulFunctionCall","src":"6389:18:19"},{"name":"value2","nodeType":"YulIdentifier","src":"6409:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6382:6:19"},"nodeType":"YulFunctionCall","src":"6382:34:19"},"nodeType":"YulExpressionStatement","src":"6382:34:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6213:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6224:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6232:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6240:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6251:4:19","type":""}],"src":"6103:319:19"},{"body":{"nodeType":"YulBlock","src":"6459:95:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6476:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6483:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6488:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6479:3:19"},"nodeType":"YulFunctionCall","src":"6479:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6469:6:19"},"nodeType":"YulFunctionCall","src":"6469:31:19"},"nodeType":"YulExpressionStatement","src":"6469:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6516:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6519:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6509:6:19"},"nodeType":"YulFunctionCall","src":"6509:15:19"},"nodeType":"YulExpressionStatement","src":"6509:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6540:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6543:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6533:6:19"},"nodeType":"YulFunctionCall","src":"6533:15:19"},"nodeType":"YulExpressionStatement","src":"6533:15:19"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6427:127:19"},{"body":{"nodeType":"YulBlock","src":"6608:176:19","statements":[{"nodeType":"YulAssignment","src":"6618:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6630:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"6633:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6626:3:19"},"nodeType":"YulFunctionCall","src":"6626:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6618:4:19"}]},{"body":{"nodeType":"YulBlock","src":"6667:111:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6688:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6695:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6700:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6691:3:19"},"nodeType":"YulFunctionCall","src":"6691:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6681:6:19"},"nodeType":"YulFunctionCall","src":"6681:31:19"},"nodeType":"YulExpressionStatement","src":"6681:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6732:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6735:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6725:6:19"},"nodeType":"YulFunctionCall","src":"6725:15:19"},"nodeType":"YulExpressionStatement","src":"6725:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6760:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6763:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6753:6:19"},"nodeType":"YulFunctionCall","src":"6753:15:19"},"nodeType":"YulExpressionStatement","src":"6753:15:19"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6650:4:19"},{"name":"x","nodeType":"YulIdentifier","src":"6656:1:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6647:2:19"},"nodeType":"YulFunctionCall","src":"6647:11:19"},"nodeType":"YulIf","src":"6644:134:19"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6590:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"6593:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6599:4:19","type":""}],"src":"6559:225:19"},{"body":{"nodeType":"YulBlock","src":"6963:172:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6980:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6991:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6973:6:19"},"nodeType":"YulFunctionCall","src":"6973:21:19"},"nodeType":"YulExpressionStatement","src":"6973:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7014:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7025:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7010:3:19"},"nodeType":"YulFunctionCall","src":"7010:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"7030:2:19","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7003:6:19"},"nodeType":"YulFunctionCall","src":"7003:30:19"},"nodeType":"YulExpressionStatement","src":"7003:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7053:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7064:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7049:3:19"},"nodeType":"YulFunctionCall","src":"7049:18:19"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7069:24:19","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7042:6:19"},"nodeType":"YulFunctionCall","src":"7042:52:19"},"nodeType":"YulExpressionStatement","src":"7042:52:19"},{"nodeType":"YulAssignment","src":"7103:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7115:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7126:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7111:3:19"},"nodeType":"YulFunctionCall","src":"7111:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7103:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6940:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6954:4:19","type":""}],"src":"6789:346:19"},{"body":{"nodeType":"YulBlock","src":"7297:227:19","statements":[{"nodeType":"YulAssignment","src":"7307:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7319:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7330:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7315:3:19"},"nodeType":"YulFunctionCall","src":"7315:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7307:4:19"}]},{"nodeType":"YulVariableDeclaration","src":"7342:29:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7360:3:19","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7365:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7356:3:19"},"nodeType":"YulFunctionCall","src":"7356:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"7369:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7352:3:19"},"nodeType":"YulFunctionCall","src":"7352:19:19"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7346:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7387:9:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7402:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"7410:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7398:3:19"},"nodeType":"YulFunctionCall","src":"7398:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7380:6:19"},"nodeType":"YulFunctionCall","src":"7380:34:19"},"nodeType":"YulExpressionStatement","src":"7380:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7434:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7445:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7430:3:19"},"nodeType":"YulFunctionCall","src":"7430:18:19"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7454:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"7462:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7450:3:19"},"nodeType":"YulFunctionCall","src":"7450:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7423:6:19"},"nodeType":"YulFunctionCall","src":"7423:43:19"},"nodeType":"YulExpressionStatement","src":"7423:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7486:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7497:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7482:3:19"},"nodeType":"YulFunctionCall","src":"7482:18:19"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7506:6:19"},{"name":"_1","nodeType":"YulIdentifier","src":"7514:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7502:3:19"},"nodeType":"YulFunctionCall","src":"7502:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7475:6:19"},"nodeType":"YulFunctionCall","src":"7475:43:19"},"nodeType":"YulExpressionStatement","src":"7475:43:19"}]},"name":"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7250:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7261:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7269:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7277:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7288:4:19","type":""}],"src":"7140:384:19"},{"body":{"nodeType":"YulBlock","src":"7702:594:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7719:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7730:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7712:6:19"},"nodeType":"YulFunctionCall","src":"7712:21:19"},"nodeType":"YulExpressionStatement","src":"7712:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7753:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7764:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7749:3:19"},"nodeType":"YulFunctionCall","src":"7749:18:19"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7775:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7769:5:19"},"nodeType":"YulFunctionCall","src":"7769:13:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7742:6:19"},"nodeType":"YulFunctionCall","src":"7742:41:19"},"nodeType":"YulExpressionStatement","src":"7742:41:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7803:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7814:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7799:3:19"},"nodeType":"YulFunctionCall","src":"7799:18:19"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7829:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"7837:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7825:3:19"},"nodeType":"YulFunctionCall","src":"7825:15:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7819:5:19"},"nodeType":"YulFunctionCall","src":"7819:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7792:6:19"},"nodeType":"YulFunctionCall","src":"7792:50:19"},"nodeType":"YulExpressionStatement","src":"7792:50:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7862:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7873:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7858:3:19"},"nodeType":"YulFunctionCall","src":"7858:18:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7892:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"7900:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7888:3:19"},"nodeType":"YulFunctionCall","src":"7888:15:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7882:5:19"},"nodeType":"YulFunctionCall","src":"7882:22:19"},{"kind":"number","nodeType":"YulLiteral","src":"7906:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7878:3:19"},"nodeType":"YulFunctionCall","src":"7878:35:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7851:6:19"},"nodeType":"YulFunctionCall","src":"7851:63:19"},"nodeType":"YulExpressionStatement","src":"7851:63:19"},{"nodeType":"YulVariableDeclaration","src":"7923:42:19","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7953:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"7961:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7949:3:19"},"nodeType":"YulFunctionCall","src":"7949:15:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7943:5:19"},"nodeType":"YulFunctionCall","src":"7943:22:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7927:12:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7974:20:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7984:10:19","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7978:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8014:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8025:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8010:3:19"},"nodeType":"YulFunctionCall","src":"8010:19:19"},{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8035:12:19"},{"name":"_1","nodeType":"YulIdentifier","src":"8049:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8031:3:19"},"nodeType":"YulFunctionCall","src":"8031:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8003:6:19"},"nodeType":"YulFunctionCall","src":"8003:50:19"},"nodeType":"YulExpressionStatement","src":"8003:50:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8073:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8084:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8069:3:19"},"nodeType":"YulFunctionCall","src":"8069:19:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8104:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8112:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8100:3:19"},"nodeType":"YulFunctionCall","src":"8100:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8094:5:19"},"nodeType":"YulFunctionCall","src":"8094:23:19"},{"name":"_1","nodeType":"YulIdentifier","src":"8119:2:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8090:3:19"},"nodeType":"YulFunctionCall","src":"8090:32:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8062:6:19"},"nodeType":"YulFunctionCall","src":"8062:61:19"},"nodeType":"YulExpressionStatement","src":"8062:61:19"},{"nodeType":"YulVariableDeclaration","src":"8132:45:19","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8164:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8172:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8160:3:19"},"nodeType":"YulFunctionCall","src":"8160:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8154:5:19"},"nodeType":"YulFunctionCall","src":"8154:23:19"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"8136:14:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8197:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8208:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8193:3:19"},"nodeType":"YulFunctionCall","src":"8193:20:19"},{"kind":"number","nodeType":"YulLiteral","src":"8215:4:19","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8186:6:19"},"nodeType":"YulFunctionCall","src":"8186:34:19"},"nodeType":"YulExpressionStatement","src":"8186:34:19"},{"nodeType":"YulAssignment","src":"8229:61:19","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"8254:14:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8274:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8285:3:19","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8270:3:19"},"nodeType":"YulFunctionCall","src":"8270:19:19"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"8237:16:19"},"nodeType":"YulFunctionCall","src":"8237:53:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8229:4:19"}]}]},"name":"abi_encode_tuple_t_struct$_RandomWordsRequest_$2678_memory_ptr__to_t_struct$_RandomWordsRequest_$2678_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7671:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7682:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7693:4:19","type":""}],"src":"7529:767:19"},{"body":{"nodeType":"YulBlock","src":"8382:103:19","statements":[{"body":{"nodeType":"YulBlock","src":"8428:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8437:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8440:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8430:6:19"},"nodeType":"YulFunctionCall","src":"8430:12:19"},"nodeType":"YulExpressionStatement","src":"8430:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8403:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"8412:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8399:3:19"},"nodeType":"YulFunctionCall","src":"8399:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"8424:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8395:3:19"},"nodeType":"YulFunctionCall","src":"8395:32:19"},"nodeType":"YulIf","src":"8392:52:19"},{"nodeType":"YulAssignment","src":"8453:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8469:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8463:5:19"},"nodeType":"YulFunctionCall","src":"8463:16:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8453:6:19"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8348:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8359:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8371:6:19","type":""}],"src":"8301:184:19"},{"body":{"nodeType":"YulBlock","src":"8528:171:19","statements":[{"body":{"nodeType":"YulBlock","src":"8559:111:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8580:1:19","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8587:3:19","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8592:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8583:3:19"},"nodeType":"YulFunctionCall","src":"8583:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8573:6:19"},"nodeType":"YulFunctionCall","src":"8573:31:19"},"nodeType":"YulExpressionStatement","src":"8573:31:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8624:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8627:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8617:6:19"},"nodeType":"YulFunctionCall","src":"8617:15:19"},"nodeType":"YulExpressionStatement","src":"8617:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8652:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8655:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8645:6:19"},"nodeType":"YulFunctionCall","src":"8645:15:19"},"nodeType":"YulExpressionStatement","src":"8645:15:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8548:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8541:6:19"},"nodeType":"YulFunctionCall","src":"8541:9:19"},"nodeType":"YulIf","src":"8538:132:19"},{"nodeType":"YulAssignment","src":"8679:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8688:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"8691:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8684:3:19"},"nodeType":"YulFunctionCall","src":"8684:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8679:1:19"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8513:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"8516:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8522:1:19","type":""}],"src":"8490:209:19"},{"body":{"nodeType":"YulBlock","src":"8895:14:19","statements":[{"nodeType":"YulAssignment","src":"8897:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"8904:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8897:3:19"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8879:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8887:3:19","type":""}],"src":"8704:205:19"},{"body":{"nodeType":"YulBlock","src":"9073:99:19","statements":[{"nodeType":"YulAssignment","src":"9083:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9095:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9106:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9091:3:19"},"nodeType":"YulFunctionCall","src":"9091:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9083:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9125:9:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9156:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9150:5:19"},"nodeType":"YulFunctionCall","src":"9150:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9143:6:19"},"nodeType":"YulFunctionCall","src":"9143:21:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9136:6:19"},"nodeType":"YulFunctionCall","src":"9136:29:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9118:6:19"},"nodeType":"YulFunctionCall","src":"9118:48:19"},"nodeType":"YulExpressionStatement","src":"9118:48:19"}]},"name":"abi_encode_tuple_t_struct$_ExtraArgsV1_$2665_memory_ptr__to_t_struct$_ExtraArgsV1_$2665_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9042:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9053:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9064:4:19","type":""}],"src":"8914:258:19"},{"body":{"nodeType":"YulBlock","src":"9351:172:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9368:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9379:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9361:6:19"},"nodeType":"YulFunctionCall","src":"9361:21:19"},"nodeType":"YulExpressionStatement","src":"9361:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9402:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:19"},"nodeType":"YulFunctionCall","src":"9398:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"9418:2:19","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9391:6:19"},"nodeType":"YulFunctionCall","src":"9391:30:19"},"nodeType":"YulExpressionStatement","src":"9391:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9441:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9452:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9437:3:19"},"nodeType":"YulFunctionCall","src":"9437:18:19"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"9457:24:19","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9430:6:19"},"nodeType":"YulFunctionCall","src":"9430:52:19"},"nodeType":"YulExpressionStatement","src":"9430:52:19"},{"nodeType":"YulAssignment","src":"9491:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9503:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9514:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9499:3:19"},"nodeType":"YulFunctionCall","src":"9499:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9491:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9328:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9342:4:19","type":""}],"src":"9177:346:19"},{"body":{"nodeType":"YulBlock","src":"9702:173:19","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9719:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9730:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9712:6:19"},"nodeType":"YulFunctionCall","src":"9712:21:19"},"nodeType":"YulExpressionStatement","src":"9712:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9753:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9764:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9749:3:19"},"nodeType":"YulFunctionCall","src":"9749:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"9769:2:19","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9742:6:19"},"nodeType":"YulFunctionCall","src":"9742:30:19"},"nodeType":"YulExpressionStatement","src":"9742:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9792:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9803:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9788:3:19"},"nodeType":"YulFunctionCall","src":"9788:18:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"9808:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9781:6:19"},"nodeType":"YulFunctionCall","src":"9781:53:19"},"nodeType":"YulExpressionStatement","src":"9781:53:19"},{"nodeType":"YulAssignment","src":"9843:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9855:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9866:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9851:3:19"},"nodeType":"YulFunctionCall","src":"9851:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9843:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9679:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9693:4:19","type":""}],"src":"9528:347:19"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_RaffelState_$3553__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2549__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_struct$_RandomWordsRequest_$2678_memory_ptr__to_t_struct$_RandomWordsRequest_$2678_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        mstore(add(headStart, 64), mload(add(value0, 32)))\n        mstore(add(headStart, 96), and(mload(add(value0, 64)), 0xffff))\n        let memberValue0 := mload(add(value0, 96))\n        let _1 := 0xffffffff\n        mstore(add(headStart, 128), and(memberValue0, _1))\n        mstore(add(headStart, 160), and(mload(add(value0, 128)), _1))\n        let memberValue0_1 := mload(add(value0, 160))\n        mstore(add(headStart, 0xc0), 0xc0)\n        tail := abi_encode_bytes(memberValue0_1, add(headStart, 224))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_struct$_ExtraArgsV1_$2665_memory_ptr__to_t_struct$_ExtraArgsV1_$2665_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(mload(value0))))\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3555":[{"length":32,"start":604},{"length":32,"start":1227}],"3590":[{"length":32,"start":2362}],"3602":[{"length":32,"start":916},{"length":32,"start":1750}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8796BA8C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x9ECCACF6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xA168FA89 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xB0FB162F EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xFC2A88C3 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8796BA8C EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x8A78DA41 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x9D52D89D EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x473F1DDC GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x535BF50F EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFF19FD7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x24F74697 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x460E2049 EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x158 PUSH2 0x4C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x197 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x210 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP3 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x753 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x197 SWAP1 PUSH7 0x1000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x210 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x431 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x46B SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1C2 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH4 0xDDBB36C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x52A PUSH2 0x10E4 JUMP JUMPDEST EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5438580B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0xAA80E2A495E1F9621CEF4CC4E683C91012559860B607A726567FAEC8D409F647 SWAP2 LOG2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5FB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6AB JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x606 JUMPI PUSH1 0x3 SLOAD PUSH1 0x8 SLOAD SELFBALANCE SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x651 JUMPI PUSH2 0x651 PUSH2 0x10E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x125F719F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x690 JUMPI PUSH2 0x690 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP2 DUP1 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0x10E4 JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP2 LT SWAP2 POP ISZERO ISZERO SELFBALANCE ISZERO ISZERO DUP4 DUP1 ISZERO PUSH2 0x719 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x722 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x72B JUMPI POP DUP1 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x30783 PUSH1 0xEC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x844 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x895 JUMPI CALLER PUSH2 0x85C PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x61DB9C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0xF0 SHL PUSH1 0xFF PUSH1 0xF0 SHL NOT DUP3 AND OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH5 0x100000000 DUP7 DIV PUSH2 0xFFFF AND DUP3 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF SWAP5 DUP6 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH7 0x1000000000000 SWAP1 SWAP6 DIV SWAP1 SWAP4 AND PUSH1 0x80 DUP5 ADD MSTORE DUP1 MLOAD SWAP4 DUP5 ADD SWAP1 MSTORE DUP4 ISZERO ISZERO DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x9B1C385E SWAP2 PUSH1 0xA0 DUP3 ADD SWAP1 PUSH2 0x9C1 SWAP1 PUSH2 0xC86 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA23 SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP6 MLOAD DUP5 DUP2 MSTORE DUP1 DUP4 ADD DUP8 MSTORE DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 DUP6 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP6 SWAP1 SWAP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP5 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP1 ISZERO ISZERO PUSH2 0xFF00 NOT AND OR PUSH2 0x100 SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 MUL SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE SWAP4 MLOAD DUP1 MLOAD SWAP6 SWAP7 POP SWAP3 SWAP5 SWAP2 SWAP4 PUSH2 0xA98 SWAP4 SWAP2 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0xDF5 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP3 SWAP1 SSTORE POP PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7D73DDDA260DC89816EE12CE72B1A4114528F275259EF6541D5F91803C6C284 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB15 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0xD4C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP4 DUP4 DUP4 DUP2 PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0x1174 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x50 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP4 MUL PUSH1 0xFF PUSH1 0xF0 SHL NOT AND PUSH32 0xFF000000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 DUP4 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP3 POP PUSH2 0xBD3 SWAP2 PUSH1 0x3 SWAP2 SWAP1 PUSH2 0xE40 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E1873A5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x794919B0F484B8E90B1B817AC7F880F846FBD8A9813DEE2A378E820DB094E3D1 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCBF SWAP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xE30 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xE30 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xE15 JUMP JUMPDEST POP PUSH2 0xE3C SWAP3 SWAP2 POP PUSH2 0xE95 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xE30 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xE30 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xF16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xF89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x101A JUMPI PUSH2 0x101A PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1042 PUSH2 0xFB4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x105B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10A1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1085 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x10DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x107B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x111C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x11AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFFFF PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE DUP1 PUSH1 0x80 DUP7 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE POP POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP1 DUP5 ADD MSTORE PUSH2 0x10DC PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1244 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xE7 LOG1 PUSH12 0xA50053564156325F76266FE6 STATICCALL SHL COINBASE EQ 0xE8 EXTCODESIZE MSTORE DUP5 DUP6 0xBF COINBASE PREVRANDAO 0xDE DUP16 SWAP2 CREATE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"974:5718:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2864:328;;;:::i;:::-;;7489:280:11;;;;;;;;;;-1:-1:-1;7489:280:11;;;;;:::i;:::-;;:::i;1666:39:17:-;;;;;;;;;;-1:-1:-1;1666:39:17;;;;;;;;;;;876:10:19;864:23;;;846:42;;834:2;819:18;1666:39:17;;;;;;;;6498:99;;;;;;;;;;-1:-1:-1;6575:15:17;;6498:99;;;1045:25:19;;;1033:2;1018:18;6498:99:17;899:177:19;3942:384:17;;;;;;;;;;-1:-1:-1;3942:384:17;;;;;:::i;:::-;;:::i;6077:105::-;;;;;;;;;;-1:-1:-1;6077:105:17;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2026:32:19;;;2008:51;;1996:2;1981:18;6077:105:17;1862:203:19;6188:95:17;;;;;;;;;;-1:-1:-1;6262:14:17;;-1:-1:-1;;;6262:14:17;;-1:-1:-1;;;;;6262:14:17;6188:95;;5976;;;;;;;;;;-1:-1:-1;6050:14:17;5976:95;;1569:91;;;;;;;;;;;;;;;;3428:508;;;;;;;;;;-1:-1:-1;3428:508:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1026:316:4:-;;;;;;;;;;;;;:::i;1755:26:17:-;;;;;;;;;;-1:-1:-1;1755:26:17;;;;;;;;;;;1502:27;;;;;;;;;;-1:-1:-1;1502:27:17;;;;;:::i;:::-;;:::i;6289:97::-;;;;;;;;;;-1:-1:-1;6366:13:17;;-1:-1:-1;;;6366:13:17;;;;6289:97;;;;;;:::i;1382:81:4:-;;;;;;;;;;-1:-1:-1;1429:7:4;1451;-1:-1:-1;;;;;1451:7:4;1382:81;;7831:276:11;;;;;;;;;;-1:-1:-1;7831:276:11;;;;;:::i;:::-;;:::i;6603:87:17:-;;;;;;;;;;-1:-1:-1;6673:10:17;6603:87;;4332:964;;;;;;;;;;-1:-1:-1;4332:964:17;;;;;:::i;:::-;;:::i;6077:45:11:-;;;;;;;;;;-1:-1:-1;6077:45:11;;;;-1:-1:-1;;;;;6077:45:11;;;1444:51:17;;;;;;;;;;-1:-1:-1;1444:51:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;5515:14:19;;5508:22;5490:41;;5574:14;;5567:22;5562:2;5547:18;;5540:50;5463:18;1444:51:17;5328:268:19;1711:38:17;;;;;;;;;;-1:-1:-1;1711:38:17;;;;;;;;;;;;;;5775:6:19;5763:19;;;5745:38;;5733:2;5718:18;1711:38:17;5601:188:19;847:98:4;;;;;;;;;;-1:-1:-1;847:98:4;;;;;:::i;:::-;;:::i;1535:28:17:-;;;;;;;;;;;;;;;;6392:100;;;;;;;;;;-1:-1:-1;6469:9:17;:16;6392:100;;2864:328;2928:14;2916:9;:26;2912:93;;;2965:29;;-1:-1:-1;;;2965:29:17;;;;;;;;;;;2912:93;3035:16;3018:13;;-1:-1:-1;;;3018:13:17;;;;:33;;;;;;;;:::i;:::-;;3014:88;;3074:17;;-1:-1:-1;;;3074:17:17;;;;;;;;;;;3014:88;3111:9;:35;;;;;;;-1:-1:-1;3111:35:17;;;;;;;-1:-1:-1;;;;;;3111:35:17;3134:10;3111:35;;;;;;3162:23;;3134:10;;3162:23;;;2864:328::o;7489:280:11:-;7612:16;;-1:-1:-1;;;;;7612:16:11;7590:10;:39;7586:131;;7692:16;;7646:64;;-1:-1:-1;;;7646:64:11;;7672:10;7646:64;;;6006:34:19;-1:-1:-1;;;;;7692:16:11;;;6056:18:19;;;6049:43;5941:18;;7646:64:11;;;;;;;;7586:131;7722:42;7741:9;7752:11;;7722:18;:42::i;:::-;7489:280;;;:::o;3942:384:17:-;4071:17;4094:15;;;;;;;;;;;;;:11;:15::i;:::-;4070:39;;;4124:12;4119:201;;4239:9;:16;4281:13;;4200:21;;4239:16;-1:-1:-1;;;4281:13:17;;;;4273:22;;;;;;;;:::i;:::-;4159:150;;-1:-1:-1;;;4159:150:17;;;;;6305:25:19;;;;6346:18;;;6339:34;;;;6389:18;;;6382:34;6278:18;;4159:150:17;6103:319:19;6077:105:17;6133:7;6159:9;6169:5;6159:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6159:16:17;;6077:105;-1:-1:-1;;6077:105:17:o;3428:508::-;3518:17;3537:12;3518:17;;3594:13;;-1:-1:-1;;;3594:13:17;;;;:33;;;;;;;;:::i;:::-;;3579:49;;3638:17;3697:10;3678:15;;3660;:33;;;;:::i;:::-;3737:9;:16;3659:48;-1:-1:-1;3659:48:17;-1:-1:-1;3737:20:17;;3787:21;:25;;3840:6;:22;;;;;3850:12;3840:22;:36;;;;;3866:10;3840:36;:50;;;;;3880:10;3840:50;3901:28;;;;;;;;;;;;-1:-1:-1;;;3901:28:17;;;;3824:67;;3901:28;;-1:-1:-1;3428:508:17;-1:-1:-1;;;;;;3428:508:17:o;1026:316:4:-;1150:14;;-1:-1:-1;;;;;1150:14:4;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:4;;6991:2:19;1128:63:4;;;6973:21:19;7030:2;7010:18;;;7003:30;-1:-1:-1;;;7049:18:19;;;7042:52;7111:18;;1128:63:4;6789:346:19;1128:63:4;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:4;;;;;;;-1:-1:-1;1256:27:4;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:4;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;1502:27:17:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1502:27:17;:::o;7831:276:11:-;1429:7:4;1451;-1:-1:-1;;;;;1451:7:4;8155:10:11;:21;;;;:64;;-1:-1:-1;8202:16:11;;-1:-1:-1;;;;;8202:16:11;8180:10;:39;;8155:64;8151:162;;;8259:10;8271:7;1429::4;1451;-1:-1:-1;;;;;1451:7:4;;1382:81;8271:7:11;8288:16;;8236:70;;-1:-1:-1;;;8236:70:11;;-1:-1:-1;;;;;7398:15:19;;;8236:70:11;;;7380:34:19;7450:15;;;7430:18;;;7423:43;8288:16:11;;;;7482:18:19;;;7475:43;7315:18;;8236:70:11;7140:384:19;8151:162:11;-1:-1:-1;;;;;7931:29:11;::::1;7927:70;;7977:13;;-1:-1:-1::0;;;7977:13:11::1;;;;;;;;;;;7927:70;8002:16;:57:::0;;-1:-1:-1;;;;;;8002:57:11::1;-1:-1:-1::0;;;;;8002:57:11;::::1;::::0;;::::1;::::0;;;8071:31:::1;::::0;2008:51:19;;;8071:31:11::1;::::0;1996:2:19;1981:18;8071:31:11::1;;;;;;;7831:276:::0;:::o;4332:964:17:-;4434:13;:39;;-1:-1:-1;;;;;;;4434:39:17;;;;;;;4495:16;;4544:435;;;;;;;;4606:7;;4544:435;;4638:16;4544:435;;;;;;;;4694:20;;;;;4544:435;;;;4750:16;;;;4544:435;;;;4794:8;;;;;;;4544:435;;;;4881:65;;;;;;;;;;;;4405:17;;-1:-1:-1;;;;;4495:16:17;;;;:35;;4544:435;;;;4831:133;;:28;:133::i;:::-;4544:435;;;4495:494;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5023:124;;;;;;;;-1:-1:-1;5023:124:17;;;;;;;;;;;5064:16;;;;;;;;;;5023:124;;;;;;4999:21;;;:10;:21;;;;;;:148;;;;;;-1:-1:-1;;4999:148:17;;;;;;-1:-1:-1;;4999:148:17;;;;;;;;;;;;;;;;;;;;4483:506;;-1:-1:-1;5023:124:17;;4999:21;;:148;;;;;;;;;;:::i;:::-;-1:-1:-1;;5157:10:17;:26;;;;;;;-1:-1:-1;5157:26:17;;;;;;;;;-1:-1:-1;5193:13:17;:25;;;5233:30;;1045:25:19;;;5233:30:17;;1033:2:19;1018:18;5233:30:17;;;;;;;4332:964;;;:::o;847:98:4:-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;5302:634:17:-;5477:9;:16;5436:21;;5460:11;;5436:21;5460:14;;;;;:::i;:::-;;;;;;;:33;;;;:::i;:::-;5436:57;;5503:28;5534:9;5544:13;5534:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;5568:14;:29;;-1:-1:-1;;;;;;;;5534:24:17;;;5568:29;;;-1:-1:-1;;;;5607:32:17;;;;;;;;5661:24;;;;;;;;;;;;;5649:36;;5534:24;;-1:-1:-1;5649:36:17;;:9;;5661:24;5649:36;:::i;:::-;-1:-1:-1;5713:15:17;5695;:33;5758:51;;5740:12;;-1:-1:-1;;;;;5758:17:17;;;5783:21;;5740:12;5758:51;5740:12;5758:51;5783:21;5758:17;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5739:70;;;5824:7;5819:70;;5854:24;;-1:-1:-1;;;5854:24:17;;;;;;;;;;;5819:70;5903:26;;-1:-1:-1;;;;;5903:26:17;;;;;;;;5426:510;;;5302:634;;;:::o;517:169:15:-;592:16;215:28;669:9;627:52;;;;;;9150:13:19;9143:21;9136:29;9118:48;;9106:2;9091:18;;8914:258;627:52:15;;;;-1:-1:-1;;627:52:15;;;;;;;;;;;;;;-1:-1:-1;;;;;627:52:15;-1:-1:-1;;;;;;627:52:15;;;;;;;;;;;517:169;-1:-1:-1;;517:169:15:o;1809:162:4:-;1932:7;;-1:-1:-1;;;;;1932:7:4;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:4;;9379:2:19;1910:56:4;;;9361:21:19;9418:2;9398:18;;;9391:30;-1:-1:-1;;;9437:18:19;;;9430:52;9499:18;;1910:56:4;9177:346:19;1910:56:4;1809:162::o;1536:239::-;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;9730:2:19;1641:52:4;;;9712:21:19;9769:2;9749:18;;;9742:30;9808:25;9788:18;;;9781:53;9851:18;;1641:52:4;9528:347:19;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:683:19;109:6;117;125;178:2;166:9;157:7;153:23;149:32;146:52;;;194:1;191;184:12;146:52;230:9;217:23;207:33;;291:2;280:9;276:18;263:32;314:18;355:2;347:6;344:14;341:34;;;371:1;368;361:12;341:34;409:6;398:9;394:22;384:32;;454:7;447:4;443:2;439:13;435:27;425:55;;476:1;473;466:12;425:55;516:2;503:16;542:2;534:6;531:14;528:34;;;558:1;555;548:12;528:34;611:7;606:2;596:6;593:1;589:14;585:2;581:23;577:32;574:45;571:65;;;632:1;629;622:12;571:65;663:2;659;655:11;645:21;;685:6;675:16;;;;;14:683;;;;;:::o;1081:591::-;1151:6;1159;1212:2;1200:9;1191:7;1187:23;1183:32;1180:52;;;1228:1;1225;1218:12;1180:52;1268:9;1255:23;1297:18;1338:2;1330:6;1327:14;1324:34;;;1354:1;1351;1344:12;1324:34;1392:6;1381:9;1377:22;1367:32;;1437:7;1430:4;1426:2;1422:13;1418:27;1408:55;;1459:1;1456;1449:12;1408:55;1499:2;1486:16;1525:2;1517:6;1514:14;1511:34;;;1541:1;1538;1531:12;1511:34;1586:7;1581:2;1572:6;1568:2;1564:15;1560:24;1557:37;1554:57;;;1607:1;1604;1597:12;1554:57;1638:2;1630:11;;;;;1660:6;;-1:-1:-1;1081:591:19;;-1:-1:-1;;;;1081:591:19:o;1677:180::-;1736:6;1789:2;1777:9;1768:7;1764:23;1760:32;1757:52;;;1805:1;1802;1795:12;1757:52;-1:-1:-1;1828:23:19;;1677:180;-1:-1:-1;1677:180:19:o;2252:127::-;2313:10;2308:3;2304:20;2301:1;2294:31;2344:4;2341:1;2334:15;2368:4;2365:1;2358:15;2384:921;2452:6;2505:2;2493:9;2484:7;2480:23;2476:32;2473:52;;;2521:1;2518;2511:12;2473:52;2561:9;2548:23;2590:18;2631:2;2623:6;2620:14;2617:34;;;2647:1;2644;2637:12;2617:34;2685:6;2674:9;2670:22;2660:32;;2730:7;2723:4;2719:2;2715:13;2711:27;2701:55;;2752:1;2749;2742:12;2701:55;2788:2;2775:16;2810:2;2806;2803:10;2800:36;;;2816:18;;:::i;:::-;2891:2;2885:9;2859:2;2945:13;;-1:-1:-1;;2941:22:19;;;2965:2;2937:31;2933:40;2921:53;;;2989:18;;;3009:22;;;2986:46;2983:72;;;3035:18;;:::i;:::-;3075:10;3071:2;3064:22;3110:2;3102:6;3095:18;3150:7;3145:2;3140;3136;3132:11;3128:20;3125:33;3122:53;;;3171:1;3168;3161:12;3122:53;3227:2;3222;3218;3214:11;3209:2;3201:6;3197:15;3184:46;3272:1;3250:15;;;3267:2;3246:24;3239:35;;;;-1:-1:-1;3254:6:19;2384:921;-1:-1:-1;;;;;2384:921:19:o;3310:422::-;3351:3;3389:5;3383:12;3416:6;3411:3;3404:19;3441:1;3451:162;3465:6;3462:1;3459:13;3451:162;;;3527:4;3583:13;;;3579:22;;3573:29;3555:11;;;3551:20;;3544:59;3480:12;3451:162;;;3455:3;3658:1;3651:4;3642:6;3637:3;3633:16;3629:27;3622:38;3721:4;3714:2;3710:7;3705:2;3697:6;3693:15;3689:29;3684:3;3680:39;3676:50;3669:57;;;3310:422;;;;:::o;3737:298::-;3920:6;3913:14;3906:22;3895:9;3888:41;3965:2;3960;3949:9;3945:18;3938:30;3869:4;3985:44;4025:2;4014:9;4010:18;4002:6;3985:44;:::i;:::-;3977:52;3737:298;-1:-1:-1;;;;3737:298:19:o;4040:127::-;4101:10;4096:3;4092:20;4089:1;4082:31;4132:4;4129:1;4122:15;4156:4;4153:1;4146:15;4172:344;4320:2;4305:18;;4353:1;4342:13;;4332:144;;4398:10;4393:3;4389:20;4386:1;4379:31;4433:4;4430:1;4423:15;4461:4;4458:1;4451:15;4332:144;4485:25;;;4172:344;:::o;4521:286::-;4580:6;4633:2;4621:9;4612:7;4608:23;4604:32;4601:52;;;4649:1;4646;4639:12;4601:52;4675:23;;-1:-1:-1;;;;;4727:31:19;;4717:42;;4707:70;;4773:1;4770;4763:12;4707:70;4796:5;4521:286;-1:-1:-1;;;4521:286:19:o;4812:273::-;4868:6;4921:2;4909:9;4900:7;4896:23;4892:32;4889:52;;;4937:1;4934;4927:12;4889:52;4976:9;4963:23;5029:5;5022:13;5015:21;5008:5;5005:32;4995:60;;5051:1;5048;5041:12;6427:127;6488:10;6483:3;6479:20;6476:1;6469:31;6519:4;6516:1;6509:15;6543:4;6540:1;6533:15;6559:225;6626:9;;;6647:11;;;6644:134;;;6700:10;6695:3;6691:20;6688:1;6681:31;6735:4;6732:1;6725:15;6763:4;6760:1;6753:15;6644:134;6559:225;;;;:::o;7529:767::-;7730:2;7719:9;7712:21;7775:6;7769:13;7764:2;7753:9;7749:18;7742:41;7837:2;7829:6;7825:15;7819:22;7814:2;7803:9;7799:18;7792:50;7906:6;7900:2;7892:6;7888:15;7882:22;7878:35;7873:2;7862:9;7858:18;7851:63;7693:4;7961:2;7953:6;7949:15;7943:22;7984:10;8049:2;8035:12;8031:21;8025:3;8014:9;8010:19;8003:50;8119:2;8112:3;8104:6;8100:16;8094:23;8090:32;8084:3;8073:9;8069:19;8062:61;;;8172:3;8164:6;8160:16;8154:23;8215:4;8208;8197:9;8193:20;8186:34;8237:53;8285:3;8274:9;8270:19;8254:14;8237:53;:::i;8301:184::-;8371:6;8424:2;8412:9;8403:7;8399:23;8395:32;8392:52;;;8440:1;8437;8430:12;8392:52;-1:-1:-1;8463:16:19;;8301:184;-1:-1:-1;8301:184:19:o;8490:209::-;8522:1;8548;8538:132;;8592:10;8587:3;8583:20;8580:1;8573:31;8627:4;8624:1;8617:15;8655:4;8652:1;8645:15;8538:132;-1:-1:-1;8684:9:19;;8490:209::o"},"gasEstimates":{"creation":{"codeDepositCost":"947000","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"52410","callbackGasLimit()":"2370","checkUpkeep(bytes)":"infinite","enterRaffel()":"infinite","getEnteranceFee()":"infinite","getInterval()":"infinite","getLatestTimeStamp()":"2371","getNumberOfPlayers()":"2424","getPlayers(uint256)":"4753","getRaffelState()":"2395","getRecentWinner()":"2371","keyHash()":"2362","lastRequestId()":"2405","numWords()":"2446","owner()":"2398","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite","requestConfirmations()":"2390","requestIds(uint256)":"4598","requestRandomWinner(bool)":"infinite","s_requests(uint256)":"2541","s_vrfCoordinator()":"2359","setCoordinator(address)":"30010","transferOwnership(address)":"30489"},"internal":{"fulfillRandomWords(uint256,uint256[] calldata)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","callbackGasLimit()":"24f74697","checkUpkeep(bytes)":"6e04ff0d","enterRaffel()":"0ff19fd7","getEnteranceFee()":"535bf50f","getInterval()":"91ad27b4","getLatestTimeStamp()":"320229eb","getNumberOfPlayers()":"fd6673f5","getPlayers(uint256)":"460e2049","getRaffelState()":"8a78da41","getRecentWinner()":"473f1ddc","keyHash()":"61728f39","lastRequestId()":"fc2a88c3","numWords()":"7ccfd7fc","owner()":"8da5cb5b","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestConfirmations()":"b0fb162f","requestIds(uint256)":"8796ba8c","requestRandomWinner(bool)":"9d52d89d","s_requests(uint256)":"a168fa89","s_vrfCoordinator()":"9eccacf6","setCoordinator(address)":"8ea98117","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteranceFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffel__NotOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffel__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffel__notEnoughEthEntered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfPlayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffelstate\",\"type\":\"uint256\"}],\"name\":\"Raffel__upKeepNotNeeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"raffelEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"winnerPicked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"winnerRandomRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRaffel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEnteranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfPlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffelState\",\"outputs\":[{\"internalType\":\"enum Raffel.RaffelState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enableNativePayment\",\"type\":\"bool\"}],\"name\":\"requestRandomWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_requests\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"check upkeep for the function  to return upkeepNeeded  true  time interval should be passed  atleast 1 player  subscription funded with link  lottery should be open\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"constructor\":{\"notice\":\"HARDCODED FOR SEPOLIA COORDINATOR: 0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625\"},\"getEnteranceFee()\":{\"notice\":\"view / pure functions \"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffel.sol\":\"Raffel\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function _preventExecution() internal view {\\n    // solhint-disable-next-line avoid-tx-origin\\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    _preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {AutomationBase} from \\\"./AutomationBase.sol\\\";\\nimport {AutomationCompatibleInterface} from \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n    // extraArgs will evolve to support new features\\n    bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n    struct ExtraArgsV1 {\\n        bool nativePayment;\\n    }\\n\\n    struct RandomWordsRequest {\\n        bytes32 keyHash;\\n        uint256 subId;\\n        uint16 requestConfirmations;\\n        uint32 callbackGasLimit;\\n        uint32 numWords;\\n        bytes extraArgs;\\n    }\\n\\n    function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n        return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n    }\\n}\\n\",\"keccak256\":\"0xf2694d53958860845918ffb3ef560851372f7fc8b108a574b28965a31b9cb05c\",\"license\":\"MIT\"},\"contracts/Raffel.sol\":{\"content\":\"/**  1. to join the lottery (with some amount)\\n *   2. pick the winner randomly - (verifiably random)\\n *   3. winner to be selected for every x minutes (automated)\\n\\n *    chainlink oracle (Randomness and chainlink Keeper)\\n*/\\n\\n// SPDX-License-Intifier: MIT\\npragma solidity ^0.8.19;\\n\\n//vrf\\nimport {VRFConsumerBaseV2Plus} from \\\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\\\";\\nimport {VRFV2PlusClient} from \\\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFCoordinatorV2Plus} from \\\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\\\";\\n//keeper\\nimport {AutomationCompatibleInterface} from \\\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\\\";\\n//errors\\nerror Raffel__notEnoughEthEntered();\\nerror Raffel__TransferFailed();\\nerror Raffel__NotOpen();\\nerror Raffel__upKeepNotNeeded(uint256 balance, uint256 numberOfPlayers, uint256 raffelstate);\\n\\n// inherit vrfconsumerbasev2plus from chainlink\\ncontract Raffel is VRFConsumerBaseV2Plus, AutomationCompatibleInterface {\\n    // type declaration\\n    enum RaffelState {\\n        open,\\n        calculating\\n    }\\n    // state variables\\n\\n    uint256 private immutable i_enteranceFee;\\n    address payable[] private s_players;\\n    struct RequestStatus {\\n        bool fulfilled; // whether the request has been successfully fulfilled\\n        bool exists; // whether a requestId exists\\n        uint256[] randomWords;\\n    }\\n    mapping(uint256 => RequestStatus) public s_requests;\\n\\n    uint256[] public requestIds;\\n    uint256 public lastRequestId;\\n    bytes32 public keyHash = 0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae;\\n    uint32 public callbackGasLimit = 100000;\\n    uint16 public requestConfirmations = 3;\\n    uint32 public numWords = 2;\\n    uint256 private immutable i_subscriptionId;\\n    IVRFCoordinatorV2Plus private immutable i_vrfCoordinator;\\n\\n    /////lottery variable\\n    address private s_recentWinner;\\n    RaffelState private s_raffelState;\\n    uint256 private s_lastTimeStamp;\\n    uint256 private immutable i_interval;\\n\\n    //events\\n    event raffelEnter(address indexed player);\\n    event winnerRandomRequest(uint256 requestId);\\n    event winnerPicked(address indexed winner);\\n\\n    /**\\n     * HARDCODED FOR SEPOLIA\\n     * COORDINATOR: 0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625\\n     */\\n    //constructor\\n    constructor(\\n        address vrfCoordinatorV2Address,\\n        uint256 subscriptionId,\\n        uint256 enteranceFee,\\n        uint256 interval\\n    ) VRFConsumerBaseV2Plus(vrfCoordinatorV2Address) {\\n        i_vrfCoordinator = IVRFCoordinatorV2Plus(vrfCoordinatorV2Address);\\n        i_subscriptionId = subscriptionId;\\n        i_enteranceFee = enteranceFee;\\n        s_raffelState = RaffelState.open;\\n        s_lastTimeStamp = block.timestamp;\\n        i_interval = interval;\\n    }\\n\\n    /*functions */\\n\\n    function enterRaffel() public payable {\\n        if (msg.value < i_enteranceFee) {\\n            revert Raffel__notEnoughEthEntered();\\n        }\\n        if (s_raffelState != RaffelState.open) {\\n            revert Raffel__NotOpen();\\n        }\\n        s_players.push(payable(msg.sender));\\n\\n        emit raffelEnter(msg.sender);\\n    }\\n\\n    /**\\n     * @dev\\n     *  check upkeep for the function  to return upkeepNeeded  true\\n     *  time interval should be passed\\n     *  atleast 1 player\\n     *  subscription funded with link\\n     *  lottery should be open\\n     */\\n\\n    function checkUpkeep(\\n        bytes memory /* checkdata */\\n    ) public override returns (bool upkeepNeeded, bytes memory /* performData */) {\\n        bool isOpen = (s_raffelState == RaffelState.open);\\n        bool isTimePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\\n        bool hasPlayers = (s_players.length > 0);\\n        bool hasBalance = (address(this).balance > 0);\\n\\n        upkeepNeeded = (isOpen && isTimePassed && hasPlayers && hasBalance);\\n        return (upkeepNeeded, \\\"0x0\\\");\\n    }\\n\\n    function performUpkeep(bytes calldata /* checkdata*/) public override {\\n        /** performupkeep function with this */\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\n        if (!upkeepNeeded) {\\n            revert Raffel__upKeepNotNeeded(\\n                address(this).balance,\\n                s_players.length,\\n                uint256(s_raffelState)\\n            );\\n        }\\n    }\\n\\n    function requestRandomWinner(bool enableNativePayment) external returns (uint256 requestId) {\\n        s_raffelState = RaffelState.calculating;\\n        requestId = s_vrfCoordinator.requestRandomWords(\\n            VRFV2PlusClient.RandomWordsRequest({\\n                keyHash: keyHash,\\n                subId: i_subscriptionId,\\n                requestConfirmations: requestConfirmations,\\n                callbackGasLimit: callbackGasLimit,\\n                numWords: numWords,\\n                extraArgs: VRFV2PlusClient._argsToBytes(\\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: enableNativePayment})\\n                )\\n            })\\n        );\\n        s_requests[requestId] = RequestStatus({\\n            randomWords: new uint256[](0),\\n            exists: true,\\n            fulfilled: false\\n        });\\n        requestIds.push(requestId);\\n        lastRequestId = requestId;\\n        emit winnerRandomRequest(requestId);\\n        return requestId;\\n    }\\n\\n    function fulfillRandomWords(\\n        uint256 /*requestId */,\\n        uint256[] calldata randomWords\\n    ) internal override {\\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\\n        address payable recentWinner = s_players[indexOfWinner];\\n        s_recentWinner = recentWinner;\\n        s_raffelState = RaffelState.open;\\n        s_players = new address payable[](0);\\n        s_lastTimeStamp = block.timestamp;\\n\\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\\\"\\\");\\n        if (!success) {\\n            revert Raffel__TransferFailed();\\n        }\\n        emit winnerPicked(recentWinner);\\n    }\\n\\n    /** view / pure functions */\\n\\n    function getEnteranceFee() public view returns (uint256) {\\n        return i_enteranceFee;\\n    }\\n\\n    function getPlayers(uint256 index) public view returns (address) {\\n        return s_players[index];\\n    }\\n\\n    function getRecentWinner() public view returns (address) {\\n        return s_recentWinner;\\n    }\\n\\n    function getRaffelState() public view returns (RaffelState) {\\n        return s_raffelState;\\n    }\\n\\n    function getNumberOfPlayers() public view returns (uint256) {\\n        return s_players.length;\\n    }\\n\\n    function getLatestTimeStamp() public view returns (uint256) {\\n        return s_lastTimeStamp;\\n    }\\n\\n    function getInterval() public view returns (uint256) {\\n        return i_interval;\\n    }\\n}\\n\",\"keccak256\":\"0x5c4d7fd8e58c62315c2fdd27afb6d5884def1155f6953762388d2db9a4d4e97b\"}},\"version\":1}","storageLayout":{"storage":[{"astId":97,"contract":"contracts/Raffel.sol:Raffel","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":99,"contract":"contracts/Raffel.sol:Raffel","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2400,"contract":"contracts/Raffel.sol:Raffel","label":"s_vrfCoordinator","offset":0,"slot":"2","type":"t_contract(IVRFCoordinatorV2Plus)2549"},{"astId":3558,"contract":"contracts/Raffel.sol:Raffel","label":"s_players","offset":0,"slot":"3","type":"t_array(t_address_payable)dyn_storage"},{"astId":3571,"contract":"contracts/Raffel.sol:Raffel","label":"s_requests","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(RequestStatus)3566_storage)"},{"astId":3574,"contract":"contracts/Raffel.sol:Raffel","label":"requestIds","offset":0,"slot":"5","type":"t_array(t_uint256)dyn_storage"},{"astId":3576,"contract":"contracts/Raffel.sol:Raffel","label":"lastRequestId","offset":0,"slot":"6","type":"t_uint256"},{"astId":3579,"contract":"contracts/Raffel.sol:Raffel","label":"keyHash","offset":0,"slot":"7","type":"t_bytes32"},{"astId":3582,"contract":"contracts/Raffel.sol:Raffel","label":"callbackGasLimit","offset":0,"slot":"8","type":"t_uint32"},{"astId":3585,"contract":"contracts/Raffel.sol:Raffel","label":"requestConfirmations","offset":4,"slot":"8","type":"t_uint16"},{"astId":3588,"contract":"contracts/Raffel.sol:Raffel","label":"numWords","offset":6,"slot":"8","type":"t_uint32"},{"astId":3595,"contract":"contracts/Raffel.sol:Raffel","label":"s_recentWinner","offset":10,"slot":"8","type":"t_address"},{"astId":3598,"contract":"contracts/Raffel.sol:Raffel","label":"s_raffelState","offset":30,"slot":"8","type":"t_enum(RaffelState)3553"},{"astId":3600,"contract":"contracts/Raffel.sol:Raffel","label":"s_lastTimeStamp","offset":0,"slot":"9","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IVRFCoordinatorV2Plus)2549":{"encoding":"inplace","label":"contract IVRFCoordinatorV2Plus","numberOfBytes":"20"},"t_enum(RaffelState)3553":{"encoding":"inplace","label":"enum Raffel.RaffelState","numberOfBytes":"1"},"t_mapping(t_uint256,t_struct(RequestStatus)3566_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Raffel.RequestStatus)","numberOfBytes":"32","value":"t_struct(RequestStatus)3566_storage"},"t_struct(RequestStatus)3566_storage":{"encoding":"inplace","label":"struct Raffel.RequestStatus","members":[{"astId":3560,"contract":"contracts/Raffel.sol:Raffel","label":"fulfilled","offset":0,"slot":"0","type":"t_bool"},{"astId":3562,"contract":"contracts/Raffel.sol:Raffel","label":"exists","offset":1,"slot":"0","type":"t_bool"},{"astId":3565,"contract":"contracts/Raffel.sol:Raffel","label":"randomWords","offset":0,"slot":"1","type":"t_array(t_uint256)dyn_storage"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"constructor":{"notice":"HARDCODED FOR SEPOLIA COORDINATOR: 0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625"},"getEnteranceFee()":{"notice":"view / pure functions "},"owner()":{"notice":"Get the current owner"},"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}}}}}